{
  "openapi": "3.0.1",
  "info": {
    "title": "WebTop Contacts",
    "contact": {
      "email": "dev-team@sonicle.com"
    },
    "version": "v2",
    "description": "This is Contacts service API enpoint."
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "security": [
    {
      "auth-basic": []
    },
    {
      "auth-bearer": []
    }
  ],
  "paths": {
    "/carddav/addressbooks": {
      "get": {
        "tags": [
          "dav"
        ],
        "summary": "List all address-books",
        "operationId": "getAddressBooks",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DavAddressBook"
                  }
                }
              }
            }
          }
        },
        "description": "List available AddressBooks."
      },
      "post": {
        "tags": [
          "dav"
        ],
        "summary": "Adds a new address-book",
        "operationId": "addAddressBook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DavAddressBookNew"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DavAddressBook"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body",
        "description": "Creates new AddressBook."
      }
    },
    "/carddav/addressbooks/{addressBookUid}": {
      "get": {
        "tags": [
          "dav"
        ],
        "summary": "Gets a single address-book",
        "operationId": "getAddressBook",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DavAddressBook"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {}
          },
          "404": {
            "description": "Address book not found",
            "content": {}
          }
        },
        "description": "Gets the specified AddressBook."
      },
      "put": {
        "tags": [
          "dav"
        ],
        "summary": "Updates an address-book",
        "operationId": "updateAddressBook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DavAddressBookUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "Invalid parameter",
            "content": {}
          },
          "404": {
            "description": "Address book not found",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body",
        "description": "Updates specified AddressBook."
      },
      "delete": {
        "tags": [
          "dav"
        ],
        "summary": "Deletes an address-book",
        "operationId": "deleteAddressBook",
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "Invalid parameter",
            "content": {}
          },
          "404": {
            "description": "Address book not found",
            "content": {}
          },
          "405": {
            "description": "Delete operation is not allowed",
            "content": {}
          }
        },
        "description": "Deletes specified AddressBook."
      },
      "parameters": [
        {
          "name": "addressBookUid",
          "in": "path",
          "description": "Address book UID",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "1234"
        }
      ]
    },
    "/carddav/addressbooks/{addressBookUid}/cards": {
      "get": {
        "tags": [
          "dav"
        ],
        "summary": "List all cards for a specific address-book",
        "operationId": "getCards",
        "parameters": [
          {
            "name": "hrefs",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DavCard"
                  }
                }
              }
            }
          }
        },
        "description": "List all Cards of specified AddressBook."
      },
      "post": {
        "tags": [
          "dav"
        ],
        "summary": "Adds a new card",
        "operationId": "addCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DavCardNew"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body",
        "description": "Creates new Card into specified AddressBook."
      },
      "parameters": [
        {
          "name": "addressBookUid",
          "in": "path",
          "description": "Address book UID",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "1234"
        }
      ]
    },
    "/carddav/addressbooks/{addressBookUid}/cards/changes": {
      "get": {
        "tags": [
          "dav"
        ],
        "summary": "Get card changes",
        "description": "Returns changed cards (added/modified/deleted) since the specified syncToken. If token is not provided, the initial sync configuration will be returned.",
        "operationId": "getCardsChanges",
        "parameters": [
          {
            "name": "syncToken",
            "in": "query",
            "description": "Marks changes starting point",
            "schema": {
              "type": "string"
            },
            "example": "20180416130954"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the number of returned results",
            "schema": {
              "type": "integer"
            },
            "example": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DavCardsChanges"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {}
          }
        }
      },
      "parameters": [
        {
          "name": "addressBookUid",
          "in": "path",
          "description": "Address book UID",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "1234"
        }
      ]
    },
    "/carddav/addressbooks/{addressBookUid}/cards/{href}": {
      "get": {
        "tags": [
          "dav"
        ],
        "summary": "Get a single card",
        "operationId": "getCard",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DavCard"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {}
          },
          "404": {
            "description": "Card not found",
            "content": {}
          }
        },
        "description": "Gets specified Card."
      },
      "put": {
        "tags": [
          "dav"
        ],
        "summary": "Updates a card",
        "operationId": "updateCard",
        "requestBody": {
          "content": {
            "text/vcard": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "Invalid parameter",
            "content": {}
          },
          "404": {
            "description": "Card not found",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body",
        "description": "Updates specified Card."
      },
      "delete": {
        "tags": [
          "dav"
        ],
        "summary": "Deletes a card",
        "operationId": "deleteCard",
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "Invalid parameter",
            "content": {}
          },
          "404": {
            "description": "Card not found",
            "content": {}
          }
        },
        "description": "Deletes specified Card."
      },
      "parameters": [
        {
          "name": "addressBookUid",
          "in": "path",
          "description": "Address book UID",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "1234"
        },
        {
          "name": "href",
          "in": "path",
          "description": "Card reference URI",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/eas/folders": {
      "get": {
        "tags": [
          "eas"
        ],
        "summary": "List all folders",
        "operationId": "getFolders",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EasSyncFolder"
                  }
                }
              }
            }
          }
        },
        "description": "Returns a list of available Categories with enabled synchronization."
      }
    },
    "/eas/folders/{folderId}/messages-stats": {
      "get": {
        "tags": [
          "eas"
        ],
        "summary": "List all messages for a specific folder",
        "operationId": "getMessagesStats",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EasSyncContactStat"
                  }
                }
              }
            }
          }
        },
        "description": "Returns sync informations for the specified Category."
      },
      "parameters": [
        {
          "name": "folderId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "1234"
        }
      ]
    },
    "/eas/folders/{folderId}/messages": {
      "post": {
        "tags": [
          "eas"
        ],
        "summary": "Adds a message",
        "operationId": "addMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EasSyncContactUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EasSyncContactStat"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body",
        "description": "Add new Contact into specified Category."
      },
      "parameters": [
        {
          "name": "folderId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "1234"
        }
      ]
    },
    "/eas/folders/{folderId}/messages/{id}": {
      "get": {
        "tags": [
          "eas"
        ],
        "summary": "Get a single message",
        "operationId": "getMessage",
        "parameters": [
          {
            "name": "picture",
            "in": "query",
            "description": "Determine whether to return picture data",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EasSyncContact"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {}
          },
          "404": {
            "description": "Contact not found",
            "content": {}
          }
        },
        "description": "Gets the specified Contact."
      },
      "put": {
        "tags": [
          "eas"
        ],
        "summary": "Updates a message",
        "operationId": "updateMessage",
        "parameters": [
          {
            "name": "picture",
            "in": "query",
            "description": "Determine whether to update picture data",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EasSyncContactUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EasSyncContactStat"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameter",
            "content": {}
          },
          "404": {
            "description": "Contact not found",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body",
        "description": "Updates the specified Contact."
      },
      "delete": {
        "tags": [
          "eas"
        ],
        "summary": "Deletes a message",
        "operationId": "deleteMessage",
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "Invalid parameter",
            "content": {}
          },
          "404": {
            "description": "Contact not found",
            "content": {}
          }
        },
        "description": "Deletes the specified Contact."
      },
      "parameters": [
        {
          "name": "folderId",
          "in": "path",
          "description": "Folder ID",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "1234"
        },
        {
          "name": "id",
          "in": "path",
          "description": "Message ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "required": [
          "code"
        ],
        "x-stoplight": {
          "id": "64e40e16f35e3"
        },
        "type": "object",
        "properties": {
          "code": {
            "maximum": 599,
            "minimum": 400,
            "type": "integer"
          },
          "description": {
            "type": "string",
            "example": "Bad query parameter [$size]: Invalid integer value [abc]"
          }
        },
        "description": "This general detailed error structure is used throughout this API.",
        "title": ""
      },
      "DavAddressBook": {
        "type": "object",
        "description": "Bean for carry addressbook's fields",
        "properties": {
          "id": {
            "type": "string",
            "description": "AddressBook ID (internal)"
          },
          "uid": {
            "type": "string",
            "description": "AddressBook UID (public)"
          },
          "displayName": {
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "syncToken": {
            "type": "string",
            "description": "Current sync token"
          },
          "aclFol": {
            "type": "string",
            "description": "ACL info for folder itself"
          },
          "aclEle": {
            "type": "string",
            "description": "ACL info for folder elements"
          },
          "ownerUsername": {
            "type": "string",
            "description": "The owner profile's username"
          }
        },
        "required": [
          "id",
          "uid",
          "displayName",
          "syncToken",
          "aclFol",
          "aclEle",
          "ownerUsername"
        ]
      },
      "DavAddressBookUpdate": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "New value for displayName"
          },
          "description": {
            "type": "string",
            "description": "New value for description"
          },
          "updatedFields": {
            "type": "array",
            "description": "Specifies which fields have been updated",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Bean for carry addressbook's updateable fields"
      },
      "DavAddressBookNew": {
        "required": [
          "displayName"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "description": "Bean for carry addressbook's fields"
      },
      "DavCard": {
        "type": "object",
        "description": "Bean for carry card fields",
        "properties": {
          "id": {
            "type": "string",
            "description": "Card ID (internal)"
          },
          "uid": {
            "type": "string",
            "description": "Card UID (public)"
          },
          "href": {
            "type": "string",
            "description": "Reference URI"
          },
          "lastModified": {
            "type": "integer",
            "description": "Last modification time (unix timestamp)",
            "format": "int64"
          },
          "etag": {
            "type": "string",
            "description": "Revision tag"
          },
          "size": {
            "type": "integer",
            "description": "Size (in bytes) of card data"
          },
          "vcard": {
            "type": "string",
            "description": "Card data (vCard format)"
          }
        },
        "required": [
          "id",
          "uid",
          "href"
        ]
      },
      "DavCardNew": {
        "required": [
          "href",
          "vcard"
        ],
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Reference URI"
          },
          "vcard": {
            "type": "string",
            "description": "Card data (vCard format)"
          }
        },
        "description": "Bean for carry new card fields"
      },
      "DavCardChanged": {
        "type": "object",
        "description": "Bean for carry fields of card that have been changed",
        "properties": {
          "id": {
            "type": "string",
            "description": "Card ID (internal)"
          },
          "href": {
            "type": "string",
            "description": "Reference URI"
          },
          "etag": {
            "type": "string",
            "description": "Revision tag"
          }
        },
        "required": [
          "id",
          "href",
          "etag"
        ]
      },
      "DavCardsChanges": {
        "required": [
          "deleted",
          "inserted",
          "syncToken",
          "updated"
        ],
        "type": "object",
        "properties": {
          "syncToken": {
            "type": "string",
            "description": "Current sync token"
          },
          "inserted": {
            "type": "array",
            "description": "Items that have been inserted",
            "items": {
              "$ref": "#/components/schemas/DavCardChanged"
            }
          },
          "updated": {
            "type": "array",
            "description": "Items that have been updated",
            "items": {
              "$ref": "#/components/schemas/DavCardChanged"
            }
          },
          "deleted": {
            "type": "array",
            "description": "Items that have been deleted",
            "items": {
              "$ref": "#/components/schemas/DavCardChanged"
            }
          }
        },
        "description": "Bean for carry card collection changes"
      },
      "EasSyncFolder": {
        "type": "object",
        "description": "Bean for carry folder's fields",
        "properties": {
          "id": {
            "type": "string",
            "description": "AddressBook ID (internal)"
          },
          "displayName": {
            "type": "string",
            "description": "Display name"
          },
          "etag": {
            "type": "string",
            "description": "Revision tag"
          },
          "deflt": {
            "type": "boolean",
            "description": "Specifies if marked as predefined folder"
          },
          "foAcl": {
            "type": "string",
            "description": "ACL info for folder itself"
          },
          "elAcl": {
            "type": "string",
            "description": "ACL info for folder elements"
          },
          "ownerId": {
            "type": "string",
            "description": "The owner profile ID"
          }
        },
        "required": [
          "id",
          "displayName",
          "etag",
          "foAcl",
          "elAcl",
          "ownerId"
        ]
      },
      "EasSyncContactStat": {
        "type": "object",
        "description": "Bean for carry messageStat fields",
        "properties": {
          "id": {
            "type": "string",
            "description": "Message ID (internal)"
          },
          "etag": {
            "type": "string",
            "description": "Revision tag"
          }
        },
        "required": [
          "id",
          "etag"
        ]
      },
      "EasSyncContact": {
        "type": "object",
        "description": "Bean for carry messageStat fields",
        "properties": {
          "id": {
            "type": "string",
            "description": "Message ID (internal)"
          },
          "etag": {
            "type": "string",
            "description": "Revision tag"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "firstName": {
            "type": "string",
            "description": "First name"
          },
          "lastName": {
            "type": "string",
            "description": "Last name"
          },
          "nickname": {
            "type": "string",
            "description": "Nickname"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile phone"
          },
          "pager1": {
            "type": "string",
            "description": "Pager 1"
          },
          "pager2": {
            "type": "string",
            "description": "Pager 2"
          },
          "email1": {
            "type": "string",
            "description": "Email address 1"
          },
          "email2": {
            "type": "string",
            "description": "Email address 2"
          },
          "email3": {
            "type": "string",
            "description": "Email address 3"
          },
          "im1": {
            "type": "string",
            "description": "Instant Msg. 1"
          },
          "im2": {
            "type": "string",
            "description": "Instant Msg. 2"
          },
          "im3": {
            "type": "string",
            "description": "Instant Msg. 3"
          },
          "workAddress": {
            "type": "string",
            "description": "Business address"
          },
          "workPostalCode": {
            "type": "string",
            "description": "Business postal code"
          },
          "workCity": {
            "type": "string",
            "description": "Business city"
          },
          "workState": {
            "type": "string",
            "description": "Business state/province"
          },
          "workCountry": {
            "type": "string",
            "description": "Business country"
          },
          "workTelephone1": {
            "type": "string",
            "description": "Business telephone 1"
          },
          "workTelephone2": {
            "type": "string",
            "description": "Business telephone 2"
          },
          "workFax": {
            "type": "string",
            "description": "Business fax"
          },
          "homeAddress": {
            "type": "string",
            "description": "Home address"
          },
          "homePostalCode": {
            "type": "string",
            "description": "Home postal code"
          },
          "homeCity": {
            "type": "string",
            "description": "Home city"
          },
          "homeState": {
            "type": "string",
            "description": "Home state"
          },
          "homeCountry": {
            "type": "string",
            "description": "Home country"
          },
          "homeTelephone1": {
            "type": "string",
            "description": "Home telephone 1"
          },
          "homeTelephone2": {
            "type": "string",
            "description": "Home telephone 2"
          },
          "homeFax": {
            "type": "string",
            "description": "Home fax"
          },
          "otherAddress": {
            "type": "string",
            "description": "Other address"
          },
          "otherPostalCode": {
            "type": "string",
            "description": "Other postal code"
          },
          "otherCity": {
            "type": "string",
            "description": "Other city"
          },
          "otherState": {
            "type": "string",
            "description": "Other state"
          },
          "otherCountry": {
            "type": "string",
            "description": "Other country"
          },
          "companyId": {
            "type": "string",
            "description": "Company ID"
          },
          "companyName": {
            "type": "string",
            "description": "Company name"
          },
          "function": {
            "type": "string",
            "description": "Job title"
          },
          "department": {
            "type": "string",
            "description": "Department"
          },
          "manager": {
            "type": "string",
            "description": "Manager name"
          },
          "assistant": {
            "type": "string",
            "description": "Assistant name"
          },
          "assistantTelephone": {
            "type": "string",
            "description": "Assistant telephone"
          },
          "partner": {
            "type": "string",
            "description": "Partner"
          },
          "birthday": {
            "type": "string",
            "description": "Birthday date (ISO date YYYYMMDD)"
          },
          "anniversary": {
            "type": "string",
            "description": "Anniversary date (ISO date YYYYMMDD)"
          },
          "url": {
            "type": "string",
            "description": "Web-site URL"
          },
          "notes": {
            "type": "string",
            "description": "Notes"
          },
          "picture": {
            "type": "string",
            "description": "Image base64 data URI"
          }
        },
        "required": [
          "id",
          "etag"
        ]
      },
      "EasSyncContactUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "firstName": {
            "type": "string",
            "description": "First name"
          },
          "lastName": {
            "type": "string",
            "description": "Last name"
          },
          "nickname": {
            "type": "string",
            "description": "Nickname"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile phone"
          },
          "pager1": {
            "type": "string",
            "description": "Pager 1"
          },
          "pager2": {
            "type": "string",
            "description": "Pager 2"
          },
          "email1": {
            "type": "string",
            "description": "Email address 1"
          },
          "email2": {
            "type": "string",
            "description": "Email address 2"
          },
          "email3": {
            "type": "string",
            "description": "Email address 3"
          },
          "im1": {
            "type": "string",
            "description": "Instant Msg. 1"
          },
          "im2": {
            "type": "string",
            "description": "Instant Msg. 2"
          },
          "im3": {
            "type": "string",
            "description": "Instant Msg. 3"
          },
          "workAddress": {
            "type": "string",
            "description": "Business address"
          },
          "workPostalCode": {
            "type": "string",
            "description": "Business postal code"
          },
          "workCity": {
            "type": "string",
            "description": "Business city"
          },
          "workState": {
            "type": "string",
            "description": "Business state/province"
          },
          "workCountry": {
            "type": "string",
            "description": "Business country"
          },
          "workTelephone1": {
            "type": "string",
            "description": "Business telephone 1"
          },
          "workTelephone2": {
            "type": "string",
            "description": "Business telephone 2"
          },
          "workFax": {
            "type": "string",
            "description": "Business fax"
          },
          "homeAddress": {
            "type": "string",
            "description": "Home address"
          },
          "homePostalCode": {
            "type": "string",
            "description": "Home postal code"
          },
          "homeCity": {
            "type": "string",
            "description": "Home city"
          },
          "homeState": {
            "type": "string",
            "description": "Home state"
          },
          "homeCountry": {
            "type": "string",
            "description": "Home country"
          },
          "homeTelephone1": {
            "type": "string",
            "description": "Home telephone 1"
          },
          "homeTelephone2": {
            "type": "string",
            "description": "Home telephone 2"
          },
          "homeFax": {
            "type": "string",
            "description": "Home fax"
          },
          "otherAddress": {
            "type": "string",
            "description": "Other address"
          },
          "otherPostalCode": {
            "type": "string",
            "description": "Other postal code"
          },
          "otherCity": {
            "type": "string",
            "description": "Other city"
          },
          "otherState": {
            "type": "string",
            "description": "Other state"
          },
          "otherCountry": {
            "type": "string",
            "description": "Other country"
          },
          "companyId": {
            "type": "string",
            "description": "Company ID"
          },
          "companyName": {
            "type": "string",
            "description": "Company name"
          },
          "function": {
            "type": "string",
            "description": "Job title"
          },
          "department": {
            "type": "string",
            "description": "Department"
          },
          "manager": {
            "type": "string",
            "description": "Manager name"
          },
          "assistant": {
            "type": "string",
            "description": "Assistant name"
          },
          "assistantTelephone": {
            "type": "string",
            "description": "Assistant telephone"
          },
          "partner": {
            "type": "string",
            "description": "Partner"
          },
          "birthday": {
            "type": "string",
            "description": "Birthday date (ISO date YYYYMMDD)"
          },
          "anniversary": {
            "type": "string",
            "description": "Anniversary date (ISO date YYYYMMDD)"
          },
          "url": {
            "type": "string",
            "description": "Web-site URL"
          },
          "notes": {
            "type": "string",
            "description": "Notes"
          },
          "picture": {
            "type": "string",
            "description": "Image base64 data URI"
          }
        },
        "description": "Bean for carry message's updateable fields"
      }
    },
    "securitySchemes": {
      "auth-basic": {
        "type": "http",
        "scheme": "basic"
      },
      "auth-bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "dav"
    },
    {
      "name": "eas"
    }
  ]
}