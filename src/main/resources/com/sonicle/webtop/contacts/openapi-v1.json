{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "WebTop Contacts",
    "contact": {
      "email": "dev-team@sonicle.com"
    }
  },
  "security": [
    {
      "Basic authentication": []
    }
  ],
  "paths": {
    "/carddav/addressbooks": {
      "get": {
        "tags": [
          "dav-addressbooks"
        ],
        "summary": "List all address books",
        "operationId": "getAddressBooks",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddressBook"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dav-addressbooks"
        ],
        "summary": "Adds a new address book",
        "operationId": "addAddressBook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressBookNew"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AddressBook"
            }
          }
        }
      }
    },
    "/carddav/addressbooks/{addressBookUid}": {
      "get": {
        "tags": [
          "dav-addressbooks"
        ],
        "summary": "Gets a single address book",
        "operationId": "getAddressBook",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AddressBook"
            }
          },
          "400": {
            "description": "Invalid parameter"
          },
          "404": {
            "description": "Address book not found"
          }
        }
      },
      "put": {
        "tags": [
          "dav-addressbooks"
        ],
        "summary": "Updates an address book",
        "operationId": "updateAddressBook",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressBookUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid parameter"
          },
          "404": {
            "description": "Address book not found"
          }
        }
      },
      "delete": {
        "tags": [
          "dav-addressbooks"
        ],
        "summary": "Deletes an address book",
        "operationId": "deleteAddressBook",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid parameter"
          },
          "404": {
            "description": "Address book not found"
          },
          "405": {
            "description": "Delete operation is not allowed"
          }
        }
      },
      "parameters": [
        {
          "name": "addressBookUid",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Address book UID",
          "x-example": "1234"
        }
      ]
    },
    "/carddav/addressbooks/{addressBookUid}/cards": {
      "get": {
        "tags": [
          "dav-cards"
        ],
        "summary": "List all cards for a specific addressbook",
        "operationId": "getCards",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hrefs",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Card"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dav-cards"
        ],
        "summary": "Adds a new card",
        "operationId": "addCard",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardNew"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          }
        }
      },
      "parameters": [
        {
          "name": "addressBookUid",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Address book UID",
          "x-example": "1234"
        }
      ]
    },
    "/carddav/addressbooks/{addressBookUid}/cards/changes": {
      "get": {
        "tags": [
          "dav-cards"
        ],
        "summary": "Get card changes",
        "description": "Returns changed cards (added/modified/deleted) since the specified syncToken. If token is not provided, the initial sync configuration will be returned.",
        "operationId": "getCardsChanges",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "syncToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Marks changes starting point",
            "x-example": "20180416130954"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Limits the number of returned results",
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CardsChanges"
            }
          },
          "400": {
            "description": "Invalid parameter"
          }
        }
      },
      "parameters": [
        {
          "name": "addressBookUid",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Address book UID",
          "x-example": "1234"
        }
      ]
    },
    "/carddav/addressbooks/{addressBookUid}/cards/{href}": {
      "get": {
        "tags": [
          "dav-cards"
        ],
        "summary": "Get a single card",
        "operationId": "getCard",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          },
          "400": {
            "description": "Invalid parameter"
          },
          "404": {
            "description": "Card not found"
          }
        }
      },
      "put": {
        "tags": [
          "dav-cards"
        ],
        "summary": "Updates a card",
        "operationId": "updateCard",
        "consumes": [
          "text/vcard"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid parameter"
          },
          "404": {
            "description": "Card not found"
          }
        }
      },
      "delete": {
        "tags": [
          "dav-cards"
        ],
        "summary": "Deletes a card",
        "operationId": "deleteCard",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid parameter"
          },
          "404": {
            "description": "Card not found"
          }
        }
      },
      "parameters": [
        {
          "name": "addressBookUid",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Address book UID",
          "x-example": "1234"
        },
        {
          "name": "href",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Card reference URI"
        }
      ]
    },
    "/eas/folders": {
      "get": {
        "tags": [
          "eas-folders"
        ],
        "summary": "List all folders",
        "operationId": "getFolders",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SyncFolder"
              }
            }
          }
        }
      }
    },
    "/eas/folders/{folderId}/messages-stats": {
      "get": {
        "tags": [
          "eas-messages"
        ],
        "summary": "List all messages for a specific folder",
        "operationId": "getMessagesStats",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SyncContactStat"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "folderId",
          "in": "path",
          "required": true,
          "type": "integer",
          "x-example": 1234
        }
      ]
    },
    "/eas/folders/{folderId}/messages": {
      "post": {
        "tags": [
          "eas-messages"
        ],
        "summary": "Adds a message",
        "operationId": "addMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SyncContactUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SyncContactStat"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "folderId",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "Folder ID",
          "x-example": 1234
        }
      ]
    },
    "/eas/folders/{folderId}/messages/{id}": {
      "get": {
        "tags": [
          "eas-messages"
        ],
        "summary": "Get a single message",
        "operationId": "getMessage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "picture",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Determine whether to return picture data"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SyncContact"
            }
          },
          "400": {
            "description": "Invalid parameter"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "put": {
        "tags": [
          "eas-messages"
        ],
        "summary": "Updates a message",
        "operationId": "updateMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "picture",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Determine whether to update picture data"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SyncContactUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SyncContactStat"
            }
          },
          "400": {
            "description": "Invalid parameter"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "delete": {
        "tags": [
          "eas-messages"
        ],
        "summary": "Deletes a message",
        "operationId": "deleteMessage",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid parameter"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "parameters": [
        {
          "name": "folderId",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "Folder ID",
          "x-example": 1234
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "Message ID"
        }
      ]
    }
  },
  "securityDefinitions": {
    "Basic authentication": {
      "type": "basic"
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "minimum": 400,
          "maximum": 599
        },
        "description": {
          "type": "string",
          "example": "Bad query parameter [$size]: Invalid integer value [abc]"
        }
      },
      "description": "This general detailed error structure is used throughout this API.",
      "example": "{\n  \"code\": 400,\n  \"description\": \"Bad query parameter [$size]: Invalid integer value [abc]\"\n}"
    },
    "AddressBook": {
      "type": "object",
      "required": [
        "aclEle",
        "aclFol",
        "displayName",
        "id",
        "ownerUsername",
        "syncToken",
        "uid"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "AddressBook ID (internal)"
        },
        "uid": {
          "type": "string",
          "description": "AddressBook UID (public)"
        },
        "displayName": {
          "type": "string",
          "description": "Display name"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "syncToken": {
          "type": "string",
          "description": "Current sync token"
        },
        "aclFol": {
          "type": "string",
          "description": "ACL info for folder itself"
        },
        "aclEle": {
          "type": "string",
          "description": "ACL info for folder elements"
        },
        "ownerUsername": {
          "type": "string",
          "description": "The owner profile's username"
        }
      },
      "description": "Bean for carry addressbook's fields"
    },
    "AddressBookNew": {
      "type": "object",
      "required": [
        "displayName"
      ],
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name"
        },
        "description": {
          "type": "string",
          "description": "Description"
        }
      },
      "description": "Bean for carry addressbook's fields"
    },
    "AddressBookUpdate": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "New value for displayName"
        },
        "description": {
          "type": "string",
          "description": "New value for description"
        },
        "updatedFields": {
          "type": "array",
          "description": "Specifies which fields have been updated",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Bean for carry addressbook's updateable fields"
    },
    "Card": {
      "type": "object",
      "required": [
        "href",
        "id",
        "uid"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Card ID (internal)"
        },
        "uid": {
          "type": "string",
          "description": "Card UID (public)"
        },
        "href": {
          "type": "string",
          "description": "Reference URI"
        },
        "lastModified": {
          "type": "integer",
          "format": "int64",
          "description": "Last modification time (unix timestamp)"
        },
        "etag": {
          "type": "string",
          "description": "Revision tag"
        },
        "size": {
          "type": "integer",
          "description": "Size (in bytes) of card data"
        },
        "vcard": {
          "type": "string",
          "description": "Card data (vCard format)"
        }
      },
      "description": "Bean for carry card fields"
    },
    "CardNew": {
      "type": "object",
      "required": [
        "href",
        "vcard"
      ],
      "properties": {
        "href": {
          "type": "string",
          "description": "Reference URI"
        },
        "vcard": {
          "type": "string",
          "description": "Card data (vCard format)"
        }
      },
      "description": "Bean for carry new card fields"
    },
    "CardChanged": {
      "type": "object",
      "required": [
        "etag",
        "href",
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Card ID (internal)"
        },
        "href": {
          "type": "string",
          "description": "Reference URI"
        },
        "etag": {
          "type": "string",
          "description": "Revision tag"
        }
      },
      "description": "Bean for carry fields of card that have been changed"
    },
    "CardsChanges": {
      "type": "object",
      "required": [
        "deleted",
        "inserted",
        "syncToken",
        "updated"
      ],
      "properties": {
        "syncToken": {
          "type": "string",
          "description": "Current sync token"
        },
        "inserted": {
          "type": "array",
          "description": "Items that have been inserted",
          "items": {
            "$ref": "#/definitions/CardChanged"
          }
        },
        "updated": {
          "type": "array",
          "description": "Items that have been updated",
          "items": {
            "$ref": "#/definitions/CardChanged"
          }
        },
        "deleted": {
          "type": "array",
          "description": "Items that have been deleted",
          "items": {
            "$ref": "#/definitions/CardChanged"
          }
        }
      },
      "description": "Bean for carry card collection changes"
    },
    "SyncFolder": {
      "type": "object",
      "required": [
        "displayName",
        "elAcl",
        "etag",
        "foAcl",
        "id",
        "ownerId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "AddressBook ID (internal)"
        },
        "displayName": {
          "type": "string",
          "description": "Display name"
        },
        "etag": {
          "type": "string",
          "description": "Revision tag"
        },
        "deflt": {
          "type": "boolean",
          "description": "Specifies if marked as predefined folder"
        },
        "foAcl": {
          "type": "string",
          "description": "ACL info for folder itself"
        },
        "elAcl": {
          "type": "string",
          "description": "ACL info for folder elements"
        },
        "ownerId": {
          "type": "string",
          "description": "The owner profile ID"
        }
      },
      "description": "Bean for carry folder's fields"
    },
    "SyncContactStat": {
      "type": "object",
      "required": [
        "etag",
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Message ID (internal)"
        },
        "etag": {
          "type": "string",
          "description": "Revision tag"
        }
      },
      "description": "Bean for carry messageStat fields"
    },
    "SyncContact": {
      "type": "object",
      "required": [
        "etag",
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Message ID (internal)"
        },
        "etag": {
          "type": "string",
          "description": "Revision tag"
        },
        "title": {
          "type": "string",
          "description": "Title"
        },
        "firstName": {
          "type": "string",
          "description": "First name"
        },
        "lastName": {
          "type": "string",
          "description": "Last name"
        },
        "nickname": {
          "type": "string",
          "description": "Nickname"
        },
        "mobile": {
          "type": "string",
          "description": "Mobile phone"
        },
        "pager1": {
          "type": "string",
          "description": "Pager 1"
        },
        "pager2": {
          "type": "string",
          "description": "Pager 2"
        },
        "email1": {
          "type": "string",
          "description": "Email address 1"
        },
        "email2": {
          "type": "string",
          "description": "Email address 2"
        },
        "email3": {
          "type": "string",
          "description": "Email address 3"
        },
        "im1": {
          "type": "string",
          "description": "Instant Msg. 1"
        },
        "im2": {
          "type": "string",
          "description": "Instant Msg. 2"
        },
        "im3": {
          "type": "string",
          "description": "Instant Msg. 3"
        },
        "workAddress": {
          "type": "string",
          "description": "Business address"
        },
        "workPostalCode": {
          "type": "string",
          "description": "Business postal code"
        },
        "workCity": {
          "type": "string",
          "description": "Business city"
        },
        "workState": {
          "type": "string",
          "description": "Business state/province"
        },
        "workCountry": {
          "type": "string",
          "description": "Business country"
        },
        "workTelephone1": {
          "type": "string",
          "description": "Business telephone 1"
        },
        "workTelephone2": {
          "type": "string",
          "description": "Business telephone 2"
        },
        "workFax": {
          "type": "string",
          "description": "Business fax"
        },
        "homeAddress": {
          "type": "string",
          "description": "Home address"
        },
        "homePostalCode": {
          "type": "string",
          "description": "Home postal code"
        },
        "homeCity": {
          "type": "string",
          "description": "Home city"
        },
        "homeState": {
          "type": "string",
          "description": "Home state"
        },
        "homeCountry": {
          "type": "string",
          "description": "Home country"
        },
        "homeTelephone1": {
          "type": "string",
          "description": "Home telephone 1"
        },
        "homeTelephone2": {
          "type": "string",
          "description": "Home telephone 2"
        },
        "homeFax": {
          "type": "string",
          "description": "Home fax"
        },
        "otherAddress": {
          "type": "string",
          "description": "Other address"
        },
        "otherPostalCode": {
          "type": "string",
          "description": "Other postal code"
        },
        "otherCity": {
          "type": "string",
          "description": "Other city"
        },
        "otherState": {
          "type": "string",
          "description": "Other state"
        },
        "otherCountry": {
          "type": "string",
          "description": "Other country"
        },
        "companyId": {
          "type": "string",
          "description": "Company ID"
        },
        "companyName": {
          "type": "string",
          "description": "Company name"
        },
        "function": {
          "type": "string",
          "description": "Job title"
        },
        "department": {
          "type": "string",
          "description": "Department"
        },
        "manager": {
          "type": "string",
          "description": "Manager name"
        },
        "assistant": {
          "type": "string",
          "description": "Assistant name"
        },
        "assistantTelephone": {
          "type": "string",
          "description": "Assistant telephone"
        },
        "partner": {
          "type": "string",
          "description": "Partner"
        },
        "birthday": {
          "type": "string",
          "description": "Birthday date (ISO date YYYYMMDD)"
        },
        "anniversary": {
          "type": "string",
          "description": "Anniversary date (ISO date YYYYMMDD)"
        },
        "url": {
          "type": "string",
          "description": "Web-site URL"
        },
        "notes": {
          "type": "string",
          "description": "Notes"
        },
        "picture": {
          "type": "string",
          "description": "Image base64 data URI"
        }
      },
      "description": "Bean for carry messageStat fields"
    },
    "SyncContactUpdate": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title"
        },
        "firstName": {
          "type": "string",
          "description": "First name"
        },
        "lastName": {
          "type": "string",
          "description": "Last name"
        },
        "nickname": {
          "type": "string",
          "description": "Nickname"
        },
        "mobile": {
          "type": "string",
          "description": "Mobile phone"
        },
        "pager1": {
          "type": "string",
          "description": "Pager 1"
        },
        "pager2": {
          "type": "string",
          "description": "Pager 2"
        },
        "email1": {
          "type": "string",
          "description": "Email address 1"
        },
        "email2": {
          "type": "string",
          "description": "Email address 2"
        },
        "email3": {
          "type": "string",
          "description": "Email address 3"
        },
        "im1": {
          "type": "string",
          "description": "Instant Msg. 1"
        },
        "im2": {
          "type": "string",
          "description": "Instant Msg. 2"
        },
        "im3": {
          "type": "string",
          "description": "Instant Msg. 3"
        },
        "workAddress": {
          "type": "string",
          "description": "Business address"
        },
        "workPostalCode": {
          "type": "string",
          "description": "Business postal code"
        },
        "workCity": {
          "type": "string",
          "description": "Business city"
        },
        "workState": {
          "type": "string",
          "description": "Business state/province"
        },
        "workCountry": {
          "type": "string",
          "description": "Business country"
        },
        "workTelephone1": {
          "type": "string",
          "description": "Business telephone 1"
        },
        "workTelephone2": {
          "type": "string",
          "description": "Business telephone 2"
        },
        "workFax": {
          "type": "string",
          "description": "Business fax"
        },
        "homeAddress": {
          "type": "string",
          "description": "Home address"
        },
        "homePostalCode": {
          "type": "string",
          "description": "Home postal code"
        },
        "homeCity": {
          "type": "string",
          "description": "Home city"
        },
        "homeState": {
          "type": "string",
          "description": "Home state"
        },
        "homeCountry": {
          "type": "string",
          "description": "Home country"
        },
        "homeTelephone1": {
          "type": "string",
          "description": "Home telephone 1"
        },
        "homeTelephone2": {
          "type": "string",
          "description": "Home telephone 2"
        },
        "homeFax": {
          "type": "string",
          "description": "Home fax"
        },
        "otherAddress": {
          "type": "string",
          "description": "Other address"
        },
        "otherPostalCode": {
          "type": "string",
          "description": "Other postal code"
        },
        "otherCity": {
          "type": "string",
          "description": "Other city"
        },
        "otherState": {
          "type": "string",
          "description": "Other state"
        },
        "otherCountry": {
          "type": "string",
          "description": "Other country"
        },
        "companyId": {
          "type": "string",
          "description": "Company ID"
        },
        "companyName": {
          "type": "string",
          "description": "Company name"
        },
        "function": {
          "type": "string",
          "description": "Job title"
        },
        "department": {
          "type": "string",
          "description": "Department"
        },
        "manager": {
          "type": "string",
          "description": "Manager name"
        },
        "assistant": {
          "type": "string",
          "description": "Assistant name"
        },
        "assistantTelephone": {
          "type": "string",
          "description": "Assistant telephone"
        },
        "partner": {
          "type": "string",
          "description": "Partner"
        },
        "birthday": {
          "type": "string",
          "description": "Birthday date (ISO date YYYYMMDD)"
        },
        "anniversary": {
          "type": "string",
          "description": "Anniversary date (ISO date YYYYMMDD)"
        },
        "url": {
          "type": "string",
          "description": "Web-site URL"
        },
        "notes": {
          "type": "string",
          "description": "Notes"
        },
        "picture": {
          "type": "string",
          "description": "Image base64 data URI"
        }
      },
      "description": "Bean for carry message's updateable fields"
    }
  }
}