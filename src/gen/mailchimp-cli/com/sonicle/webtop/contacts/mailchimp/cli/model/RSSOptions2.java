/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.SendingSchedule1;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.
 */
@Schema(description = "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class RSSOptions2 {
  @JsonProperty("feed_url")
  private String feedUrl = null;

  /**
   * The frequency of the RSS Campaign.
   */
  public enum FrequencyEnum {
    DAILY("daily"),
    WEEKLY("weekly"),
    MONTHLY("monthly");

    private String value;

    FrequencyEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static FrequencyEnum fromValue(String text) {
      for (FrequencyEnum b : FrequencyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("frequency")
  private FrequencyEnum frequency = null;

  @JsonProperty("schedule")
  private SendingSchedule1 schedule = null;

  @JsonProperty("last_sent")
  private DateTime lastSent = null;

  @JsonProperty("constrain_rss_img")
  private Boolean constrainRssImg = null;

  public RSSOptions2 feedUrl(String feedUrl) {
    this.feedUrl = feedUrl;
    return this;
  }

   /**
   * The URL for the RSS feed.
   * @return feedUrl
  **/
  @Schema(required = true, description = "The URL for the RSS feed.")
  public String getFeedUrl() {
    return feedUrl;
  }

  public void setFeedUrl(String feedUrl) {
    this.feedUrl = feedUrl;
  }

  public RSSOptions2 frequency(FrequencyEnum frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * The frequency of the RSS Campaign.
   * @return frequency
  **/
  @Schema(required = true, description = "The frequency of the RSS Campaign.")
  public FrequencyEnum getFrequency() {
    return frequency;
  }

  public void setFrequency(FrequencyEnum frequency) {
    this.frequency = frequency;
  }

  public RSSOptions2 schedule(SendingSchedule1 schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @Schema(description = "")
  public SendingSchedule1 getSchedule() {
    return schedule;
  }

  public void setSchedule(SendingSchedule1 schedule) {
    this.schedule = schedule;
  }

   /**
   * The date the campaign was last sent.
   * @return lastSent
  **/
  @Schema(description = "The date the campaign was last sent.")
  public DateTime getLastSent() {
    return lastSent;
  }

  public RSSOptions2 constrainRssImg(Boolean constrainRssImg) {
    this.constrainRssImg = constrainRssImg;
    return this;
  }

   /**
   * Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
   * @return constrainRssImg
  **/
  @Schema(description = "Whether to add CSS to images in the RSS feed to constrain their width in campaigns.")
  public Boolean isConstrainRssImg() {
    return constrainRssImg;
  }

  public void setConstrainRssImg(Boolean constrainRssImg) {
    this.constrainRssImg = constrainRssImg;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RSSOptions2 rsSOptions2 = (RSSOptions2) o;
    return Objects.equals(this.feedUrl, rsSOptions2.feedUrl) &&
        Objects.equals(this.frequency, rsSOptions2.frequency) &&
        Objects.equals(this.schedule, rsSOptions2.schedule) &&
        Objects.equals(this.lastSent, rsSOptions2.lastSent) &&
        Objects.equals(this.constrainRssImg, rsSOptions2.constrainRssImg);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedUrl, frequency, schedule, lastSent, constrainRssImg);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RSSOptions2 {\n");
    
    sb.append("    feedUrl: ").append(toIndentedString(feedUrl)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    lastSent: ").append(toIndentedString(lastSent)).append("\n");
    sb.append("    constrainRssImg: ").append(toIndentedString(constrainRssImg)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
