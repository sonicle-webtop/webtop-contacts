/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Settings for the campaign including the email subject, from name, and from email address.
 */
@Schema(description = "Settings for the campaign including the email subject, from name, and from email address.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class CampaignSettings {
  @JsonProperty("subject_line")
  private String subjectLine = null;

  @JsonProperty("preview_text")
  private String previewText = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("from_name")
  private String fromName = null;

  @JsonProperty("reply_to")
  private String replyTo = null;

  public CampaignSettings subjectLine(String subjectLine) {
    this.subjectLine = subjectLine;
    return this;
  }

   /**
   * The subject line for the campaign.
   * @return subjectLine
  **/
  @Schema(description = "The subject line for the campaign.")
  public String getSubjectLine() {
    return subjectLine;
  }

  public void setSubjectLine(String subjectLine) {
    this.subjectLine = subjectLine;
  }

  public CampaignSettings previewText(String previewText) {
    this.previewText = previewText;
    return this;
  }

   /**
   * The preview text for the campaign.
   * @return previewText
  **/
  @Schema(description = "The preview text for the campaign.")
  public String getPreviewText() {
    return previewText;
  }

  public void setPreviewText(String previewText) {
    this.previewText = previewText;
  }

  public CampaignSettings title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the Automation.
   * @return title
  **/
  @Schema(description = "The title of the Automation.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public CampaignSettings fromName(String fromName) {
    this.fromName = fromName;
    return this;
  }

   /**
   * The &#x27;from&#x27; name for the Automation (not an email address).
   * @return fromName
  **/
  @Schema(description = "The 'from' name for the Automation (not an email address).")
  public String getFromName() {
    return fromName;
  }

  public void setFromName(String fromName) {
    this.fromName = fromName;
  }

  public CampaignSettings replyTo(String replyTo) {
    this.replyTo = replyTo;
    return this;
  }

   /**
   * The reply-to email address for the Automation.
   * @return replyTo
  **/
  @Schema(description = "The reply-to email address for the Automation.")
  public String getReplyTo() {
    return replyTo;
  }

  public void setReplyTo(String replyTo) {
    this.replyTo = replyTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignSettings campaignSettings = (CampaignSettings) o;
    return Objects.equals(this.subjectLine, campaignSettings.subjectLine) &&
        Objects.equals(this.previewText, campaignSettings.previewText) &&
        Objects.equals(this.title, campaignSettings.title) &&
        Objects.equals(this.fromName, campaignSettings.fromName) &&
        Objects.equals(this.replyTo, campaignSettings.replyTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subjectLine, previewText, title, fromName, replyTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignSettings {\n");
    
    sb.append("    subjectLine: ").append(toIndentedString(subjectLine)).append("\n");
    sb.append("    previewText: ").append(toIndentedString(previewText)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
