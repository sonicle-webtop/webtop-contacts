/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.Address1;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Information about a specific customer.
 */
@Schema(description = "Information about a specific customer.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class EcommerceCustomer2 {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("email_address")
  private String emailAddress = null;

  @JsonProperty("opt_in_status")
  private Boolean optInStatus = null;

  @JsonProperty("company")
  private String company = null;

  @JsonProperty("first_name")
  private String firstName = null;

  @JsonProperty("last_name")
  private String lastName = null;

  @JsonProperty("address")
  private Address1 address = null;

  public EcommerceCustomer2 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A unique identifier for the customer. Limited to 50 characters.
   * @return id
  **/
  @Schema(required = true, description = "A unique identifier for the customer. Limited to 50 characters.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EcommerceCustomer2 emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * The customer&#x27;s email address.
   * @return emailAddress
  **/
  @Schema(required = true, description = "The customer's email address.")
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  public EcommerceCustomer2 optInStatus(Boolean optInStatus) {
    this.optInStatus = optInStatus;
    return this;
  }

   /**
   * The customer&#x27;s opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don&#x27;t opt in to your Mailchimp list [will be added as &#x60;Transactional&#x60; members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
   * @return optInStatus
  **/
  @Schema(required = true, description = "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).")
  public Boolean isOptInStatus() {
    return optInStatus;
  }

  public void setOptInStatus(Boolean optInStatus) {
    this.optInStatus = optInStatus;
  }

  public EcommerceCustomer2 company(String company) {
    this.company = company;
    return this;
  }

   /**
   * The customer&#x27;s company.
   * @return company
  **/
  @Schema(description = "The customer's company.")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public EcommerceCustomer2 firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * The customer&#x27;s first name.
   * @return firstName
  **/
  @Schema(description = "The customer's first name.")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public EcommerceCustomer2 lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * The customer&#x27;s last name.
   * @return lastName
  **/
  @Schema(description = "The customer's last name.")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public EcommerceCustomer2 address(Address1 address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public Address1 getAddress() {
    return address;
  }

  public void setAddress(Address1 address) {
    this.address = address;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EcommerceCustomer2 ecommerceCustomer2 = (EcommerceCustomer2) o;
    return Objects.equals(this.id, ecommerceCustomer2.id) &&
        Objects.equals(this.emailAddress, ecommerceCustomer2.emailAddress) &&
        Objects.equals(this.optInStatus, ecommerceCustomer2.optInStatus) &&
        Objects.equals(this.company, ecommerceCustomer2.company) &&
        Objects.equals(this.firstName, ecommerceCustomer2.firstName) &&
        Objects.equals(this.lastName, ecommerceCustomer2.lastName) &&
        Objects.equals(this.address, ecommerceCustomer2.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, emailAddress, optInStatus, company, firstName, lastName, address);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EcommerceCustomer2 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    optInStatus: ").append(toIndentedString(optInStatus)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
