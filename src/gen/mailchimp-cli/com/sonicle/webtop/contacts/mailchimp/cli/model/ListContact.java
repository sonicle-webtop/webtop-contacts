/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * [Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/) to comply with international spam laws.
 */
@Schema(description = "[Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/) to comply with international spam laws.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class ListContact {
  @JsonProperty("company")
  private String company = null;

  @JsonProperty("address1")
  private String address1 = null;

  @JsonProperty("address2")
  private String address2 = null;

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("zip")
  private String zip = null;

  @JsonProperty("country")
  private String country = null;

  @JsonProperty("phone")
  private String phone = null;

  public ListContact company(String company) {
    this.company = company;
    return this;
  }

   /**
   * The company name for the list.
   * @return company
  **/
  @Schema(required = true, description = "The company name for the list.")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public ListContact address1(String address1) {
    this.address1 = address1;
    return this;
  }

   /**
   * The street address for the list contact.
   * @return address1
  **/
  @Schema(required = true, description = "The street address for the list contact.")
  public String getAddress1() {
    return address1;
  }

  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public ListContact address2(String address2) {
    this.address2 = address2;
    return this;
  }

   /**
   * The street address for the list contact.
   * @return address2
  **/
  @Schema(description = "The street address for the list contact.")
  public String getAddress2() {
    return address2;
  }

  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  public ListContact city(String city) {
    this.city = city;
    return this;
  }

   /**
   * The city for the list contact.
   * @return city
  **/
  @Schema(required = true, description = "The city for the list contact.")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public ListContact state(String state) {
    this.state = state;
    return this;
  }

   /**
   * The state for the list contact.
   * @return state
  **/
  @Schema(description = "The state for the list contact.")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public ListContact zip(String zip) {
    this.zip = zip;
    return this;
  }

   /**
   * The postal or zip code for the list contact.
   * @return zip
  **/
  @Schema(description = "The postal or zip code for the list contact.")
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }

  public ListContact country(String country) {
    this.country = country;
    return this;
  }

   /**
   * A two-character ISO3166 country code. Defaults to US if invalid.
   * @return country
  **/
  @Schema(required = true, description = "A two-character ISO3166 country code. Defaults to US if invalid.")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public ListContact phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * The phone number for the list contact.
   * @return phone
  **/
  @Schema(description = "The phone number for the list contact.")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListContact listContact = (ListContact) o;
    return Objects.equals(this.company, listContact.company) &&
        Objects.equals(this.address1, listContact.address1) &&
        Objects.equals(this.address2, listContact.address2) &&
        Objects.equals(this.city, listContact.city) &&
        Objects.equals(this.state, listContact.state) &&
        Objects.equals(this.zip, listContact.zip) &&
        Objects.equals(this.country, listContact.country) &&
        Objects.equals(this.phone, listContact.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(company, address1, address2, city, state, zip, country, phone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListContact {\n");
    
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
