/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Stats for Campaign B.
 */
@Schema(description = "Stats for Campaign B.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class CampaignB {
  @JsonProperty("bounces")
  private Integer bounces = null;

  @JsonProperty("abuse_reports")
  private Integer abuseReports = null;

  @JsonProperty("unsubs")
  private Integer unsubs = null;

  @JsonProperty("recipient_clicks")
  private Integer recipientClicks = null;

  @JsonProperty("forwards")
  private Integer forwards = null;

  @JsonProperty("forwards_opens")
  private Integer forwardsOpens = null;

  @JsonProperty("opens")
  private Integer opens = null;

  @JsonProperty("last_open")
  private String lastOpen = null;

  @JsonProperty("unique_opens")
  private Integer uniqueOpens = null;

  public CampaignB bounces(Integer bounces) {
    this.bounces = bounces;
    return this;
  }

   /**
   * Bounces for Campaign B.
   * @return bounces
  **/
  @Schema(description = "Bounces for Campaign B.")
  public Integer getBounces() {
    return bounces;
  }

  public void setBounces(Integer bounces) {
    this.bounces = bounces;
  }

  public CampaignB abuseReports(Integer abuseReports) {
    this.abuseReports = abuseReports;
    return this;
  }

   /**
   * Abuse reports for Campaign B.
   * @return abuseReports
  **/
  @Schema(description = "Abuse reports for Campaign B.")
  public Integer getAbuseReports() {
    return abuseReports;
  }

  public void setAbuseReports(Integer abuseReports) {
    this.abuseReports = abuseReports;
  }

  public CampaignB unsubs(Integer unsubs) {
    this.unsubs = unsubs;
    return this;
  }

   /**
   * Unsubscribes for Campaign B.
   * @return unsubs
  **/
  @Schema(description = "Unsubscribes for Campaign B.")
  public Integer getUnsubs() {
    return unsubs;
  }

  public void setUnsubs(Integer unsubs) {
    this.unsubs = unsubs;
  }

  public CampaignB recipientClicks(Integer recipientClicks) {
    this.recipientClicks = recipientClicks;
    return this;
  }

   /**
   * Recipients clicks for Campaign B.
   * @return recipientClicks
  **/
  @Schema(description = "Recipients clicks for Campaign B.")
  public Integer getRecipientClicks() {
    return recipientClicks;
  }

  public void setRecipientClicks(Integer recipientClicks) {
    this.recipientClicks = recipientClicks;
  }

  public CampaignB forwards(Integer forwards) {
    this.forwards = forwards;
    return this;
  }

   /**
   * Forwards for Campaign B.
   * @return forwards
  **/
  @Schema(description = "Forwards for Campaign B.")
  public Integer getForwards() {
    return forwards;
  }

  public void setForwards(Integer forwards) {
    this.forwards = forwards;
  }

  public CampaignB forwardsOpens(Integer forwardsOpens) {
    this.forwardsOpens = forwardsOpens;
    return this;
  }

   /**
   * Opens for forwards from Campaign B.
   * @return forwardsOpens
  **/
  @Schema(description = "Opens for forwards from Campaign B.")
  public Integer getForwardsOpens() {
    return forwardsOpens;
  }

  public void setForwardsOpens(Integer forwardsOpens) {
    this.forwardsOpens = forwardsOpens;
  }

  public CampaignB opens(Integer opens) {
    this.opens = opens;
    return this;
  }

   /**
   * Opens for Campaign B.
   * @return opens
  **/
  @Schema(description = "Opens for Campaign B.")
  public Integer getOpens() {
    return opens;
  }

  public void setOpens(Integer opens) {
    this.opens = opens;
  }

  public CampaignB lastOpen(String lastOpen) {
    this.lastOpen = lastOpen;
    return this;
  }

   /**
   * The last open for Campaign B.
   * @return lastOpen
  **/
  @Schema(description = "The last open for Campaign B.")
  public String getLastOpen() {
    return lastOpen;
  }

  public void setLastOpen(String lastOpen) {
    this.lastOpen = lastOpen;
  }

  public CampaignB uniqueOpens(Integer uniqueOpens) {
    this.uniqueOpens = uniqueOpens;
    return this;
  }

   /**
   * Unique opens for Campaign B.
   * @return uniqueOpens
  **/
  @Schema(description = "Unique opens for Campaign B.")
  public Integer getUniqueOpens() {
    return uniqueOpens;
  }

  public void setUniqueOpens(Integer uniqueOpens) {
    this.uniqueOpens = uniqueOpens;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignB campaignB = (CampaignB) o;
    return Objects.equals(this.bounces, campaignB.bounces) &&
        Objects.equals(this.abuseReports, campaignB.abuseReports) &&
        Objects.equals(this.unsubs, campaignB.unsubs) &&
        Objects.equals(this.recipientClicks, campaignB.recipientClicks) &&
        Objects.equals(this.forwards, campaignB.forwards) &&
        Objects.equals(this.forwardsOpens, campaignB.forwardsOpens) &&
        Objects.equals(this.opens, campaignB.opens) &&
        Objects.equals(this.lastOpen, campaignB.lastOpen) &&
        Objects.equals(this.uniqueOpens, campaignB.uniqueOpens);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bounces, abuseReports, unsubs, recipientClicks, forwards, forwardsOpens, opens, lastOpen, uniqueOpens);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignB {\n");
    
    sb.append("    bounces: ").append(toIndentedString(bounces)).append("\n");
    sb.append("    abuseReports: ").append(toIndentedString(abuseReports)).append("\n");
    sb.append("    unsubs: ").append(toIndentedString(unsubs)).append("\n");
    sb.append("    recipientClicks: ").append(toIndentedString(recipientClicks)).append("\n");
    sb.append("    forwards: ").append(toIndentedString(forwards)).append("\n");
    sb.append("    forwardsOpens: ").append(toIndentedString(forwardsOpens)).append("\n");
    sb.append("    opens: ").append(toIndentedString(opens)).append("\n");
    sb.append("    lastOpen: ").append(toIndentedString(lastOpen)).append("\n");
    sb.append("    uniqueOpens: ").append(toIndentedString(uniqueOpens)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
