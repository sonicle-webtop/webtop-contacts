/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ABSplitStats;
import com.sonicle.webtop.contacts.mailchimp.cli.model.Bounces;
import com.sonicle.webtop.contacts.mailchimp.cli.model.CampaignDeliveryStatus;
import com.sonicle.webtop.contacts.mailchimp.cli.model.CampaignReports1Timeseries;
import com.sonicle.webtop.contacts.mailchimp.cli.model.CampaignReports1Timewarp;
import com.sonicle.webtop.contacts.mailchimp.cli.model.Clicks;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ECommerceReport;
import com.sonicle.webtop.contacts.mailchimp.cli.model.FacebookLikes;
import com.sonicle.webtop.contacts.mailchimp.cli.model.Forwards;
import com.sonicle.webtop.contacts.mailchimp.cli.model.IndustryStats;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ListStats;
import com.sonicle.webtop.contacts.mailchimp.cli.model.Opens;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ShareReport;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * Report details about a sent campaign.
 */
@Schema(description = "Report details about a sent campaign.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class CampaignReport1 {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("campaign_title")
  private String campaignTitle = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("list_id")
  private String listId = null;

  @JsonProperty("list_is_active")
  private Boolean listIsActive = null;

  @JsonProperty("list_name")
  private String listName = null;

  @JsonProperty("subject_line")
  private String subjectLine = null;

  @JsonProperty("preview_text")
  private String previewText = null;

  @JsonProperty("emails_sent")
  private Integer emailsSent = null;

  @JsonProperty("abuse_reports")
  private Integer abuseReports = null;

  @JsonProperty("unsubscribed")
  private Integer unsubscribed = null;

  @JsonProperty("send_time")
  private DateTime sendTime = null;

  @JsonProperty("rss_last_send")
  private DateTime rssLastSend = null;

  @JsonProperty("bounces")
  private Bounces bounces = null;

  @JsonProperty("forwards")
  private Forwards forwards = null;

  @JsonProperty("opens")
  private Opens opens = null;

  @JsonProperty("clicks")
  private Clicks clicks = null;

  @JsonProperty("facebook_likes")
  private FacebookLikes facebookLikes = null;

  @JsonProperty("industry_stats")
  private IndustryStats industryStats = null;

  @JsonProperty("list_stats")
  private ListStats listStats = null;

  @JsonProperty("ab_split")
  private ABSplitStats abSplit = null;

  @JsonProperty("timewarp")
  private List<CampaignReports1Timewarp> timewarp = null;

  @JsonProperty("timeseries")
  private List<CampaignReports1Timeseries> timeseries = null;

  @JsonProperty("share_report")
  private ShareReport shareReport = null;

  @JsonProperty("ecommerce")
  private ECommerceReport ecommerce = null;

  @JsonProperty("delivery_status")
  private CampaignDeliveryStatus deliveryStatus = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

  public CampaignReport1 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A string that uniquely identifies this campaign.
   * @return id
  **/
  @Schema(description = "A string that uniquely identifies this campaign.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

   /**
   * The title of the campaign.
   * @return campaignTitle
  **/
  @Schema(description = "The title of the campaign.")
  public String getCampaignTitle() {
    return campaignTitle;
  }

  public CampaignReport1 type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of campaign (regular, plain-text, ab_split, rss, automation, variate, or auto).
   * @return type
  **/
  @Schema(description = "The type of campaign (regular, plain-text, ab_split, rss, automation, variate, or auto).")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

   /**
   * The unique list id.
   * @return listId
  **/
  @Schema(description = "The unique list id.")
  public String getListId() {
    return listId;
  }

   /**
   * The status of the list used, namely if it&#x27;s deleted or disabled.
   * @return listIsActive
  **/
  @Schema(description = "The status of the list used, namely if it's deleted or disabled.")
  public Boolean isListIsActive() {
    return listIsActive;
  }

   /**
   * The name of the list.
   * @return listName
  **/
  @Schema(description = "The name of the list.")
  public String getListName() {
    return listName;
  }

   /**
   * The subject line for the campaign.
   * @return subjectLine
  **/
  @Schema(description = "The subject line for the campaign.")
  public String getSubjectLine() {
    return subjectLine;
  }

  public CampaignReport1 previewText(String previewText) {
    this.previewText = previewText;
    return this;
  }

   /**
   * The preview text for the campaign.
   * @return previewText
  **/
  @Schema(description = "The preview text for the campaign.")
  public String getPreviewText() {
    return previewText;
  }

  public void setPreviewText(String previewText) {
    this.previewText = previewText;
  }

  public CampaignReport1 emailsSent(Integer emailsSent) {
    this.emailsSent = emailsSent;
    return this;
  }

   /**
   * The total number of emails sent for this campaign.
   * @return emailsSent
  **/
  @Schema(description = "The total number of emails sent for this campaign.")
  public Integer getEmailsSent() {
    return emailsSent;
  }

  public void setEmailsSent(Integer emailsSent) {
    this.emailsSent = emailsSent;
  }

  public CampaignReport1 abuseReports(Integer abuseReports) {
    this.abuseReports = abuseReports;
    return this;
  }

   /**
   * The number of abuse reports generated for this campaign.
   * @return abuseReports
  **/
  @Schema(description = "The number of abuse reports generated for this campaign.")
  public Integer getAbuseReports() {
    return abuseReports;
  }

  public void setAbuseReports(Integer abuseReports) {
    this.abuseReports = abuseReports;
  }

   /**
   * The total number of unsubscribed members for this campaign.
   * @return unsubscribed
  **/
  @Schema(description = "The total number of unsubscribed members for this campaign.")
  public Integer getUnsubscribed() {
    return unsubscribed;
  }

   /**
   * The date and time a campaign was sent in ISO 8601 format.
   * @return sendTime
  **/
  @Schema(description = "The date and time a campaign was sent in ISO 8601 format.")
  public DateTime getSendTime() {
    return sendTime;
  }

   /**
   * For RSS campaigns, the date and time of the last send in ISO 8601 format.
   * @return rssLastSend
  **/
  @Schema(description = "For RSS campaigns, the date and time of the last send in ISO 8601 format.")
  public DateTime getRssLastSend() {
    return rssLastSend;
  }

  public CampaignReport1 bounces(Bounces bounces) {
    this.bounces = bounces;
    return this;
  }

   /**
   * Get bounces
   * @return bounces
  **/
  @Schema(description = "")
  public Bounces getBounces() {
    return bounces;
  }

  public void setBounces(Bounces bounces) {
    this.bounces = bounces;
  }

  public CampaignReport1 forwards(Forwards forwards) {
    this.forwards = forwards;
    return this;
  }

   /**
   * Get forwards
   * @return forwards
  **/
  @Schema(description = "")
  public Forwards getForwards() {
    return forwards;
  }

  public void setForwards(Forwards forwards) {
    this.forwards = forwards;
  }

  public CampaignReport1 opens(Opens opens) {
    this.opens = opens;
    return this;
  }

   /**
   * Get opens
   * @return opens
  **/
  @Schema(description = "")
  public Opens getOpens() {
    return opens;
  }

  public void setOpens(Opens opens) {
    this.opens = opens;
  }

  public CampaignReport1 clicks(Clicks clicks) {
    this.clicks = clicks;
    return this;
  }

   /**
   * Get clicks
   * @return clicks
  **/
  @Schema(description = "")
  public Clicks getClicks() {
    return clicks;
  }

  public void setClicks(Clicks clicks) {
    this.clicks = clicks;
  }

  public CampaignReport1 facebookLikes(FacebookLikes facebookLikes) {
    this.facebookLikes = facebookLikes;
    return this;
  }

   /**
   * Get facebookLikes
   * @return facebookLikes
  **/
  @Schema(description = "")
  public FacebookLikes getFacebookLikes() {
    return facebookLikes;
  }

  public void setFacebookLikes(FacebookLikes facebookLikes) {
    this.facebookLikes = facebookLikes;
  }

  public CampaignReport1 industryStats(IndustryStats industryStats) {
    this.industryStats = industryStats;
    return this;
  }

   /**
   * Get industryStats
   * @return industryStats
  **/
  @Schema(description = "")
  public IndustryStats getIndustryStats() {
    return industryStats;
  }

  public void setIndustryStats(IndustryStats industryStats) {
    this.industryStats = industryStats;
  }

  public CampaignReport1 listStats(ListStats listStats) {
    this.listStats = listStats;
    return this;
  }

   /**
   * Get listStats
   * @return listStats
  **/
  @Schema(description = "")
  public ListStats getListStats() {
    return listStats;
  }

  public void setListStats(ListStats listStats) {
    this.listStats = listStats;
  }

  public CampaignReport1 abSplit(ABSplitStats abSplit) {
    this.abSplit = abSplit;
    return this;
  }

   /**
   * Get abSplit
   * @return abSplit
  **/
  @Schema(description = "")
  public ABSplitStats getAbSplit() {
    return abSplit;
  }

  public void setAbSplit(ABSplitStats abSplit) {
    this.abSplit = abSplit;
  }

  public CampaignReport1 timewarp(List<CampaignReports1Timewarp> timewarp) {
    this.timewarp = timewarp;
    return this;
  }

  public CampaignReport1 addTimewarpItem(CampaignReports1Timewarp timewarpItem) {
    if (this.timewarp == null) {
      this.timewarp = new ArrayList<>();
    }
    this.timewarp.add(timewarpItem);
    return this;
  }

   /**
   * An hourly breakdown of sends, opens, and clicks if a campaign is sent using timewarp.
   * @return timewarp
  **/
  @Schema(description = "An hourly breakdown of sends, opens, and clicks if a campaign is sent using timewarp.")
  public List<CampaignReports1Timewarp> getTimewarp() {
    return timewarp;
  }

  public void setTimewarp(List<CampaignReports1Timewarp> timewarp) {
    this.timewarp = timewarp;
  }

  public CampaignReport1 timeseries(List<CampaignReports1Timeseries> timeseries) {
    this.timeseries = timeseries;
    return this;
  }

  public CampaignReport1 addTimeseriesItem(CampaignReports1Timeseries timeseriesItem) {
    if (this.timeseries == null) {
      this.timeseries = new ArrayList<>();
    }
    this.timeseries.add(timeseriesItem);
    return this;
  }

   /**
   * An hourly breakdown of the performance of the campaign over the first 24 hours.
   * @return timeseries
  **/
  @Schema(description = "An hourly breakdown of the performance of the campaign over the first 24 hours.")
  public List<CampaignReports1Timeseries> getTimeseries() {
    return timeseries;
  }

  public void setTimeseries(List<CampaignReports1Timeseries> timeseries) {
    this.timeseries = timeseries;
  }

  public CampaignReport1 shareReport(ShareReport shareReport) {
    this.shareReport = shareReport;
    return this;
  }

   /**
   * Get shareReport
   * @return shareReport
  **/
  @Schema(description = "")
  public ShareReport getShareReport() {
    return shareReport;
  }

  public void setShareReport(ShareReport shareReport) {
    this.shareReport = shareReport;
  }

  public CampaignReport1 ecommerce(ECommerceReport ecommerce) {
    this.ecommerce = ecommerce;
    return this;
  }

   /**
   * Get ecommerce
   * @return ecommerce
  **/
  @Schema(description = "")
  public ECommerceReport getEcommerce() {
    return ecommerce;
  }

  public void setEcommerce(ECommerceReport ecommerce) {
    this.ecommerce = ecommerce;
  }

  public CampaignReport1 deliveryStatus(CampaignDeliveryStatus deliveryStatus) {
    this.deliveryStatus = deliveryStatus;
    return this;
  }

   /**
   * Get deliveryStatus
   * @return deliveryStatus
  **/
  @Schema(description = "")
  public CampaignDeliveryStatus getDeliveryStatus() {
    return deliveryStatus;
  }

  public void setDeliveryStatus(CampaignDeliveryStatus deliveryStatus) {
    this.deliveryStatus = deliveryStatus;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignReport1 campaignReport1 = (CampaignReport1) o;
    return Objects.equals(this.id, campaignReport1.id) &&
        Objects.equals(this.campaignTitle, campaignReport1.campaignTitle) &&
        Objects.equals(this.type, campaignReport1.type) &&
        Objects.equals(this.listId, campaignReport1.listId) &&
        Objects.equals(this.listIsActive, campaignReport1.listIsActive) &&
        Objects.equals(this.listName, campaignReport1.listName) &&
        Objects.equals(this.subjectLine, campaignReport1.subjectLine) &&
        Objects.equals(this.previewText, campaignReport1.previewText) &&
        Objects.equals(this.emailsSent, campaignReport1.emailsSent) &&
        Objects.equals(this.abuseReports, campaignReport1.abuseReports) &&
        Objects.equals(this.unsubscribed, campaignReport1.unsubscribed) &&
        Objects.equals(this.sendTime, campaignReport1.sendTime) &&
        Objects.equals(this.rssLastSend, campaignReport1.rssLastSend) &&
        Objects.equals(this.bounces, campaignReport1.bounces) &&
        Objects.equals(this.forwards, campaignReport1.forwards) &&
        Objects.equals(this.opens, campaignReport1.opens) &&
        Objects.equals(this.clicks, campaignReport1.clicks) &&
        Objects.equals(this.facebookLikes, campaignReport1.facebookLikes) &&
        Objects.equals(this.industryStats, campaignReport1.industryStats) &&
        Objects.equals(this.listStats, campaignReport1.listStats) &&
        Objects.equals(this.abSplit, campaignReport1.abSplit) &&
        Objects.equals(this.timewarp, campaignReport1.timewarp) &&
        Objects.equals(this.timeseries, campaignReport1.timeseries) &&
        Objects.equals(this.shareReport, campaignReport1.shareReport) &&
        Objects.equals(this.ecommerce, campaignReport1.ecommerce) &&
        Objects.equals(this.deliveryStatus, campaignReport1.deliveryStatus) &&
        Objects.equals(this._links, campaignReport1._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, campaignTitle, type, listId, listIsActive, listName, subjectLine, previewText, emailsSent, abuseReports, unsubscribed, sendTime, rssLastSend, bounces, forwards, opens, clicks, facebookLikes, industryStats, listStats, abSplit, timewarp, timeseries, shareReport, ecommerce, deliveryStatus, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignReport1 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    campaignTitle: ").append(toIndentedString(campaignTitle)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    listIsActive: ").append(toIndentedString(listIsActive)).append("\n");
    sb.append("    listName: ").append(toIndentedString(listName)).append("\n");
    sb.append("    subjectLine: ").append(toIndentedString(subjectLine)).append("\n");
    sb.append("    previewText: ").append(toIndentedString(previewText)).append("\n");
    sb.append("    emailsSent: ").append(toIndentedString(emailsSent)).append("\n");
    sb.append("    abuseReports: ").append(toIndentedString(abuseReports)).append("\n");
    sb.append("    unsubscribed: ").append(toIndentedString(unsubscribed)).append("\n");
    sb.append("    sendTime: ").append(toIndentedString(sendTime)).append("\n");
    sb.append("    rssLastSend: ").append(toIndentedString(rssLastSend)).append("\n");
    sb.append("    bounces: ").append(toIndentedString(bounces)).append("\n");
    sb.append("    forwards: ").append(toIndentedString(forwards)).append("\n");
    sb.append("    opens: ").append(toIndentedString(opens)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    facebookLikes: ").append(toIndentedString(facebookLikes)).append("\n");
    sb.append("    industryStats: ").append(toIndentedString(industryStats)).append("\n");
    sb.append("    listStats: ").append(toIndentedString(listStats)).append("\n");
    sb.append("    abSplit: ").append(toIndentedString(abSplit)).append("\n");
    sb.append("    timewarp: ").append(toIndentedString(timewarp)).append("\n");
    sb.append("    timeseries: ").append(toIndentedString(timeseries)).append("\n");
    sb.append("    shareReport: ").append(toIndentedString(shareReport)).append("\n");
    sb.append("    ecommerce: ").append(toIndentedString(ecommerce)).append("\n");
    sb.append("    deliveryStatus: ").append(toIndentedString(deliveryStatus)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
