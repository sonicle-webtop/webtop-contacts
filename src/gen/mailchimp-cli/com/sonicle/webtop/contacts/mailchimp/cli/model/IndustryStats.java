/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * The average campaign statistics for your industry.
 */
@Schema(description = "The average campaign statistics for your industry.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class IndustryStats {
  @JsonProperty("type")
  private String type = null;

  @JsonProperty("open_rate")
  private BigDecimal openRate = null;

  @JsonProperty("click_rate")
  private BigDecimal clickRate = null;

  @JsonProperty("bounce_rate")
  private BigDecimal bounceRate = null;

  @JsonProperty("unopen_rate")
  private BigDecimal unopenRate = null;

  @JsonProperty("unsub_rate")
  private BigDecimal unsubRate = null;

  @JsonProperty("abuse_rate")
  private BigDecimal abuseRate = null;

  public IndustryStats type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of business industry associated with your account. For example: retail, education, etc.
   * @return type
  **/
  @Schema(description = "The type of business industry associated with your account. For example: retail, education, etc.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public IndustryStats openRate(BigDecimal openRate) {
    this.openRate = openRate;
    return this;
  }

   /**
   * The industry open rate.
   * @return openRate
  **/
  @Schema(description = "The industry open rate.")
  public BigDecimal getOpenRate() {
    return openRate;
  }

  public void setOpenRate(BigDecimal openRate) {
    this.openRate = openRate;
  }

  public IndustryStats clickRate(BigDecimal clickRate) {
    this.clickRate = clickRate;
    return this;
  }

   /**
   * The industry click rate.
   * @return clickRate
  **/
  @Schema(description = "The industry click rate.")
  public BigDecimal getClickRate() {
    return clickRate;
  }

  public void setClickRate(BigDecimal clickRate) {
    this.clickRate = clickRate;
  }

  public IndustryStats bounceRate(BigDecimal bounceRate) {
    this.bounceRate = bounceRate;
    return this;
  }

   /**
   * The industry bounce rate.
   * @return bounceRate
  **/
  @Schema(description = "The industry bounce rate.")
  public BigDecimal getBounceRate() {
    return bounceRate;
  }

  public void setBounceRate(BigDecimal bounceRate) {
    this.bounceRate = bounceRate;
  }

  public IndustryStats unopenRate(BigDecimal unopenRate) {
    this.unopenRate = unopenRate;
    return this;
  }

   /**
   * The industry unopened rate.
   * @return unopenRate
  **/
  @Schema(description = "The industry unopened rate.")
  public BigDecimal getUnopenRate() {
    return unopenRate;
  }

  public void setUnopenRate(BigDecimal unopenRate) {
    this.unopenRate = unopenRate;
  }

  public IndustryStats unsubRate(BigDecimal unsubRate) {
    this.unsubRate = unsubRate;
    return this;
  }

   /**
   * The industry unsubscribe rate.
   * @return unsubRate
  **/
  @Schema(description = "The industry unsubscribe rate.")
  public BigDecimal getUnsubRate() {
    return unsubRate;
  }

  public void setUnsubRate(BigDecimal unsubRate) {
    this.unsubRate = unsubRate;
  }

  public IndustryStats abuseRate(BigDecimal abuseRate) {
    this.abuseRate = abuseRate;
    return this;
  }

   /**
   * The industry abuse rate.
   * @return abuseRate
  **/
  @Schema(description = "The industry abuse rate.")
  public BigDecimal getAbuseRate() {
    return abuseRate;
  }

  public void setAbuseRate(BigDecimal abuseRate) {
    this.abuseRate = abuseRate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndustryStats industryStats = (IndustryStats) o;
    return Objects.equals(this.type, industryStats.type) &&
        Objects.equals(this.openRate, industryStats.openRate) &&
        Objects.equals(this.clickRate, industryStats.clickRate) &&
        Objects.equals(this.bounceRate, industryStats.bounceRate) &&
        Objects.equals(this.unopenRate, industryStats.unopenRate) &&
        Objects.equals(this.unsubRate, industryStats.unsubRate) &&
        Objects.equals(this.abuseRate, industryStats.abuseRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, openRate, clickRate, bounceRate, unopenRate, unsubRate, abuseRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndustryStats {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    openRate: ").append(toIndentedString(openRate)).append("\n");
    sb.append("    clickRate: ").append(toIndentedString(clickRate)).append("\n");
    sb.append("    bounceRate: ").append(toIndentedString(bounceRate)).append("\n");
    sb.append("    unopenRate: ").append(toIndentedString(unopenRate)).append("\n");
    sb.append("    unsubRate: ").append(toIndentedString(unsubRate)).append("\n");
    sb.append("    abuseRate: ").append(toIndentedString(abuseRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
