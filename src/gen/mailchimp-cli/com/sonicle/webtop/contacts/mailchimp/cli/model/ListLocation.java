/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * ListLocation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class ListLocation {
  @JsonProperty("country")
  private String country = null;

  @JsonProperty("cc")
  private String cc = null;

  @JsonProperty("percent")
  private BigDecimal percent = null;

  @JsonProperty("total")
  private Integer total = null;

   /**
   * The name of the country.
   * @return country
  **/
  @Schema(description = "The name of the country.")
  public String getCountry() {
    return country;
  }

   /**
   * The ISO 3166 2 digit country code.
   * @return cc
  **/
  @Schema(description = "The ISO 3166 2 digit country code.")
  public String getCc() {
    return cc;
  }

   /**
   * The percent of subscribers in the country.
   * @return percent
  **/
  @Schema(description = "The percent of subscribers in the country.")
  public BigDecimal getPercent() {
    return percent;
  }

   /**
   * The total number of subscribers in the country.
   * @return total
  **/
  @Schema(description = "The total number of subscribers in the country.")
  public Integer getTotal() {
    return total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListLocation listLocation = (ListLocation) o;
    return Objects.equals(this.country, listLocation.country) &&
        Objects.equals(this.cc, listLocation.cc) &&
        Objects.equals(this.percent, listLocation.percent) &&
        Objects.equals(this.total, listLocation.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(country, cc, percent, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListLocation {\n");
    
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    cc: ").append(toIndentedString(cc)).append("\n");
    sb.append("    percent: ").append(toIndentedString(percent)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
