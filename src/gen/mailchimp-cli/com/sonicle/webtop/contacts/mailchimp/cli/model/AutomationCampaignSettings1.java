/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * The settings for the Automation workflow.
 */
@Schema(description = "The settings for the Automation workflow.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class AutomationCampaignSettings1 {
  @JsonProperty("title")
  private String title = null;

  @JsonProperty("from_name")
  private String fromName = null;

  @JsonProperty("reply_to")
  private String replyTo = null;

  @JsonProperty("use_conversation")
  private Boolean useConversation = null;

  @JsonProperty("to_name")
  private String toName = null;

  @JsonProperty("authenticate")
  private Boolean authenticate = null;

  @JsonProperty("auto_footer")
  private Boolean autoFooter = null;

  @JsonProperty("inline_css")
  private Boolean inlineCss = null;

  public AutomationCampaignSettings1 title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the Automation.
   * @return title
  **/
  @Schema(description = "The title of the Automation.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public AutomationCampaignSettings1 fromName(String fromName) {
    this.fromName = fromName;
    return this;
  }

   /**
   * The &#x27;from&#x27; name for the Automation (not an email address).
   * @return fromName
  **/
  @Schema(description = "The 'from' name for the Automation (not an email address).")
  public String getFromName() {
    return fromName;
  }

  public void setFromName(String fromName) {
    this.fromName = fromName;
  }

  public AutomationCampaignSettings1 replyTo(String replyTo) {
    this.replyTo = replyTo;
    return this;
  }

   /**
   * The reply-to email address for the Automation.
   * @return replyTo
  **/
  @Schema(description = "The reply-to email address for the Automation.")
  public String getReplyTo() {
    return replyTo;
  }

  public void setReplyTo(String replyTo) {
    this.replyTo = replyTo;
  }

  public AutomationCampaignSettings1 useConversation(Boolean useConversation) {
    this.useConversation = useConversation;
    return this;
  }

   /**
   * Whether to use Mailchimp Conversation feature to manage replies
   * @return useConversation
  **/
  @Schema(description = "Whether to use Mailchimp Conversation feature to manage replies")
  public Boolean isUseConversation() {
    return useConversation;
  }

  public void setUseConversation(Boolean useConversation) {
    this.useConversation = useConversation;
  }

  public AutomationCampaignSettings1 toName(String toName) {
    this.toName = toName;
    return this;
  }

   /**
   * The Automation&#x27;s custom &#x27;To&#x27; name, typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
   * @return toName
  **/
  @Schema(description = "The Automation's custom 'To' name, typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).")
  public String getToName() {
    return toName;
  }

  public void setToName(String toName) {
    this.toName = toName;
  }

  public AutomationCampaignSettings1 authenticate(Boolean authenticate) {
    this.authenticate = authenticate;
    return this;
  }

   /**
   * Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the Automation. Defaults to &#x60;true&#x60;.
   * @return authenticate
  **/
  @Schema(description = "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the Automation. Defaults to `true`.")
  public Boolean isAuthenticate() {
    return authenticate;
  }

  public void setAuthenticate(Boolean authenticate) {
    this.authenticate = authenticate;
  }

  public AutomationCampaignSettings1 autoFooter(Boolean autoFooter) {
    this.autoFooter = autoFooter;
    return this;
  }

   /**
   * Whether to automatically append Mailchimp&#x27;s [default footer](https://mailchimp.com/help/about-campaign-footers/) to the Automation.
   * @return autoFooter
  **/
  @Schema(description = "Whether to automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the Automation.")
  public Boolean isAutoFooter() {
    return autoFooter;
  }

  public void setAutoFooter(Boolean autoFooter) {
    this.autoFooter = autoFooter;
  }

  public AutomationCampaignSettings1 inlineCss(Boolean inlineCss) {
    this.inlineCss = inlineCss;
    return this;
  }

   /**
   * Whether to automatically inline the CSS included with the Automation content.
   * @return inlineCss
  **/
  @Schema(description = "Whether to automatically inline the CSS included with the Automation content.")
  public Boolean isInlineCss() {
    return inlineCss;
  }

  public void setInlineCss(Boolean inlineCss) {
    this.inlineCss = inlineCss;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationCampaignSettings1 automationCampaignSettings1 = (AutomationCampaignSettings1) o;
    return Objects.equals(this.title, automationCampaignSettings1.title) &&
        Objects.equals(this.fromName, automationCampaignSettings1.fromName) &&
        Objects.equals(this.replyTo, automationCampaignSettings1.replyTo) &&
        Objects.equals(this.useConversation, automationCampaignSettings1.useConversation) &&
        Objects.equals(this.toName, automationCampaignSettings1.toName) &&
        Objects.equals(this.authenticate, automationCampaignSettings1.authenticate) &&
        Objects.equals(this.autoFooter, automationCampaignSettings1.autoFooter) &&
        Objects.equals(this.inlineCss, automationCampaignSettings1.inlineCss);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, fromName, replyTo, useConversation, toName, authenticate, autoFooter, inlineCss);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationCampaignSettings1 {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("    useConversation: ").append(toIndentedString(useConversation)).append("\n");
    sb.append("    toName: ").append(toIndentedString(toName)).append("\n");
    sb.append("    authenticate: ").append(toIndentedString(authenticate)).append("\n");
    sb.append("    autoFooter: ").append(toIndentedString(autoFooter)).append("\n");
    sb.append("    inlineCss: ").append(toIndentedString(inlineCss)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
