/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Assign subscribers to interests to group them together. Interests are referred to as &#x27;group names&#x27; in the Mailchimp application.
 */
@Schema(description = "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the Mailchimp application.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class Interest {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("display_order")
  private Integer displayOrder = null;

  public Interest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the interest. This can be shown publicly on a subscription form.
   * @return name
  **/
  @Schema(required = true, description = "The name of the interest. This can be shown publicly on a subscription form.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Interest displayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
    return this;
  }

   /**
   * The display order for interests.
   * @return displayOrder
  **/
  @Schema(description = "The display order for interests.")
  public Integer getDisplayOrder() {
    return displayOrder;
  }

  public void setDisplayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Interest interest = (Interest) o;
    return Objects.equals(this.name, interest.name) &&
        Objects.equals(this.displayOrder, interest.displayOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, displayOrder);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Interest {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayOrder: ").append(toIndentedString(displayOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
