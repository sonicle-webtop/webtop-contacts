/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application.
 */
@Schema(description = "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class InterestCategory1 {
  @JsonProperty("list_id")
  private String listId = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("display_order")
  private Integer displayOrder = null;

  /**
   * Determines how this category’s interests appear on signup forms.
   */
  public enum TypeEnum {
    CHECKBOXES("checkboxes"),
    DROPDOWN("dropdown"),
    RADIO("radio"),
    HIDDEN("hidden");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

   /**
   * The unique list id for the category.
   * @return listId
  **/
  @Schema(description = "The unique list id for the category.")
  public String getListId() {
    return listId;
  }

   /**
   * The id for the interest category.
   * @return id
  **/
  @Schema(description = "The id for the interest category.")
  public String getId() {
    return id;
  }

  public InterestCategory1 title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The text description of this category. This field appears on signup forms and is often phrased as a question.
   * @return title
  **/
  @Schema(description = "The text description of this category. This field appears on signup forms and is often phrased as a question.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public InterestCategory1 displayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
    return this;
  }

   /**
   * The order that the categories are displayed in the list. Lower numbers display first.
   * @return displayOrder
  **/
  @Schema(description = "The order that the categories are displayed in the list. Lower numbers display first.")
  public Integer getDisplayOrder() {
    return displayOrder;
  }

  public void setDisplayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
  }

  public InterestCategory1 type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Determines how this category’s interests appear on signup forms.
   * @return type
  **/
  @Schema(description = "Determines how this category’s interests appear on signup forms.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InterestCategory1 interestCategory1 = (InterestCategory1) o;
    return Objects.equals(this.listId, interestCategory1.listId) &&
        Objects.equals(this.id, interestCategory1.id) &&
        Objects.equals(this.title, interestCategory1.title) &&
        Objects.equals(this.displayOrder, interestCategory1.displayOrder) &&
        Objects.equals(this.type, interestCategory1.type) &&
        Objects.equals(this._links, interestCategory1._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listId, id, title, displayOrder, type, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InterestCategory1 {\n");
    
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    displayOrder: ").append(toIndentedString(displayOrder)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
