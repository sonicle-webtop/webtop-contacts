/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import com.sonicle.webtop.contacts.mailchimp.cli.model.TrackingSettings;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * A summary of an individual landing page&#x27;s settings and content.
 */
@Schema(description = "A summary of an individual landing page's settings and content.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class LandingPage1 {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("template_id")
  private Integer templateId = null;

  /**
   * The status of this landing page.
   */
  public enum StatusEnum {
    PUBLISHED("published"),
    UNPUBLISHED("unpublished"),
    DRAFT("draft");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("list_id")
  private String listId = null;

  @JsonProperty("store_id")
  private String storeId = null;

  @JsonProperty("web_id")
  private Integer webId = null;

  @JsonProperty("created_by_source")
  private String createdBySource = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("published_at")
  private DateTime publishedAt = null;

  @JsonProperty("unpublished_at")
  private DateTime unpublishedAt = null;

  @JsonProperty("updated_at")
  private DateTime updatedAt = null;

  @JsonProperty("tracking")
  private TrackingSettings tracking = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

   /**
   * A string that uniquely identifies this landing page.
   * @return id
  **/
  @Schema(example = "030092c2e1f0", description = "A string that uniquely identifies this landing page.")
  public String getId() {
    return id;
  }

  public LandingPage1 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of this landing page.
   * @return name
  **/
  @Schema(description = "The name of this landing page.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public LandingPage1 title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of this landing page seen in the browser&#x27;s title bar.
   * @return title
  **/
  @Schema(description = "The title of this landing page seen in the browser's title bar.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public LandingPage1 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of this landing page.
   * @return description
  **/
  @Schema(description = "The description of this landing page.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

   /**
   * The template_id of this landing page.
   * @return templateId
  **/
  @Schema(description = "The template_id of this landing page.")
  public Integer getTemplateId() {
    return templateId;
  }

   /**
   * The status of this landing page.
   * @return status
  **/
  @Schema(description = "The status of this landing page.")
  public StatusEnum getStatus() {
    return status;
  }

  public LandingPage1 listId(String listId) {
    this.listId = listId;
    return this;
  }

   /**
   * The list&#x27;s ID associated with this landing page.
   * @return listId
  **/
  @Schema(example = "fde02ad86b", description = "The list's ID associated with this landing page.")
  public String getListId() {
    return listId;
  }

  public void setListId(String listId) {
    this.listId = listId;
  }

  public LandingPage1 storeId(String storeId) {
    this.storeId = storeId;
    return this;
  }

   /**
   * The ID of the store associated with this landing page.
   * @return storeId
  **/
  @Schema(description = "The ID of the store associated with this landing page.")
  public String getStoreId() {
    return storeId;
  }

  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  public LandingPage1 webId(Integer webId) {
    this.webId = webId;
    return this;
  }

   /**
   * The ID used in the Mailchimp web application.
   * @return webId
  **/
  @Schema(description = "The ID used in the Mailchimp web application.")
  public Integer getWebId() {
    return webId;
  }

  public void setWebId(Integer webId) {
    this.webId = webId;
  }

   /**
   * Created by mobile or web
   * @return createdBySource
  **/
  @Schema(description = "Created by mobile or web")
  public String getCreatedBySource() {
    return createdBySource;
  }

   /**
   * The url of the published landing page.
   * @return url
  **/
  @Schema(description = "The url of the published landing page.")
  public String getUrl() {
    return url;
  }

   /**
   * The time this landing page was created.
   * @return createdAt
  **/
  @Schema(description = "The time this landing page was created.")
  public DateTime getCreatedAt() {
    return createdAt;
  }

   /**
   * The time this landing page was published.
   * @return publishedAt
  **/
  @Schema(description = "The time this landing page was published.")
  public DateTime getPublishedAt() {
    return publishedAt;
  }

   /**
   * The time this landing page was unpublished.
   * @return unpublishedAt
  **/
  @Schema(description = "The time this landing page was unpublished.")
  public DateTime getUnpublishedAt() {
    return unpublishedAt;
  }

   /**
   * The time this landing page was updated at.
   * @return updatedAt
  **/
  @Schema(description = "The time this landing page was updated at.")
  public DateTime getUpdatedAt() {
    return updatedAt;
  }

  public LandingPage1 tracking(TrackingSettings tracking) {
    this.tracking = tracking;
    return this;
  }

   /**
   * Get tracking
   * @return tracking
  **/
  @Schema(description = "")
  public TrackingSettings getTracking() {
    return tracking;
  }

  public void setTracking(TrackingSettings tracking) {
    this.tracking = tracking;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LandingPage1 landingPage1 = (LandingPage1) o;
    return Objects.equals(this.id, landingPage1.id) &&
        Objects.equals(this.name, landingPage1.name) &&
        Objects.equals(this.title, landingPage1.title) &&
        Objects.equals(this.description, landingPage1.description) &&
        Objects.equals(this.templateId, landingPage1.templateId) &&
        Objects.equals(this.status, landingPage1.status) &&
        Objects.equals(this.listId, landingPage1.listId) &&
        Objects.equals(this.storeId, landingPage1.storeId) &&
        Objects.equals(this.webId, landingPage1.webId) &&
        Objects.equals(this.createdBySource, landingPage1.createdBySource) &&
        Objects.equals(this.url, landingPage1.url) &&
        Objects.equals(this.createdAt, landingPage1.createdAt) &&
        Objects.equals(this.publishedAt, landingPage1.publishedAt) &&
        Objects.equals(this.unpublishedAt, landingPage1.unpublishedAt) &&
        Objects.equals(this.updatedAt, landingPage1.updatedAt) &&
        Objects.equals(this.tracking, landingPage1.tracking) &&
        Objects.equals(this._links, landingPage1._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, title, description, templateId, status, listId, storeId, webId, createdBySource, url, createdAt, publishedAt, unpublishedAt, updatedAt, tracking, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LandingPage1 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    webId: ").append(toIndentedString(webId)).append("\n");
    sb.append("    createdBySource: ").append(toIndentedString(createdBySource)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    publishedAt: ").append(toIndentedString(publishedAt)).append("\n");
    sb.append("    unpublishedAt: ").append(toIndentedString(unpublishedAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    tracking: ").append(toIndentedString(tracking)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
