/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * Member activity events.
 */
@Schema(description = "Member activity events.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class MemberActivity2 {
  @JsonProperty("action")
  private String action = null;

  @JsonProperty("timestamp")
  private DateTime timestamp = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("campaign_id")
  private String campaignId = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("parent_campaign")
  private String parentCampaign = null;

  public MemberActivity2 action(String action) {
    this.action = action;
    return this;
  }

   /**
   * The type of action recorded for the subscriber.
   * @return action
  **/
  @Schema(description = "The type of action recorded for the subscriber.")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public MemberActivity2 timestamp(DateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The date and time recorded for the action.
   * @return timestamp
  **/
  @Schema(description = "The date and time recorded for the action.")
  public DateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(DateTime timestamp) {
    this.timestamp = timestamp;
  }

  public MemberActivity2 url(String url) {
    this.url = url;
    return this;
  }

   /**
   * For clicks, the URL the subscriber clicked on.
   * @return url
  **/
  @Schema(description = "For clicks, the URL the subscriber clicked on.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public MemberActivity2 type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of campaign that was sent.
   * @return type
  **/
  @Schema(description = "The type of campaign that was sent.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public MemberActivity2 campaignId(String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

   /**
   * The web-based ID for the campaign.
   * @return campaignId
  **/
  @Schema(description = "The web-based ID for the campaign.")
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }

  public MemberActivity2 title(String title) {
    this.title = title;
    return this;
  }

   /**
   * If set, the campaign&#x27;s title.
   * @return title
  **/
  @Schema(description = "If set, the campaign's title.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public MemberActivity2 parentCampaign(String parentCampaign) {
    this.parentCampaign = parentCampaign;
    return this;
  }

   /**
   * The ID of the parent campaign.
   * @return parentCampaign
  **/
  @Schema(description = "The ID of the parent campaign.")
  public String getParentCampaign() {
    return parentCampaign;
  }

  public void setParentCampaign(String parentCampaign) {
    this.parentCampaign = parentCampaign;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MemberActivity2 memberActivity2 = (MemberActivity2) o;
    return Objects.equals(this.action, memberActivity2.action) &&
        Objects.equals(this.timestamp, memberActivity2.timestamp) &&
        Objects.equals(this.url, memberActivity2.url) &&
        Objects.equals(this.type, memberActivity2.type) &&
        Objects.equals(this.campaignId, memberActivity2.campaignId) &&
        Objects.equals(this.title, memberActivity2.title) &&
        Objects.equals(this.parentCampaign, memberActivity2.parentCampaign);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, timestamp, url, type, campaignId, title, parentCampaign);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MemberActivity2 {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    parentCampaign: ").append(toIndentedString(parentCampaign)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
