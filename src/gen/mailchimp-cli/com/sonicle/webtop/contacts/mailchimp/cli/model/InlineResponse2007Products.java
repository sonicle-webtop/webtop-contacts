/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * InlineResponse2007Products
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class InlineResponse2007Products {
  @JsonProperty("title")
  private String title = null;

  @JsonProperty("sku")
  private String sku = null;

  @JsonProperty("image_url")
  private String imageUrl = null;

  @JsonProperty("total_revenue")
  private BigDecimal totalRevenue = null;

  @JsonProperty("total_purchased")
  private BigDecimal totalPurchased = null;

  @JsonProperty("currency_code")
  private String currencyCode = null;

  @JsonProperty("recommendation_total")
  private Integer recommendationTotal = null;

  @JsonProperty("recommendation_purchased")
  private Integer recommendationPurchased = null;

  public InlineResponse2007Products title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public InlineResponse2007Products sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @Schema(description = "")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public InlineResponse2007Products imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @Schema(description = "")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public InlineResponse2007Products totalRevenue(BigDecimal totalRevenue) {
    this.totalRevenue = totalRevenue;
    return this;
  }

   /**
   * Get totalRevenue
   * @return totalRevenue
  **/
  @Schema(description = "")
  public BigDecimal getTotalRevenue() {
    return totalRevenue;
  }

  public void setTotalRevenue(BigDecimal totalRevenue) {
    this.totalRevenue = totalRevenue;
  }

  public InlineResponse2007Products totalPurchased(BigDecimal totalPurchased) {
    this.totalPurchased = totalPurchased;
    return this;
  }

   /**
   * Get totalPurchased
   * @return totalPurchased
  **/
  @Schema(description = "")
  public BigDecimal getTotalPurchased() {
    return totalPurchased;
  }

  public void setTotalPurchased(BigDecimal totalPurchased) {
    this.totalPurchased = totalPurchased;
  }

  public InlineResponse2007Products currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @Schema(description = "")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public InlineResponse2007Products recommendationTotal(Integer recommendationTotal) {
    this.recommendationTotal = recommendationTotal;
    return this;
  }

   /**
   * Get recommendationTotal
   * @return recommendationTotal
  **/
  @Schema(description = "")
  public Integer getRecommendationTotal() {
    return recommendationTotal;
  }

  public void setRecommendationTotal(Integer recommendationTotal) {
    this.recommendationTotal = recommendationTotal;
  }

  public InlineResponse2007Products recommendationPurchased(Integer recommendationPurchased) {
    this.recommendationPurchased = recommendationPurchased;
    return this;
  }

   /**
   * Get recommendationPurchased
   * @return recommendationPurchased
  **/
  @Schema(description = "")
  public Integer getRecommendationPurchased() {
    return recommendationPurchased;
  }

  public void setRecommendationPurchased(Integer recommendationPurchased) {
    this.recommendationPurchased = recommendationPurchased;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2007Products inlineResponse2007Products = (InlineResponse2007Products) o;
    return Objects.equals(this.title, inlineResponse2007Products.title) &&
        Objects.equals(this.sku, inlineResponse2007Products.sku) &&
        Objects.equals(this.imageUrl, inlineResponse2007Products.imageUrl) &&
        Objects.equals(this.totalRevenue, inlineResponse2007Products.totalRevenue) &&
        Objects.equals(this.totalPurchased, inlineResponse2007Products.totalPurchased) &&
        Objects.equals(this.currencyCode, inlineResponse2007Products.currencyCode) &&
        Objects.equals(this.recommendationTotal, inlineResponse2007Products.recommendationTotal) &&
        Objects.equals(this.recommendationPurchased, inlineResponse2007Products.recommendationPurchased);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, sku, imageUrl, totalRevenue, totalPurchased, currencyCode, recommendationTotal, recommendationPurchased);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2007Products {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    totalRevenue: ").append(toIndentedString(totalRevenue)).append("\n");
    sb.append("    totalPurchased: ").append(toIndentedString(totalPurchased)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    recommendationTotal: ").append(toIndentedString(recommendationTotal)).append("\n");
    sb.append("    recommendationPurchased: ").append(toIndentedString(recommendationPurchased)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
