/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ABSplit;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * A report of links clicked in a specific campaign.
 */
@Schema(description = "A report of links clicked in a specific campaign.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class ClickDetailReport2 {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("total_clicks")
  private Integer totalClicks = null;

  @JsonProperty("click_percentage")
  private BigDecimal clickPercentage = null;

  @JsonProperty("unique_clicks")
  private Integer uniqueClicks = null;

  @JsonProperty("unique_click_percentage")
  private BigDecimal uniqueClickPercentage = null;

  @JsonProperty("last_click")
  private DateTime lastClick = null;

  @JsonProperty("ab_split")
  private ABSplit abSplit = null;

  @JsonProperty("campaign_id")
  private String campaignId = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

   /**
   * The unique id for the link.
   * @return id
  **/
  @Schema(description = "The unique id for the link.")
  public String getId() {
    return id;
  }

   /**
   * The URL for the link in the campaign.
   * @return url
  **/
  @Schema(description = "The URL for the link in the campaign.")
  public String getUrl() {
    return url;
  }

   /**
   * The number of total clicks for a link.
   * @return totalClicks
  **/
  @Schema(description = "The number of total clicks for a link.")
  public Integer getTotalClicks() {
    return totalClicks;
  }

   /**
   * The percentage of total clicks a link generated for a campaign.
   * @return clickPercentage
  **/
  @Schema(description = "The percentage of total clicks a link generated for a campaign.")
  public BigDecimal getClickPercentage() {
    return clickPercentage;
  }

   /**
   * Number of unique clicks for a link.
   * @return uniqueClicks
  **/
  @Schema(description = "Number of unique clicks for a link.")
  public Integer getUniqueClicks() {
    return uniqueClicks;
  }

   /**
   * The percentage of unique clicks a link generated for a campaign.
   * @return uniqueClickPercentage
  **/
  @Schema(description = "The percentage of unique clicks a link generated for a campaign.")
  public BigDecimal getUniqueClickPercentage() {
    return uniqueClickPercentage;
  }

   /**
   * The date and time for the last recorded click for a link in ISO 8601 format.
   * @return lastClick
  **/
  @Schema(description = "The date and time for the last recorded click for a link in ISO 8601 format.")
  public DateTime getLastClick() {
    return lastClick;
  }

  public ClickDetailReport2 abSplit(ABSplit abSplit) {
    this.abSplit = abSplit;
    return this;
  }

   /**
   * Get abSplit
   * @return abSplit
  **/
  @Schema(description = "")
  public ABSplit getAbSplit() {
    return abSplit;
  }

  public void setAbSplit(ABSplit abSplit) {
    this.abSplit = abSplit;
  }

   /**
   * The campaign id.
   * @return campaignId
  **/
  @Schema(description = "The campaign id.")
  public String getCampaignId() {
    return campaignId;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClickDetailReport2 clickDetailReport2 = (ClickDetailReport2) o;
    return Objects.equals(this.id, clickDetailReport2.id) &&
        Objects.equals(this.url, clickDetailReport2.url) &&
        Objects.equals(this.totalClicks, clickDetailReport2.totalClicks) &&
        Objects.equals(this.clickPercentage, clickDetailReport2.clickPercentage) &&
        Objects.equals(this.uniqueClicks, clickDetailReport2.uniqueClicks) &&
        Objects.equals(this.uniqueClickPercentage, clickDetailReport2.uniqueClickPercentage) &&
        Objects.equals(this.lastClick, clickDetailReport2.lastClick) &&
        Objects.equals(this.abSplit, clickDetailReport2.abSplit) &&
        Objects.equals(this.campaignId, clickDetailReport2.campaignId) &&
        Objects.equals(this._links, clickDetailReport2._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, totalClicks, clickPercentage, uniqueClicks, uniqueClickPercentage, lastClick, abSplit, campaignId, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClickDetailReport2 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    totalClicks: ").append(toIndentedString(totalClicks)).append("\n");
    sb.append("    clickPercentage: ").append(toIndentedString(clickPercentage)).append("\n");
    sb.append("    uniqueClicks: ").append(toIndentedString(uniqueClicks)).append("\n");
    sb.append("    uniqueClickPercentage: ").append(toIndentedString(uniqueClickPercentage)).append("\n");
    sb.append("    lastClick: ").append(toIndentedString(lastClick)).append("\n");
    sb.append("    abSplit: ").append(toIndentedString(abSplit)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
