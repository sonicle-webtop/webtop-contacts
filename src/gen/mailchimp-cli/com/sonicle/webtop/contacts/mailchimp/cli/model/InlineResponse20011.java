/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.InlineResponse20011AudienceActivity;
import com.sonicle.webtop.contacts.mailchimp.cli.model.InlineResponse20011ReportSummary;
import com.sonicle.webtop.contacts.mailchimp.cli.model.InlineResponse2009Audience;
import com.sonicle.webtop.contacts.mailchimp.cli.model.InlineResponse2009Budget;
import com.sonicle.webtop.contacts.mailchimp.cli.model.InlineResponse2009Channel;
import com.sonicle.webtop.contacts.mailchimp.cli.model.List10;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * InlineResponse20011
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class InlineResponse20011 {
  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

  @JsonProperty("audience")
  private InlineResponse2009Audience audience = null;

  @JsonProperty("audience_activity")
  private InlineResponse20011AudienceActivity audienceActivity = null;

  @JsonProperty("budget")
  private InlineResponse2009Budget budget = null;

  @JsonProperty("canceled_at")
  private DateTime canceledAt = null;

  @JsonProperty("channel")
  private InlineResponse2009Channel channel = null;

  @JsonProperty("create_time")
  private DateTime createTime = null;

  @JsonProperty("email_source_name")
  private String emailSourceName = null;

  @JsonProperty("end_time")
  private DateTime endTime = null;

  @JsonProperty("has_segment")
  private Boolean hasSegment = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("needs_attention")
  private Boolean needsAttention = null;

  @JsonProperty("paused_at")
  private DateTime pausedAt = null;

  @JsonProperty("published_time")
  private DateTime publishedTime = null;

  @JsonProperty("recipients")
  private List10 recipients = null;

  @JsonProperty("report_summary")
  private InlineResponse20011ReportSummary reportSummary = null;

  @JsonProperty("show_report")
  private Boolean showReport = null;

  @JsonProperty("start_time")
  private DateTime startTime = null;

  /**
   * Campaign, Ad, or Page status
   */
  public enum StatusEnum {
    SAVE("save"),
    PAUSED("paused"),
    SCHEDULE("schedule"),
    SENDING("sending"),
    SENT("sent"),
    CANCELED("canceled"),
    CANCELING("canceling"),
    ACTIVE("active"),
    DISCONNECTED("disconnected"),
    SOMEPAUSED("somepaused"),
    DRAFT("draft"),
    COMPLETED("completed"),
    PARTIALREJECTED("partialRejected"),
    PENDING("pending"),
    REJECTED("rejected"),
    PUBLISHED("published"),
    UNPUBLISHED("unpublished");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("thumbnail")
  private String thumbnail = null;

  /**
   * Supported Campaign, Ad, Page type
   */
  public enum TypeEnum {
    REGULAR("regular"),
    PLAINTEXT("plaintext"),
    RSS("rss"),
    RECONFIRM("reconfirm"),
    VARIATE("variate"),
    ABSPLIT("absplit"),
    AUTOMATION("automation"),
    FACEBOOK("facebook"),
    GOOGLE("google"),
    AUTORESPONDER("autoresponder"),
    TRANSACTIONAL("transactional"),
    PAGE("page"),
    WEBSITE("website"),
    SURVEY("survey");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("updated_at")
  private DateTime updatedAt = null;

  @JsonProperty("was_canceled_by_facebook")
  private Boolean wasCanceledByFacebook = null;

  @JsonProperty("web_id")
  private Integer webId = null;

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }

  public InlineResponse20011 audience(InlineResponse2009Audience audience) {
    this.audience = audience;
    return this;
  }

   /**
   * Get audience
   * @return audience
  **/
  @Schema(description = "")
  public InlineResponse2009Audience getAudience() {
    return audience;
  }

  public void setAudience(InlineResponse2009Audience audience) {
    this.audience = audience;
  }

  public InlineResponse20011 audienceActivity(InlineResponse20011AudienceActivity audienceActivity) {
    this.audienceActivity = audienceActivity;
    return this;
  }

   /**
   * Get audienceActivity
   * @return audienceActivity
  **/
  @Schema(description = "")
  public InlineResponse20011AudienceActivity getAudienceActivity() {
    return audienceActivity;
  }

  public void setAudienceActivity(InlineResponse20011AudienceActivity audienceActivity) {
    this.audienceActivity = audienceActivity;
  }

  public InlineResponse20011 budget(InlineResponse2009Budget budget) {
    this.budget = budget;
    return this;
  }

   /**
   * Get budget
   * @return budget
  **/
  @Schema(description = "")
  public InlineResponse2009Budget getBudget() {
    return budget;
  }

  public void setBudget(InlineResponse2009Budget budget) {
    this.budget = budget;
  }

  public InlineResponse20011 canceledAt(DateTime canceledAt) {
    this.canceledAt = canceledAt;
    return this;
  }

   /**
   * Get canceledAt
   * @return canceledAt
  **/
  @Schema(description = "")
  public DateTime getCanceledAt() {
    return canceledAt;
  }

  public void setCanceledAt(DateTime canceledAt) {
    this.canceledAt = canceledAt;
  }

  public InlineResponse20011 channel(InlineResponse2009Channel channel) {
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @Schema(description = "")
  public InlineResponse2009Channel getChannel() {
    return channel;
  }

  public void setChannel(InlineResponse2009Channel channel) {
    this.channel = channel;
  }

  public InlineResponse20011 createTime(DateTime createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public DateTime getCreateTime() {
    return createTime;
  }

  public void setCreateTime(DateTime createTime) {
    this.createTime = createTime;
  }

  public InlineResponse20011 emailSourceName(String emailSourceName) {
    this.emailSourceName = emailSourceName;
    return this;
  }

   /**
   * Get emailSourceName
   * @return emailSourceName
  **/
  @Schema(description = "")
  public String getEmailSourceName() {
    return emailSourceName;
  }

  public void setEmailSourceName(String emailSourceName) {
    this.emailSourceName = emailSourceName;
  }

  public InlineResponse20011 endTime(DateTime endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public DateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(DateTime endTime) {
    this.endTime = endTime;
  }

  public InlineResponse20011 hasSegment(Boolean hasSegment) {
    this.hasSegment = hasSegment;
    return this;
  }

   /**
   * Get hasSegment
   * @return hasSegment
  **/
  @Schema(description = "")
  public Boolean isHasSegment() {
    return hasSegment;
  }

  public void setHasSegment(Boolean hasSegment) {
    this.hasSegment = hasSegment;
  }

  public InlineResponse20011 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID of an Outreach
   * @return id
  **/
  @Schema(description = "Unique ID of an Outreach")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse20011 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Title or name of an Outreach
   * @return name
  **/
  @Schema(description = "Title or name of an Outreach")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse20011 needsAttention(Boolean needsAttention) {
    this.needsAttention = needsAttention;
    return this;
  }

   /**
   * Get needsAttention
   * @return needsAttention
  **/
  @Schema(description = "")
  public Boolean isNeedsAttention() {
    return needsAttention;
  }

  public void setNeedsAttention(Boolean needsAttention) {
    this.needsAttention = needsAttention;
  }

  public InlineResponse20011 pausedAt(DateTime pausedAt) {
    this.pausedAt = pausedAt;
    return this;
  }

   /**
   * Get pausedAt
   * @return pausedAt
  **/
  @Schema(description = "")
  public DateTime getPausedAt() {
    return pausedAt;
  }

  public void setPausedAt(DateTime pausedAt) {
    this.pausedAt = pausedAt;
  }

  public InlineResponse20011 publishedTime(DateTime publishedTime) {
    this.publishedTime = publishedTime;
    return this;
  }

   /**
   * Get publishedTime
   * @return publishedTime
  **/
  @Schema(description = "")
  public DateTime getPublishedTime() {
    return publishedTime;
  }

  public void setPublishedTime(DateTime publishedTime) {
    this.publishedTime = publishedTime;
  }

  public InlineResponse20011 recipients(List10 recipients) {
    this.recipients = recipients;
    return this;
  }

   /**
   * Get recipients
   * @return recipients
  **/
  @Schema(description = "")
  public List10 getRecipients() {
    return recipients;
  }

  public void setRecipients(List10 recipients) {
    this.recipients = recipients;
  }

  public InlineResponse20011 reportSummary(InlineResponse20011ReportSummary reportSummary) {
    this.reportSummary = reportSummary;
    return this;
  }

   /**
   * Get reportSummary
   * @return reportSummary
  **/
  @Schema(description = "")
  public InlineResponse20011ReportSummary getReportSummary() {
    return reportSummary;
  }

  public void setReportSummary(InlineResponse20011ReportSummary reportSummary) {
    this.reportSummary = reportSummary;
  }

  public InlineResponse20011 showReport(Boolean showReport) {
    this.showReport = showReport;
    return this;
  }

   /**
   * Outreach report availability
   * @return showReport
  **/
  @Schema(description = "Outreach report availability")
  public Boolean isShowReport() {
    return showReport;
  }

  public void setShowReport(Boolean showReport) {
    this.showReport = showReport;
  }

  public InlineResponse20011 startTime(DateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public DateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(DateTime startTime) {
    this.startTime = startTime;
  }

  public InlineResponse20011 status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Campaign, Ad, or Page status
   * @return status
  **/
  @Schema(description = "Campaign, Ad, or Page status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public InlineResponse20011 thumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * The URL of the thumbnail for this outreach
   * @return thumbnail
  **/
  @Schema(description = "The URL of the thumbnail for this outreach")
  public String getThumbnail() {
    return thumbnail;
  }

  public void setThumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
  }

  public InlineResponse20011 type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Supported Campaign, Ad, Page type
   * @return type
  **/
  @Schema(description = "Supported Campaign, Ad, Page type")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public InlineResponse20011 updatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public DateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public InlineResponse20011 wasCanceledByFacebook(Boolean wasCanceledByFacebook) {
    this.wasCanceledByFacebook = wasCanceledByFacebook;
    return this;
  }

   /**
   * Get wasCanceledByFacebook
   * @return wasCanceledByFacebook
  **/
  @Schema(description = "")
  public Boolean isWasCanceledByFacebook() {
    return wasCanceledByFacebook;
  }

  public void setWasCanceledByFacebook(Boolean wasCanceledByFacebook) {
    this.wasCanceledByFacebook = wasCanceledByFacebook;
  }

  public InlineResponse20011 webId(Integer webId) {
    this.webId = webId;
    return this;
  }

   /**
   * Web ID
   * @return webId
  **/
  @Schema(description = "Web ID")
  public Integer getWebId() {
    return webId;
  }

  public void setWebId(Integer webId) {
    this.webId = webId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20011 inlineResponse20011 = (InlineResponse20011) o;
    return Objects.equals(this._links, inlineResponse20011._links) &&
        Objects.equals(this.audience, inlineResponse20011.audience) &&
        Objects.equals(this.audienceActivity, inlineResponse20011.audienceActivity) &&
        Objects.equals(this.budget, inlineResponse20011.budget) &&
        Objects.equals(this.canceledAt, inlineResponse20011.canceledAt) &&
        Objects.equals(this.channel, inlineResponse20011.channel) &&
        Objects.equals(this.createTime, inlineResponse20011.createTime) &&
        Objects.equals(this.emailSourceName, inlineResponse20011.emailSourceName) &&
        Objects.equals(this.endTime, inlineResponse20011.endTime) &&
        Objects.equals(this.hasSegment, inlineResponse20011.hasSegment) &&
        Objects.equals(this.id, inlineResponse20011.id) &&
        Objects.equals(this.name, inlineResponse20011.name) &&
        Objects.equals(this.needsAttention, inlineResponse20011.needsAttention) &&
        Objects.equals(this.pausedAt, inlineResponse20011.pausedAt) &&
        Objects.equals(this.publishedTime, inlineResponse20011.publishedTime) &&
        Objects.equals(this.recipients, inlineResponse20011.recipients) &&
        Objects.equals(this.reportSummary, inlineResponse20011.reportSummary) &&
        Objects.equals(this.showReport, inlineResponse20011.showReport) &&
        Objects.equals(this.startTime, inlineResponse20011.startTime) &&
        Objects.equals(this.status, inlineResponse20011.status) &&
        Objects.equals(this.thumbnail, inlineResponse20011.thumbnail) &&
        Objects.equals(this.type, inlineResponse20011.type) &&
        Objects.equals(this.updatedAt, inlineResponse20011.updatedAt) &&
        Objects.equals(this.wasCanceledByFacebook, inlineResponse20011.wasCanceledByFacebook) &&
        Objects.equals(this.webId, inlineResponse20011.webId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_links, audience, audienceActivity, budget, canceledAt, channel, createTime, emailSourceName, endTime, hasSegment, id, name, needsAttention, pausedAt, publishedTime, recipients, reportSummary, showReport, startTime, status, thumbnail, type, updatedAt, wasCanceledByFacebook, webId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20011 {\n");
    
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("    audienceActivity: ").append(toIndentedString(audienceActivity)).append("\n");
    sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
    sb.append("    canceledAt: ").append(toIndentedString(canceledAt)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    emailSourceName: ").append(toIndentedString(emailSourceName)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    hasSegment: ").append(toIndentedString(hasSegment)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    needsAttention: ").append(toIndentedString(needsAttention)).append("\n");
    sb.append("    pausedAt: ").append(toIndentedString(pausedAt)).append("\n");
    sb.append("    publishedTime: ").append(toIndentedString(publishedTime)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    reportSummary: ").append(toIndentedString(reportSummary)).append("\n");
    sb.append("    showReport: ").append(toIndentedString(showReport)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    wasCanceledByFacebook: ").append(toIndentedString(wasCanceledByFacebook)).append("\n");
    sb.append("    webId: ").append(toIndentedString(webId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
