/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * A summary of opens and clicks for sent campaigns.
 */
@Schema(description = "A summary of opens and clicks for sent campaigns.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class CampaignReportSummary2 {
  @JsonProperty("opens")
  private Integer opens = null;

  @JsonProperty("unique_opens")
  private Integer uniqueOpens = null;

  @JsonProperty("open_rate")
  private BigDecimal openRate = null;

  @JsonProperty("clicks")
  private Integer clicks = null;

  @JsonProperty("subscriber_clicks")
  private Integer subscriberClicks = null;

  @JsonProperty("click_rate")
  private BigDecimal clickRate = null;

   /**
   * The total number of opens for a campaign.
   * @return opens
  **/
  @Schema(description = "The total number of opens for a campaign.")
  public Integer getOpens() {
    return opens;
  }

   /**
   * The number of unique opens.
   * @return uniqueOpens
  **/
  @Schema(description = "The number of unique opens.")
  public Integer getUniqueOpens() {
    return uniqueOpens;
  }

   /**
   * The number of unique opens divided by the total number of successful deliveries.
   * @return openRate
  **/
  @Schema(description = "The number of unique opens divided by the total number of successful deliveries.")
  public BigDecimal getOpenRate() {
    return openRate;
  }

   /**
   * The total number of clicks for an campaign.
   * @return clicks
  **/
  @Schema(description = "The total number of clicks for an campaign.")
  public Integer getClicks() {
    return clicks;
  }

   /**
   * The number of unique clicks.
   * @return subscriberClicks
  **/
  @Schema(description = "The number of unique clicks.")
  public Integer getSubscriberClicks() {
    return subscriberClicks;
  }

   /**
   * The number of unique clicks, divided by the total number of successful deliveries.
   * @return clickRate
  **/
  @Schema(description = "The number of unique clicks, divided by the total number of successful deliveries.")
  public BigDecimal getClickRate() {
    return clickRate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignReportSummary2 campaignReportSummary2 = (CampaignReportSummary2) o;
    return Objects.equals(this.opens, campaignReportSummary2.opens) &&
        Objects.equals(this.uniqueOpens, campaignReportSummary2.uniqueOpens) &&
        Objects.equals(this.openRate, campaignReportSummary2.openRate) &&
        Objects.equals(this.clicks, campaignReportSummary2.clicks) &&
        Objects.equals(this.subscriberClicks, campaignReportSummary2.subscriberClicks) &&
        Objects.equals(this.clickRate, campaignReportSummary2.clickRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(opens, uniqueOpens, openRate, clicks, subscriberClicks, clickRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignReportSummary2 {\n");
    
    sb.append("    opens: ").append(toIndentedString(opens)).append("\n");
    sb.append("    uniqueOpens: ").append(toIndentedString(uniqueOpens)).append("\n");
    sb.append("    openRate: ").append(toIndentedString(openRate)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    subscriberClicks: ").append(toIndentedString(subscriberClicks)).append("\n");
    sb.append("    clickRate: ").append(toIndentedString(clickRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
