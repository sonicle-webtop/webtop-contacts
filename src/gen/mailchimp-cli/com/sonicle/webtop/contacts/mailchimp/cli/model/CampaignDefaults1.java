/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * [Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/) created for this list.
 */
@Schema(description = "[Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/) created for this list.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class CampaignDefaults1 {
  @JsonProperty("from_name")
  private String fromName = null;

  @JsonProperty("from_email")
  private String fromEmail = null;

  @JsonProperty("subject")
  private String subject = null;

  @JsonProperty("language")
  private String language = null;

  public CampaignDefaults1 fromName(String fromName) {
    this.fromName = fromName;
    return this;
  }

   /**
   * The default from name for campaigns sent to this list.
   * @return fromName
  **/
  @Schema(description = "The default from name for campaigns sent to this list.")
  public String getFromName() {
    return fromName;
  }

  public void setFromName(String fromName) {
    this.fromName = fromName;
  }

  public CampaignDefaults1 fromEmail(String fromEmail) {
    this.fromEmail = fromEmail;
    return this;
  }

   /**
   * The default from email for campaigns sent to this list.
   * @return fromEmail
  **/
  @Schema(description = "The default from email for campaigns sent to this list.")
  public String getFromEmail() {
    return fromEmail;
  }

  public void setFromEmail(String fromEmail) {
    this.fromEmail = fromEmail;
  }

  public CampaignDefaults1 subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * The default subject line for campaigns sent to this list.
   * @return subject
  **/
  @Schema(description = "The default subject line for campaigns sent to this list.")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public CampaignDefaults1 language(String language) {
    this.language = language;
    return this;
  }

   /**
   * The default language for this lists&#x27;s forms.
   * @return language
  **/
  @Schema(description = "The default language for this lists's forms.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignDefaults1 campaignDefaults1 = (CampaignDefaults1) o;
    return Objects.equals(this.fromName, campaignDefaults1.fromName) &&
        Objects.equals(this.fromEmail, campaignDefaults1.fromEmail) &&
        Objects.equals(this.subject, campaignDefaults1.subject) &&
        Objects.equals(this.language, campaignDefaults1.language);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromName, fromEmail, subject, language);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignDefaults1 {\n");
    
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    fromEmail: ").append(toIndentedString(fromEmail)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
