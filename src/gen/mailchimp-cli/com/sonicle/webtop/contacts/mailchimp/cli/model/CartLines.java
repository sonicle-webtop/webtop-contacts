/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.EcommerceCartLineItem5;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * A collection of a cart&#x27;s line items.
 */
@Schema(description = "A collection of a cart's line items.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class CartLines {
  @JsonProperty("store_id")
  private String storeId = null;

  @JsonProperty("cart_id")
  private String cartId = null;

  @JsonProperty("lines")
  private List<EcommerceCartLineItem5> lines = null;

  @JsonProperty("total_items")
  private Integer totalItems = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

  public CartLines storeId(String storeId) {
    this.storeId = storeId;
    return this;
  }

   /**
   * The store id.
   * @return storeId
  **/
  @Schema(description = "The store id.")
  public String getStoreId() {
    return storeId;
  }

  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  public CartLines cartId(String cartId) {
    this.cartId = cartId;
    return this;
  }

   /**
   * The cart id.
   * @return cartId
  **/
  @Schema(description = "The cart id.")
  public String getCartId() {
    return cartId;
  }

  public void setCartId(String cartId) {
    this.cartId = cartId;
  }

  public CartLines lines(List<EcommerceCartLineItem5> lines) {
    this.lines = lines;
    return this;
  }

  public CartLines addLinesItem(EcommerceCartLineItem5 linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * An array of objects, each representing a cart&#x27;s line item.
   * @return lines
  **/
  @Schema(description = "An array of objects, each representing a cart's line item.")
  public List<EcommerceCartLineItem5> getLines() {
    return lines;
  }

  public void setLines(List<EcommerceCartLineItem5> lines) {
    this.lines = lines;
  }

   /**
   * The total number of items matching the query regardless of pagination.
   * @return totalItems
  **/
  @Schema(description = "The total number of items matching the query regardless of pagination.")
  public Integer getTotalItems() {
    return totalItems;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartLines cartLines = (CartLines) o;
    return Objects.equals(this.storeId, cartLines.storeId) &&
        Objects.equals(this.cartId, cartLines.cartId) &&
        Objects.equals(this.lines, cartLines.lines) &&
        Objects.equals(this.totalItems, cartLines.totalItems) &&
        Objects.equals(this._links, cartLines._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storeId, cartId, lines, totalItems, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartLines {\n");
    
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    totalItems: ").append(toIndentedString(totalItems)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
