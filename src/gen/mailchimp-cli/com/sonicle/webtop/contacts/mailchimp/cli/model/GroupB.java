/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * Stats for Group B.
 */
@Schema(description = "Stats for Group B.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class GroupB {
  @JsonProperty("total_clicks_b")
  private Integer totalClicksB = null;

  @JsonProperty("click_percentage_b")
  private BigDecimal clickPercentageB = null;

  @JsonProperty("unique_clicks_b")
  private Integer uniqueClicksB = null;

  @JsonProperty("unique_click_percentage_b")
  private BigDecimal uniqueClickPercentageB = null;

   /**
   * The total number of clicks for Group B.
   * @return totalClicksB
  **/
  @Schema(description = "The total number of clicks for Group B.")
  public Integer getTotalClicksB() {
    return totalClicksB;
  }

   /**
   * The percentage of total clicks for Group B.
   * @return clickPercentageB
  **/
  @Schema(description = "The percentage of total clicks for Group B.")
  public BigDecimal getClickPercentageB() {
    return clickPercentageB;
  }

   /**
   * The number of unique clicks for Group B.
   * @return uniqueClicksB
  **/
  @Schema(description = "The number of unique clicks for Group B.")
  public Integer getUniqueClicksB() {
    return uniqueClicksB;
  }

   /**
   * The percentage of unique clicks for Group B.
   * @return uniqueClickPercentageB
  **/
  @Schema(description = "The percentage of unique clicks for Group B.")
  public BigDecimal getUniqueClickPercentageB() {
    return uniqueClickPercentageB;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupB groupB = (GroupB) o;
    return Objects.equals(this.totalClicksB, groupB.totalClicksB) &&
        Objects.equals(this.clickPercentageB, groupB.clickPercentageB) &&
        Objects.equals(this.uniqueClicksB, groupB.uniqueClicksB) &&
        Objects.equals(this.uniqueClickPercentageB, groupB.uniqueClickPercentageB);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalClicksB, clickPercentageB, uniqueClicksB, uniqueClickPercentageB);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupB {\n");
    
    sb.append("    totalClicksB: ").append(toIndentedString(totalClicksB)).append("\n");
    sb.append("    clickPercentageB: ").append(toIndentedString(clickPercentageB)).append("\n");
    sb.append("    uniqueClicksB: ").append(toIndentedString(uniqueClicksB)).append("\n");
    sb.append("    uniqueClickPercentageB: ").append(toIndentedString(uniqueClickPercentageB)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
