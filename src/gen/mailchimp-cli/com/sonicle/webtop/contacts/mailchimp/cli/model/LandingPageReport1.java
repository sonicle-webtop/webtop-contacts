/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.LandingPageReportEcommerce;
import com.sonicle.webtop.contacts.mailchimp.cli.model.LandingPageReportTimeseries;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import com.sonicle.webtop.contacts.mailchimp.cli.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * A summary of an individual landing page&#x27;s settings and content.
 */
@Schema(description = "A summary of an individual landing page's settings and content.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class LandingPageReport1 {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("published_at")
  private DateTime publishedAt = null;

  @JsonProperty("unpublished_at")
  private DateTime unpublishedAt = null;

  @JsonProperty("status")
  private String status = null;

  @JsonProperty("list_id")
  private String listId = null;

  @JsonProperty("visits")
  private Integer visits = null;

  @JsonProperty("unique_visits")
  private Integer uniqueVisits = null;

  @JsonProperty("subscribes")
  private Integer subscribes = null;

  @JsonProperty("clicks")
  private Integer clicks = null;

  @JsonProperty("conversion_rate")
  private BigDecimal conversionRate = null;

  @JsonProperty("timeseries")
  private LandingPageReportTimeseries timeseries = null;

  @JsonProperty("ecommerce")
  private LandingPageReportEcommerce ecommerce = null;

  @JsonProperty("web_id")
  private Integer webId = null;

  @JsonProperty("list_name")
  private String listName = null;

  @JsonProperty("signup_tags")
  private List<Tag> signupTags = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

   /**
   * A string that uniquely identifies this landing page.
   * @return id
  **/
  @Schema(example = "00dfc2e1f0", description = "A string that uniquely identifies this landing page.")
  public String getId() {
    return id;
  }

   /**
   * The name of this landing page the user will see.
   * @return name
  **/
  @Schema(description = "The name of this landing page the user will see.")
  public String getName() {
    return name;
  }

   /**
   * The name of the landing page the user&#x27;s customers will see.
   * @return title
  **/
  @Schema(description = "The name of the landing page the user's customers will see.")
  public String getTitle() {
    return title;
  }

   /**
   * The landing page url.
   * @return url
  **/
  @Schema(description = "The landing page url.")
  public String getUrl() {
    return url;
  }

   /**
   * The time this landing page was published.
   * @return publishedAt
  **/
  @Schema(description = "The time this landing page was published.")
  public DateTime getPublishedAt() {
    return publishedAt;
  }

   /**
   * The time this landing page was unpublished.
   * @return unpublishedAt
  **/
  @Schema(description = "The time this landing page was unpublished.")
  public DateTime getUnpublishedAt() {
    return unpublishedAt;
  }

   /**
   * The status of the landing page.
   * @return status
  **/
  @Schema(description = "The status of the landing page.")
  public String getStatus() {
    return status;
  }

   /**
   * The list id connected to this landing page.
   * @return listId
  **/
  @Schema(description = "The list id connected to this landing page.")
  public String getListId() {
    return listId;
  }

   /**
   * The number of visits to this landing pages.
   * @return visits
  **/
  @Schema(description = "The number of visits to this landing pages.")
  public Integer getVisits() {
    return visits;
  }

   /**
   * The number of unique visits to this landing pages.
   * @return uniqueVisits
  **/
  @Schema(description = "The number of unique visits to this landing pages.")
  public Integer getUniqueVisits() {
    return uniqueVisits;
  }

   /**
   * The number of subscribes to this landing pages.
   * @return subscribes
  **/
  @Schema(description = "The number of subscribes to this landing pages.")
  public Integer getSubscribes() {
    return subscribes;
  }

   /**
   * The number of clicks to this landing pages.
   * @return clicks
  **/
  @Schema(description = "The number of clicks to this landing pages.")
  public Integer getClicks() {
    return clicks;
  }

   /**
   * The percentage of people who visited your landing page and were added to your list.
   * @return conversionRate
  **/
  @Schema(description = "The percentage of people who visited your landing page and were added to your list.")
  public BigDecimal getConversionRate() {
    return conversionRate;
  }

  public LandingPageReport1 timeseries(LandingPageReportTimeseries timeseries) {
    this.timeseries = timeseries;
    return this;
  }

   /**
   * Get timeseries
   * @return timeseries
  **/
  @Schema(description = "")
  public LandingPageReportTimeseries getTimeseries() {
    return timeseries;
  }

  public void setTimeseries(LandingPageReportTimeseries timeseries) {
    this.timeseries = timeseries;
  }

  public LandingPageReport1 ecommerce(LandingPageReportEcommerce ecommerce) {
    this.ecommerce = ecommerce;
    return this;
  }

   /**
   * Get ecommerce
   * @return ecommerce
  **/
  @Schema(description = "")
  public LandingPageReportEcommerce getEcommerce() {
    return ecommerce;
  }

  public void setEcommerce(LandingPageReportEcommerce ecommerce) {
    this.ecommerce = ecommerce;
  }

   /**
   * The ID used in the Mailchimp web application.
   * @return webId
  **/
  @Schema(example = "33345484", description = "The ID used in the Mailchimp web application.")
  public Integer getWebId() {
    return webId;
  }

   /**
   * List Name
   * @return listName
  **/
  @Schema(example = "Test List", description = "List Name")
  public String getListName() {
    return listName;
  }

   /**
   * A list of tags associated to the landing page.
   * @return signupTags
  **/
  @Schema(description = "A list of tags associated to the landing page.")
  public List<Tag> getSignupTags() {
    return signupTags;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LandingPageReport1 landingPageReport1 = (LandingPageReport1) o;
    return Objects.equals(this.id, landingPageReport1.id) &&
        Objects.equals(this.name, landingPageReport1.name) &&
        Objects.equals(this.title, landingPageReport1.title) &&
        Objects.equals(this.url, landingPageReport1.url) &&
        Objects.equals(this.publishedAt, landingPageReport1.publishedAt) &&
        Objects.equals(this.unpublishedAt, landingPageReport1.unpublishedAt) &&
        Objects.equals(this.status, landingPageReport1.status) &&
        Objects.equals(this.listId, landingPageReport1.listId) &&
        Objects.equals(this.visits, landingPageReport1.visits) &&
        Objects.equals(this.uniqueVisits, landingPageReport1.uniqueVisits) &&
        Objects.equals(this.subscribes, landingPageReport1.subscribes) &&
        Objects.equals(this.clicks, landingPageReport1.clicks) &&
        Objects.equals(this.conversionRate, landingPageReport1.conversionRate) &&
        Objects.equals(this.timeseries, landingPageReport1.timeseries) &&
        Objects.equals(this.ecommerce, landingPageReport1.ecommerce) &&
        Objects.equals(this.webId, landingPageReport1.webId) &&
        Objects.equals(this.listName, landingPageReport1.listName) &&
        Objects.equals(this.signupTags, landingPageReport1.signupTags) &&
        Objects.equals(this._links, landingPageReport1._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, title, url, publishedAt, unpublishedAt, status, listId, visits, uniqueVisits, subscribes, clicks, conversionRate, timeseries, ecommerce, webId, listName, signupTags, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LandingPageReport1 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    publishedAt: ").append(toIndentedString(publishedAt)).append("\n");
    sb.append("    unpublishedAt: ").append(toIndentedString(unpublishedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    visits: ").append(toIndentedString(visits)).append("\n");
    sb.append("    uniqueVisits: ").append(toIndentedString(uniqueVisits)).append("\n");
    sb.append("    subscribes: ").append(toIndentedString(subscribes)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    conversionRate: ").append(toIndentedString(conversionRate)).append("\n");
    sb.append("    timeseries: ").append(toIndentedString(timeseries)).append("\n");
    sb.append("    ecommerce: ").append(toIndentedString(ecommerce)).append("\n");
    sb.append("    webId: ").append(toIndentedString(webId)).append("\n");
    sb.append("    listName: ").append(toIndentedString(listName)).append("\n");
    sb.append("    signupTags: ").append(toIndentedString(signupTags)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
