/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * Information about subscribers in an Automation email queue.
 */
@Schema(description = "Information about subscribers in an Automation email queue.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class SubscriberInAutomationQueue3 {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("workflow_id")
  private String workflowId = null;

  @JsonProperty("email_id")
  private String emailId = null;

  @JsonProperty("list_id")
  private String listId = null;

  @JsonProperty("email_address")
  private String emailAddress = null;

  @JsonProperty("next_send")
  private DateTime nextSend = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

   /**
   * The MD5 hash of the lowercase version of the list member&#x27;s email address.
   * @return id
  **/
  @Schema(description = "The MD5 hash of the lowercase version of the list member's email address.")
  public String getId() {
    return id;
  }

   /**
   * A string that uniquely identifies an Automation workflow.
   * @return workflowId
  **/
  @Schema(description = "A string that uniquely identifies an Automation workflow.")
  public String getWorkflowId() {
    return workflowId;
  }

   /**
   * A string that uniquely identifies an email in an Automation workflow.
   * @return emailId
  **/
  @Schema(description = "A string that uniquely identifies an email in an Automation workflow.")
  public String getEmailId() {
    return emailId;
  }

   /**
   * A string that uniquely identifies a list.
   * @return listId
  **/
  @Schema(description = "A string that uniquely identifies a list.")
  public String getListId() {
    return listId;
  }

  public SubscriberInAutomationQueue3 emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * The list member&#x27;s email address.
   * @return emailAddress
  **/
  @Schema(required = true, description = "The list member's email address.")
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

   /**
   * The date and time of the next send for the workflow email in ISO 8601 format.
   * @return nextSend
  **/
  @Schema(description = "The date and time of the next send for the workflow email in ISO 8601 format.")
  public DateTime getNextSend() {
    return nextSend;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriberInAutomationQueue3 subscriberInAutomationQueue3 = (SubscriberInAutomationQueue3) o;
    return Objects.equals(this.id, subscriberInAutomationQueue3.id) &&
        Objects.equals(this.workflowId, subscriberInAutomationQueue3.workflowId) &&
        Objects.equals(this.emailId, subscriberInAutomationQueue3.emailId) &&
        Objects.equals(this.listId, subscriberInAutomationQueue3.listId) &&
        Objects.equals(this.emailAddress, subscriberInAutomationQueue3.emailAddress) &&
        Objects.equals(this.nextSend, subscriberInAutomationQueue3.nextSend) &&
        Objects.equals(this._links, subscriberInAutomationQueue3._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, workflowId, emailId, listId, emailAddress, nextSend, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriberInAutomationQueue3 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("    emailId: ").append(toIndentedString(emailId)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    nextSend: ").append(toIndentedString(nextSend)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
