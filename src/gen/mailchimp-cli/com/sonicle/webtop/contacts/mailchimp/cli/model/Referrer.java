/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * A single instance of a campaign referral.
 */
@Schema(description = "A single instance of a campaign referral.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class Referrer {
  @JsonProperty("referrer")
  private String referrer = null;

  @JsonProperty("clicks")
  private Integer clicks = null;

  @JsonProperty("first_click")
  private DateTime firstClick = null;

  @JsonProperty("last_click")
  private DateTime lastClick = null;

  public Referrer referrer(String referrer) {
    this.referrer = referrer;
    return this;
  }

   /**
   * A referrer (truncated to 100 bytes).
   * @return referrer
  **/
  @Schema(description = "A referrer (truncated to 100 bytes).")
  public String getReferrer() {
    return referrer;
  }

  public void setReferrer(String referrer) {
    this.referrer = referrer;
  }

  public Referrer clicks(Integer clicks) {
    this.clicks = clicks;
    return this;
  }

   /**
   * The number of clicks a single referrer generated.
   * @return clicks
  **/
  @Schema(description = "The number of clicks a single referrer generated.")
  public Integer getClicks() {
    return clicks;
  }

  public void setClicks(Integer clicks) {
    this.clicks = clicks;
  }

  public Referrer firstClick(DateTime firstClick) {
    this.firstClick = firstClick;
    return this;
  }

   /**
   * The timestamp for the first click from this referrer.
   * @return firstClick
  **/
  @Schema(description = "The timestamp for the first click from this referrer.")
  public DateTime getFirstClick() {
    return firstClick;
  }

  public void setFirstClick(DateTime firstClick) {
    this.firstClick = firstClick;
  }

  public Referrer lastClick(DateTime lastClick) {
    this.lastClick = lastClick;
    return this;
  }

   /**
   * The timestamp for the last click from this referrer.
   * @return lastClick
  **/
  @Schema(description = "The timestamp for the last click from this referrer.")
  public DateTime getLastClick() {
    return lastClick;
  }

  public void setLastClick(DateTime lastClick) {
    this.lastClick = lastClick;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Referrer referrer = (Referrer) o;
    return Objects.equals(this.referrer, referrer.referrer) &&
        Objects.equals(this.clicks, referrer.clicks) &&
        Objects.equals(this.firstClick, referrer.firstClick) &&
        Objects.equals(this.lastClick, referrer.lastClick);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referrer, clicks, firstClick, lastClick);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Referrer {\n");
    
    sb.append("    referrer: ").append(toIndentedString(referrer)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    firstClick: ").append(toIndentedString(firstClick)).append("\n");
    sb.append("    lastClick: ").append(toIndentedString(lastClick)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
