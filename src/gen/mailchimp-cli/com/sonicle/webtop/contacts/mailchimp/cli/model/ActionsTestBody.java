/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * ActionsTestBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class ActionsTestBody {
  @JsonProperty("test_emails")
  private List<String> testEmails = new ArrayList<>();

  /**
   * Choose the type of test email to send.
   */
  public enum SendTypeEnum {
    HTML("html"),
    PLAINTEXT("plaintext");

    private String value;

    SendTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static SendTypeEnum fromValue(String text) {
      for (SendTypeEnum b : SendTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("send_type")
  private SendTypeEnum sendType = null;

  public ActionsTestBody testEmails(List<String> testEmails) {
    this.testEmails = testEmails;
    return this;
  }

  public ActionsTestBody addTestEmailsItem(String testEmailsItem) {
    this.testEmails.add(testEmailsItem);
    return this;
  }

   /**
   * An array of email addresses to send the test email to.
   * @return testEmails
  **/
  @Schema(required = true, description = "An array of email addresses to send the test email to.")
  public List<String> getTestEmails() {
    return testEmails;
  }

  public void setTestEmails(List<String> testEmails) {
    this.testEmails = testEmails;
  }

  public ActionsTestBody sendType(SendTypeEnum sendType) {
    this.sendType = sendType;
    return this;
  }

   /**
   * Choose the type of test email to send.
   * @return sendType
  **/
  @Schema(required = true, description = "Choose the type of test email to send.")
  public SendTypeEnum getSendType() {
    return sendType;
  }

  public void setSendType(SendTypeEnum sendType) {
    this.sendType = sendType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionsTestBody actionsTestBody = (ActionsTestBody) o;
    return Objects.equals(this.testEmails, actionsTestBody.testEmails) &&
        Objects.equals(this.sendType, actionsTestBody.sendType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testEmails, sendType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionsTestBody {\n");
    
    sb.append("    testEmails: ").append(toIndentedString(testEmails)).append("\n");
    sb.append("    sendType: ").append(toIndentedString(sendType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
