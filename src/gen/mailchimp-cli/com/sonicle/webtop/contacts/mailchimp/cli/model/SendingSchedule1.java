/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.DailySendingDays;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * The schedule for sending the RSS Campaign.
 */
@Schema(description = "The schedule for sending the RSS Campaign.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class SendingSchedule1 {
  @JsonProperty("hour")
  private Integer hour = null;

  @JsonProperty("daily_send")
  private DailySendingDays dailySend = null;

  /**
   * The day of the week to send a weekly RSS Campaign.
   */
  public enum WeeklySendDayEnum {
    SUNDAY("sunday"),
    MONDAY("monday"),
    TUESDAY("tuesday"),
    WEDNESDAY("wednesday"),
    THURSDAY("thursday"),
    FRIDAY("friday"),
    SATURDAY("saturday");

    private String value;

    WeeklySendDayEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static WeeklySendDayEnum fromValue(String text) {
      for (WeeklySendDayEnum b : WeeklySendDayEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("weekly_send_day")
  private WeeklySendDayEnum weeklySendDay = null;

  @JsonProperty("monthly_send_date")
  private BigDecimal monthlySendDate = null;

  public SendingSchedule1 hour(Integer hour) {
    this.hour = hour;
    return this;
  }

   /**
   * The hour to send the campaign in local time. Acceptable hours are 0-23. For example, &#x27;4&#x27; would be 4am in [your account&#x27;s default time zone](https://mailchimp.com/help/set-account-details/).
   * minimum: 0
   * maximum: 23
   * @return hour
  **/
  @Schema(description = "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-details/).")
  public Integer getHour() {
    return hour;
  }

  public void setHour(Integer hour) {
    this.hour = hour;
  }

  public SendingSchedule1 dailySend(DailySendingDays dailySend) {
    this.dailySend = dailySend;
    return this;
  }

   /**
   * Get dailySend
   * @return dailySend
  **/
  @Schema(description = "")
  public DailySendingDays getDailySend() {
    return dailySend;
  }

  public void setDailySend(DailySendingDays dailySend) {
    this.dailySend = dailySend;
  }

  public SendingSchedule1 weeklySendDay(WeeklySendDayEnum weeklySendDay) {
    this.weeklySendDay = weeklySendDay;
    return this;
  }

   /**
   * The day of the week to send a weekly RSS Campaign.
   * @return weeklySendDay
  **/
  @Schema(description = "The day of the week to send a weekly RSS Campaign.")
  public WeeklySendDayEnum getWeeklySendDay() {
    return weeklySendDay;
  }

  public void setWeeklySendDay(WeeklySendDayEnum weeklySendDay) {
    this.weeklySendDay = weeklySendDay;
  }

  public SendingSchedule1 monthlySendDate(BigDecimal monthlySendDate) {
    this.monthlySendDate = monthlySendDate;
    return this;
  }

   /**
   * The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where &#x27;0&#x27; is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
   * minimum: 0
   * maximum: 31
   * @return monthlySendDate
  **/
  @Schema(description = "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.")
  public BigDecimal getMonthlySendDate() {
    return monthlySendDate;
  }

  public void setMonthlySendDate(BigDecimal monthlySendDate) {
    this.monthlySendDate = monthlySendDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendingSchedule1 sendingSchedule1 = (SendingSchedule1) o;
    return Objects.equals(this.hour, sendingSchedule1.hour) &&
        Objects.equals(this.dailySend, sendingSchedule1.dailySend) &&
        Objects.equals(this.weeklySendDay, sendingSchedule1.weeklySendDay) &&
        Objects.equals(this.monthlySendDate, sendingSchedule1.monthlySendDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hour, dailySend, weeklySendDay, monthlySendDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendingSchedule1 {\n");
    
    sb.append("    hour: ").append(toIndentedString(hour)).append("\n");
    sb.append("    dailySend: ").append(toIndentedString(dailySend)).append("\n");
    sb.append("    weeklySendDay: ").append(toIndentedString(weeklySendDay)).append("\n");
    sb.append("    monthlySendDate: ").append(toIndentedString(monthlySendDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
