/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * CampaignReports1Timewarp
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class CampaignReports1Timewarp {
  @JsonProperty("gmt_offset")
  private Integer gmtOffset = null;

  @JsonProperty("opens")
  private Integer opens = null;

  @JsonProperty("last_open")
  private DateTime lastOpen = null;

  @JsonProperty("unique_opens")
  private Integer uniqueOpens = null;

  @JsonProperty("clicks")
  private Integer clicks = null;

  @JsonProperty("last_click")
  private DateTime lastClick = null;

  @JsonProperty("unique_clicks")
  private Integer uniqueClicks = null;

  @JsonProperty("bounces")
  private Integer bounces = null;

  public CampaignReports1Timewarp gmtOffset(Integer gmtOffset) {
    this.gmtOffset = gmtOffset;
    return this;
  }

   /**
   * For campaigns sent with timewarp, the time zone group the member is apart of.
   * @return gmtOffset
  **/
  @Schema(description = "For campaigns sent with timewarp, the time zone group the member is apart of.")
  public Integer getGmtOffset() {
    return gmtOffset;
  }

  public void setGmtOffset(Integer gmtOffset) {
    this.gmtOffset = gmtOffset;
  }

  public CampaignReports1Timewarp opens(Integer opens) {
    this.opens = opens;
    return this;
  }

   /**
   * The number of opens.
   * @return opens
  **/
  @Schema(description = "The number of opens.")
  public Integer getOpens() {
    return opens;
  }

  public void setOpens(Integer opens) {
    this.opens = opens;
  }

  public CampaignReports1Timewarp lastOpen(DateTime lastOpen) {
    this.lastOpen = lastOpen;
    return this;
  }

   /**
   * The date and time of the last open in ISO 8601 format.
   * @return lastOpen
  **/
  @Schema(description = "The date and time of the last open in ISO 8601 format.")
  public DateTime getLastOpen() {
    return lastOpen;
  }

  public void setLastOpen(DateTime lastOpen) {
    this.lastOpen = lastOpen;
  }

  public CampaignReports1Timewarp uniqueOpens(Integer uniqueOpens) {
    this.uniqueOpens = uniqueOpens;
    return this;
  }

   /**
   * The number of unique opens.
   * @return uniqueOpens
  **/
  @Schema(description = "The number of unique opens.")
  public Integer getUniqueOpens() {
    return uniqueOpens;
  }

  public void setUniqueOpens(Integer uniqueOpens) {
    this.uniqueOpens = uniqueOpens;
  }

  public CampaignReports1Timewarp clicks(Integer clicks) {
    this.clicks = clicks;
    return this;
  }

   /**
   * The number of clicks.
   * @return clicks
  **/
  @Schema(description = "The number of clicks.")
  public Integer getClicks() {
    return clicks;
  }

  public void setClicks(Integer clicks) {
    this.clicks = clicks;
  }

  public CampaignReports1Timewarp lastClick(DateTime lastClick) {
    this.lastClick = lastClick;
    return this;
  }

   /**
   * The date and time of the last click in ISO 8601 format.
   * @return lastClick
  **/
  @Schema(description = "The date and time of the last click in ISO 8601 format.")
  public DateTime getLastClick() {
    return lastClick;
  }

  public void setLastClick(DateTime lastClick) {
    this.lastClick = lastClick;
  }

  public CampaignReports1Timewarp uniqueClicks(Integer uniqueClicks) {
    this.uniqueClicks = uniqueClicks;
    return this;
  }

   /**
   * The number of unique clicks.
   * @return uniqueClicks
  **/
  @Schema(description = "The number of unique clicks.")
  public Integer getUniqueClicks() {
    return uniqueClicks;
  }

  public void setUniqueClicks(Integer uniqueClicks) {
    this.uniqueClicks = uniqueClicks;
  }

  public CampaignReports1Timewarp bounces(Integer bounces) {
    this.bounces = bounces;
    return this;
  }

   /**
   * The number of bounces.
   * @return bounces
  **/
  @Schema(description = "The number of bounces.")
  public Integer getBounces() {
    return bounces;
  }

  public void setBounces(Integer bounces) {
    this.bounces = bounces;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignReports1Timewarp campaignReports1Timewarp = (CampaignReports1Timewarp) o;
    return Objects.equals(this.gmtOffset, campaignReports1Timewarp.gmtOffset) &&
        Objects.equals(this.opens, campaignReports1Timewarp.opens) &&
        Objects.equals(this.lastOpen, campaignReports1Timewarp.lastOpen) &&
        Objects.equals(this.uniqueOpens, campaignReports1Timewarp.uniqueOpens) &&
        Objects.equals(this.clicks, campaignReports1Timewarp.clicks) &&
        Objects.equals(this.lastClick, campaignReports1Timewarp.lastClick) &&
        Objects.equals(this.uniqueClicks, campaignReports1Timewarp.uniqueClicks) &&
        Objects.equals(this.bounces, campaignReports1Timewarp.bounces);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gmtOffset, opens, lastOpen, uniqueOpens, clicks, lastClick, uniqueClicks, bounces);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignReports1Timewarp {\n");
    
    sb.append("    gmtOffset: ").append(toIndentedString(gmtOffset)).append("\n");
    sb.append("    opens: ").append(toIndentedString(opens)).append("\n");
    sb.append("    lastOpen: ").append(toIndentedString(lastOpen)).append("\n");
    sb.append("    uniqueOpens: ").append(toIndentedString(uniqueOpens)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    lastClick: ").append(toIndentedString(lastClick)).append("\n");
    sb.append("    uniqueClicks: ").append(toIndentedString(uniqueClicks)).append("\n");
    sb.append("    bounces: ").append(toIndentedString(bounces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
