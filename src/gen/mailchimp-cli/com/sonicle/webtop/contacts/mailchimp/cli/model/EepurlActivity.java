/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ClickSummary;
import com.sonicle.webtop.contacts.mailchimp.cli.model.Referrer;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import com.sonicle.webtop.contacts.mailchimp.cli.model.TwitterStats;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * A summary of social activity for the campaign, tracked by EepURL.
 */
@Schema(description = "A summary of social activity for the campaign, tracked by EepURL.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class EepurlActivity {
  @JsonProperty("twitter")
  private TwitterStats twitter = null;

  @JsonProperty("clicks")
  private ClickSummary clicks = null;

  @JsonProperty("referrers")
  private List<Referrer> referrers = null;

  @JsonProperty("eepurl")
  private String eepurl = null;

  @JsonProperty("campaign_id")
  private String campaignId = null;

  @JsonProperty("total_items")
  private Integer totalItems = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

  public EepurlActivity twitter(TwitterStats twitter) {
    this.twitter = twitter;
    return this;
  }

   /**
   * Get twitter
   * @return twitter
  **/
  @Schema(description = "")
  public TwitterStats getTwitter() {
    return twitter;
  }

  public void setTwitter(TwitterStats twitter) {
    this.twitter = twitter;
  }

  public EepurlActivity clicks(ClickSummary clicks) {
    this.clicks = clicks;
    return this;
  }

   /**
   * Get clicks
   * @return clicks
  **/
  @Schema(description = "")
  public ClickSummary getClicks() {
    return clicks;
  }

  public void setClicks(ClickSummary clicks) {
    this.clicks = clicks;
  }

   /**
   * A summary of the top referrers for the campaign.
   * @return referrers
  **/
  @Schema(description = "A summary of the top referrers for the campaign.")
  public List<Referrer> getReferrers() {
    return referrers;
  }

   /**
   * The shortened link used for tracking.
   * @return eepurl
  **/
  @Schema(description = "The shortened link used for tracking.")
  public String getEepurl() {
    return eepurl;
  }

   /**
   * The unique id for the campaign.
   * @return campaignId
  **/
  @Schema(description = "The unique id for the campaign.")
  public String getCampaignId() {
    return campaignId;
  }

   /**
   * The total number of items matching the query regardless of pagination.
   * @return totalItems
  **/
  @Schema(description = "The total number of items matching the query regardless of pagination.")
  public Integer getTotalItems() {
    return totalItems;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EepurlActivity eepurlActivity = (EepurlActivity) o;
    return Objects.equals(this.twitter, eepurlActivity.twitter) &&
        Objects.equals(this.clicks, eepurlActivity.clicks) &&
        Objects.equals(this.referrers, eepurlActivity.referrers) &&
        Objects.equals(this.eepurl, eepurlActivity.eepurl) &&
        Objects.equals(this.campaignId, eepurlActivity.campaignId) &&
        Objects.equals(this.totalItems, eepurlActivity.totalItems) &&
        Objects.equals(this._links, eepurlActivity._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(twitter, clicks, referrers, eepurl, campaignId, totalItems, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EepurlActivity {\n");
    
    sb.append("    twitter: ").append(toIndentedString(twitter)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    referrers: ").append(toIndentedString(referrers)).append("\n");
    sb.append("    eepurl: ").append(toIndentedString(eepurl)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    totalItems: ").append(toIndentedString(totalItems)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
