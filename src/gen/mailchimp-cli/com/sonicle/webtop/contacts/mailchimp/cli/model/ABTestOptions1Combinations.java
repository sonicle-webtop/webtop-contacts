/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ABTestOptions1Combinations
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class ABTestOptions1Combinations {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("subject_line")
  private Integer subjectLine = null;

  @JsonProperty("send_time")
  private Integer sendTime = null;

  @JsonProperty("from_name")
  private Integer fromName = null;

  @JsonProperty("reply_to")
  private Integer replyTo = null;

  @JsonProperty("content_description")
  private Integer contentDescription = null;

  @JsonProperty("recipients")
  private Integer recipients = null;

  public ABTestOptions1Combinations id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID for the combination.
   * @return id
  **/
  @Schema(description = "Unique ID for the combination.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ABTestOptions1Combinations subjectLine(Integer subjectLine) {
    this.subjectLine = subjectLine;
    return this;
  }

   /**
   * The index of &#x60;variate_settings.subject_lines&#x60; used.
   * @return subjectLine
  **/
  @Schema(description = "The index of `variate_settings.subject_lines` used.")
  public Integer getSubjectLine() {
    return subjectLine;
  }

  public void setSubjectLine(Integer subjectLine) {
    this.subjectLine = subjectLine;
  }

  public ABTestOptions1Combinations sendTime(Integer sendTime) {
    this.sendTime = sendTime;
    return this;
  }

   /**
   * The index of &#x60;variate_settings.send_times&#x60; used.
   * @return sendTime
  **/
  @Schema(description = "The index of `variate_settings.send_times` used.")
  public Integer getSendTime() {
    return sendTime;
  }

  public void setSendTime(Integer sendTime) {
    this.sendTime = sendTime;
  }

  public ABTestOptions1Combinations fromName(Integer fromName) {
    this.fromName = fromName;
    return this;
  }

   /**
   * The index of &#x60;variate_settings.from_names&#x60; used.
   * @return fromName
  **/
  @Schema(description = "The index of `variate_settings.from_names` used.")
  public Integer getFromName() {
    return fromName;
  }

  public void setFromName(Integer fromName) {
    this.fromName = fromName;
  }

  public ABTestOptions1Combinations replyTo(Integer replyTo) {
    this.replyTo = replyTo;
    return this;
  }

   /**
   * The index of &#x60;variate_settings.reply_to_addresses&#x60; used.
   * @return replyTo
  **/
  @Schema(description = "The index of `variate_settings.reply_to_addresses` used.")
  public Integer getReplyTo() {
    return replyTo;
  }

  public void setReplyTo(Integer replyTo) {
    this.replyTo = replyTo;
  }

  public ABTestOptions1Combinations contentDescription(Integer contentDescription) {
    this.contentDescription = contentDescription;
    return this;
  }

   /**
   * The index of &#x60;variate_settings.contents&#x60; used.
   * @return contentDescription
  **/
  @Schema(description = "The index of `variate_settings.contents` used.")
  public Integer getContentDescription() {
    return contentDescription;
  }

  public void setContentDescription(Integer contentDescription) {
    this.contentDescription = contentDescription;
  }

  public ABTestOptions1Combinations recipients(Integer recipients) {
    this.recipients = recipients;
    return this;
  }

   /**
   * The number of recipients for this combination.
   * @return recipients
  **/
  @Schema(description = "The number of recipients for this combination.")
  public Integer getRecipients() {
    return recipients;
  }

  public void setRecipients(Integer recipients) {
    this.recipients = recipients;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ABTestOptions1Combinations abTestOptions1Combinations = (ABTestOptions1Combinations) o;
    return Objects.equals(this.id, abTestOptions1Combinations.id) &&
        Objects.equals(this.subjectLine, abTestOptions1Combinations.subjectLine) &&
        Objects.equals(this.sendTime, abTestOptions1Combinations.sendTime) &&
        Objects.equals(this.fromName, abTestOptions1Combinations.fromName) &&
        Objects.equals(this.replyTo, abTestOptions1Combinations.replyTo) &&
        Objects.equals(this.contentDescription, abTestOptions1Combinations.contentDescription) &&
        Objects.equals(this.recipients, abTestOptions1Combinations.recipients);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, subjectLine, sendTime, fromName, replyTo, contentDescription, recipients);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ABTestOptions1Combinations {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    subjectLine: ").append(toIndentedString(subjectLine)).append("\n");
    sb.append("    sendTime: ").append(toIndentedString(sendTime)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("    contentDescription: ").append(toIndentedString(contentDescription)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
