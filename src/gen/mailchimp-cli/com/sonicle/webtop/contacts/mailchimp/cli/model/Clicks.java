/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import org.joda.time.DateTime;
/**
 * An object describing the click activity for the campaign.
 */
@Schema(description = "An object describing the click activity for the campaign.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class Clicks {
  @JsonProperty("clicks_total")
  private Integer clicksTotal = null;

  @JsonProperty("unique_clicks")
  private Integer uniqueClicks = null;

  @JsonProperty("unique_subscriber_clicks")
  private Integer uniqueSubscriberClicks = null;

  @JsonProperty("click_rate")
  private BigDecimal clickRate = null;

  @JsonProperty("last_click")
  private DateTime lastClick = null;

  public Clicks clicksTotal(Integer clicksTotal) {
    this.clicksTotal = clicksTotal;
    return this;
  }

   /**
   * The total number of clicks for the campaign.
   * @return clicksTotal
  **/
  @Schema(description = "The total number of clicks for the campaign.")
  public Integer getClicksTotal() {
    return clicksTotal;
  }

  public void setClicksTotal(Integer clicksTotal) {
    this.clicksTotal = clicksTotal;
  }

  public Clicks uniqueClicks(Integer uniqueClicks) {
    this.uniqueClicks = uniqueClicks;
    return this;
  }

   /**
   * The total number of unique clicks for links across a campaign.
   * @return uniqueClicks
  **/
  @Schema(description = "The total number of unique clicks for links across a campaign.")
  public Integer getUniqueClicks() {
    return uniqueClicks;
  }

  public void setUniqueClicks(Integer uniqueClicks) {
    this.uniqueClicks = uniqueClicks;
  }

  public Clicks uniqueSubscriberClicks(Integer uniqueSubscriberClicks) {
    this.uniqueSubscriberClicks = uniqueSubscriberClicks;
    return this;
  }

   /**
   * The total number of subscribers who clicked on a campaign.
   * @return uniqueSubscriberClicks
  **/
  @Schema(description = "The total number of subscribers who clicked on a campaign.")
  public Integer getUniqueSubscriberClicks() {
    return uniqueSubscriberClicks;
  }

  public void setUniqueSubscriberClicks(Integer uniqueSubscriberClicks) {
    this.uniqueSubscriberClicks = uniqueSubscriberClicks;
  }

  public Clicks clickRate(BigDecimal clickRate) {
    this.clickRate = clickRate;
    return this;
  }

   /**
   * The number of unique clicks divided by the total number of successful deliveries.
   * @return clickRate
  **/
  @Schema(description = "The number of unique clicks divided by the total number of successful deliveries.")
  public BigDecimal getClickRate() {
    return clickRate;
  }

  public void setClickRate(BigDecimal clickRate) {
    this.clickRate = clickRate;
  }

  public Clicks lastClick(DateTime lastClick) {
    this.lastClick = lastClick;
    return this;
  }

   /**
   * The date and time of the last recorded click for the campaign in ISO 8601 format.
   * @return lastClick
  **/
  @Schema(description = "The date and time of the last recorded click for the campaign in ISO 8601 format.")
  public DateTime getLastClick() {
    return lastClick;
  }

  public void setLastClick(DateTime lastClick) {
    this.lastClick = lastClick;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Clicks clicks = (Clicks) o;
    return Objects.equals(this.clicksTotal, clicks.clicksTotal) &&
        Objects.equals(this.uniqueClicks, clicks.uniqueClicks) &&
        Objects.equals(this.uniqueSubscriberClicks, clicks.uniqueSubscriberClicks) &&
        Objects.equals(this.clickRate, clicks.clickRate) &&
        Objects.equals(this.lastClick, clicks.lastClick);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clicksTotal, uniqueClicks, uniqueSubscriberClicks, clickRate, lastClick);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Clicks {\n");
    
    sb.append("    clicksTotal: ").append(toIndentedString(clicksTotal)).append("\n");
    sb.append("    uniqueClicks: ").append(toIndentedString(uniqueClicks)).append("\n");
    sb.append("    uniqueSubscriberClicks: ").append(toIndentedString(uniqueSubscriberClicks)).append("\n");
    sb.append("    clickRate: ").append(toIndentedString(clickRate)).append("\n");
    sb.append("    lastClick: ").append(toIndentedString(lastClick)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
