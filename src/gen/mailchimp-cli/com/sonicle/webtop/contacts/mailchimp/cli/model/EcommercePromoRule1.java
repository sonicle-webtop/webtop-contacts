/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * Information about an Ecommerce Store&#x27;s specific Promo Rule
 */
@Schema(description = "Information about an Ecommerce Store's specific Promo Rule")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class EcommercePromoRule1 {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("starts_at")
  private DateTime startsAt = null;

  @JsonProperty("ends_at")
  private String endsAt = null;

  @JsonProperty("amount")
  private Float amount = null;

  /**
   * Type of discount. For free shipping set type to fixed.
   */
  public enum TypeEnum {
    FIXED("fixed"),
    PERCENTAGE("percentage");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  /**
   * The target that the discount applies to.
   */
  public enum TargetEnum {
    PER_ITEM("per_item"),
    TOTAL("total"),
    SHIPPING("shipping");

    private String value;

    TargetEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TargetEnum fromValue(String text) {
      for (TargetEnum b : TargetEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("target")
  private TargetEnum target = null;

  @JsonProperty("enabled")
  private Boolean enabled = null;

  @JsonProperty("created_at_foreign")
  private DateTime createdAtForeign = null;

  @JsonProperty("updated_at_foreign")
  private DateTime updatedAtForeign = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

   /**
   * A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.
   * @return id
  **/
  @Schema(description = "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.")
  public String getId() {
    return id;
  }

  public EcommercePromoRule1 title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.
   * @return title
  **/
  @Schema(example = "50% off Total Order", description = "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public EcommercePromoRule1 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of a promotion restricted to UTF-8 characters with max length 255.
   * @return description
  **/
  @Schema(example = "Save BIG during our summer sale!", description = "The description of a promotion restricted to UTF-8 characters with max length 255.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public EcommercePromoRule1 startsAt(DateTime startsAt) {
    this.startsAt = startsAt;
    return this;
  }

   /**
   * The date and time when the promotion is in effect in ISO 8601 format.
   * @return startsAt
  **/
  @Schema(description = "The date and time when the promotion is in effect in ISO 8601 format.")
  public DateTime getStartsAt() {
    return startsAt;
  }

  public void setStartsAt(DateTime startsAt) {
    this.startsAt = startsAt;
  }

  public EcommercePromoRule1 endsAt(String endsAt) {
    this.endsAt = endsAt;
    return this;
  }

   /**
   * The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format.
   * @return endsAt
  **/
  @Schema(description = "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format.")
  public String getEndsAt() {
    return endsAt;
  }

  public void setEndsAt(String endsAt) {
    this.endsAt = endsAt;
  }

  public EcommercePromoRule1 amount(Float amount) {
    this.amount = amount;
    return this;
  }

   /**
   * The amount of the promo code discount. If &#x27;type&#x27; is &#x27;fixed&#x27;, the amount is treated as a monetary value. If &#x27;type&#x27; is &#x27;percentage&#x27;, amount must be a decimal value between 0.0 and 1.0, inclusive.
   * @return amount
  **/
  @Schema(example = "0.5", description = "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.")
  public Float getAmount() {
    return amount;
  }

  public void setAmount(Float amount) {
    this.amount = amount;
  }

  public EcommercePromoRule1 type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of discount. For free shipping set type to fixed.
   * @return type
  **/
  @Schema(description = "Type of discount. For free shipping set type to fixed.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public EcommercePromoRule1 target(TargetEnum target) {
    this.target = target;
    return this;
  }

   /**
   * The target that the discount applies to.
   * @return target
  **/
  @Schema(description = "The target that the discount applies to.")
  public TargetEnum getTarget() {
    return target;
  }

  public void setTarget(TargetEnum target) {
    this.target = target;
  }

  public EcommercePromoRule1 enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Whether the promo rule is currently enabled.
   * @return enabled
  **/
  @Schema(example = "true", description = "Whether the promo rule is currently enabled.")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public EcommercePromoRule1 createdAtForeign(DateTime createdAtForeign) {
    this.createdAtForeign = createdAtForeign;
    return this;
  }

   /**
   * The date and time the promotion was created in ISO 8601 format.
   * @return createdAtForeign
  **/
  @Schema(description = "The date and time the promotion was created in ISO 8601 format.")
  public DateTime getCreatedAtForeign() {
    return createdAtForeign;
  }

  public void setCreatedAtForeign(DateTime createdAtForeign) {
    this.createdAtForeign = createdAtForeign;
  }

  public EcommercePromoRule1 updatedAtForeign(DateTime updatedAtForeign) {
    this.updatedAtForeign = updatedAtForeign;
    return this;
  }

   /**
   * The date and time the promotion was updated in ISO 8601 format.
   * @return updatedAtForeign
  **/
  @Schema(description = "The date and time the promotion was updated in ISO 8601 format.")
  public DateTime getUpdatedAtForeign() {
    return updatedAtForeign;
  }

  public void setUpdatedAtForeign(DateTime updatedAtForeign) {
    this.updatedAtForeign = updatedAtForeign;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EcommercePromoRule1 ecommercePromoRule1 = (EcommercePromoRule1) o;
    return Objects.equals(this.id, ecommercePromoRule1.id) &&
        Objects.equals(this.title, ecommercePromoRule1.title) &&
        Objects.equals(this.description, ecommercePromoRule1.description) &&
        Objects.equals(this.startsAt, ecommercePromoRule1.startsAt) &&
        Objects.equals(this.endsAt, ecommercePromoRule1.endsAt) &&
        Objects.equals(this.amount, ecommercePromoRule1.amount) &&
        Objects.equals(this.type, ecommercePromoRule1.type) &&
        Objects.equals(this.target, ecommercePromoRule1.target) &&
        Objects.equals(this.enabled, ecommercePromoRule1.enabled) &&
        Objects.equals(this.createdAtForeign, ecommercePromoRule1.createdAtForeign) &&
        Objects.equals(this.updatedAtForeign, ecommercePromoRule1.updatedAtForeign) &&
        Objects.equals(this._links, ecommercePromoRule1._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, description, startsAt, endsAt, amount, type, target, enabled, createdAtForeign, updatedAtForeign, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EcommercePromoRule1 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startsAt: ").append(toIndentedString(startsAt)).append("\n");
    sb.append("    endsAt: ").append(toIndentedString(endsAt)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    createdAtForeign: ").append(toIndentedString(createdAtForeign)).append("\n");
    sb.append("    updatedAtForeign: ").append(toIndentedString(updatedAtForeign)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
