/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * CampaignReports1Timeseries
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class CampaignReports1Timeseries {
  @JsonProperty("timestamp")
  private DateTime timestamp = null;

  @JsonProperty("emails_sent")
  private Integer emailsSent = null;

  @JsonProperty("unique_opens")
  private Integer uniqueOpens = null;

  @JsonProperty("recipients_clicks")
  private Integer recipientsClicks = null;

  public CampaignReports1Timeseries timestamp(DateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The date and time for the series in ISO 8601 format.
   * @return timestamp
  **/
  @Schema(description = "The date and time for the series in ISO 8601 format.")
  public DateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(DateTime timestamp) {
    this.timestamp = timestamp;
  }

  public CampaignReports1Timeseries emailsSent(Integer emailsSent) {
    this.emailsSent = emailsSent;
    return this;
  }

   /**
   * The number of emails sent in the timeseries.
   * @return emailsSent
  **/
  @Schema(description = "The number of emails sent in the timeseries.")
  public Integer getEmailsSent() {
    return emailsSent;
  }

  public void setEmailsSent(Integer emailsSent) {
    this.emailsSent = emailsSent;
  }

  public CampaignReports1Timeseries uniqueOpens(Integer uniqueOpens) {
    this.uniqueOpens = uniqueOpens;
    return this;
  }

   /**
   * The number of unique opens in the timeseries.
   * @return uniqueOpens
  **/
  @Schema(description = "The number of unique opens in the timeseries.")
  public Integer getUniqueOpens() {
    return uniqueOpens;
  }

  public void setUniqueOpens(Integer uniqueOpens) {
    this.uniqueOpens = uniqueOpens;
  }

  public CampaignReports1Timeseries recipientsClicks(Integer recipientsClicks) {
    this.recipientsClicks = recipientsClicks;
    return this;
  }

   /**
   * The number of clicks in the timeseries.
   * @return recipientsClicks
  **/
  @Schema(description = "The number of clicks in the timeseries.")
  public Integer getRecipientsClicks() {
    return recipientsClicks;
  }

  public void setRecipientsClicks(Integer recipientsClicks) {
    this.recipientsClicks = recipientsClicks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignReports1Timeseries campaignReports1Timeseries = (CampaignReports1Timeseries) o;
    return Objects.equals(this.timestamp, campaignReports1Timeseries.timestamp) &&
        Objects.equals(this.emailsSent, campaignReports1Timeseries.emailsSent) &&
        Objects.equals(this.uniqueOpens, campaignReports1Timeseries.uniqueOpens) &&
        Objects.equals(this.recipientsClicks, campaignReports1Timeseries.recipientsClicks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, emailsSent, uniqueOpens, recipientsClicks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignReports1Timeseries {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    emailsSent: ").append(toIndentedString(emailsSent)).append("\n");
    sb.append("    uniqueOpens: ").append(toIndentedString(uniqueOpens)).append("\n");
    sb.append("    recipientsClicks: ").append(toIndentedString(recipientsClicks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
