/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * A summary of the interaction with the campaign.
 */
@Schema(description = "A summary of the interaction with the campaign.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class MemberActivity {
  @JsonProperty("action")
  private String action = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("timestamp")
  private DateTime timestamp = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("ip")
  private String ip = null;

  public MemberActivity action(String action) {
    this.action = action;
    return this;
  }

   /**
   * One of the following actions: &#x27;open&#x27;, &#x27;click&#x27;, or &#x27;bounce&#x27;
   * @return action
  **/
  @Schema(description = "One of the following actions: 'open', 'click', or 'bounce'")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public MemberActivity type(String type) {
    this.type = type;
    return this;
  }

   /**
   * If the action is a &#x27;bounce&#x27;, the type of bounce received: &#x27;hard&#x27;, &#x27;soft&#x27;.
   * @return type
  **/
  @Schema(description = "If the action is a 'bounce', the type of bounce received: 'hard', 'soft'.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public MemberActivity timestamp(DateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The date and time recorded for the action in ISO 8601 format.
   * @return timestamp
  **/
  @Schema(description = "The date and time recorded for the action in ISO 8601 format.")
  public DateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(DateTime timestamp) {
    this.timestamp = timestamp;
  }

  public MemberActivity url(String url) {
    this.url = url;
    return this;
  }

   /**
   * If the action is a &#x27;click&#x27;, the URL on which the member clicked.
   * @return url
  **/
  @Schema(description = "If the action is a 'click', the URL on which the member clicked.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public MemberActivity ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * The IP address recorded for the action.
   * @return ip
  **/
  @Schema(description = "The IP address recorded for the action.")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MemberActivity memberActivity = (MemberActivity) o;
    return Objects.equals(this.action, memberActivity.action) &&
        Objects.equals(this.type, memberActivity.type) &&
        Objects.equals(this.timestamp, memberActivity.timestamp) &&
        Objects.equals(this.url, memberActivity.url) &&
        Objects.equals(this.ip, memberActivity.ip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, type, timestamp, url, ip);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MemberActivity {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
