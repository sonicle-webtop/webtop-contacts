/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.BatchDelivery;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * ActionsScheduleBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class ActionsScheduleBody {
  @JsonProperty("schedule_time")
  private DateTime scheduleTime = null;

  @JsonProperty("timewarp")
  private Boolean timewarp = null;

  @JsonProperty("batch_delivery")
  private BatchDelivery batchDelivery = null;

  public ActionsScheduleBody scheduleTime(DateTime scheduleTime) {
    this.scheduleTime = scheduleTime;
    return this;
  }

   /**
   * The UTC date and time to schedule the campaign for delivery in ISO 8601 format. Campaigns may only be scheduled to send on the quarter-hour (:00, :15, :30, :45).
   * @return scheduleTime
  **/
  @Schema(required = true, description = "The UTC date and time to schedule the campaign for delivery in ISO 8601 format. Campaigns may only be scheduled to send on the quarter-hour (:00, :15, :30, :45).")
  public DateTime getScheduleTime() {
    return scheduleTime;
  }

  public void setScheduleTime(DateTime scheduleTime) {
    this.scheduleTime = scheduleTime;
  }

  public ActionsScheduleBody timewarp(Boolean timewarp) {
    this.timewarp = timewarp;
    return this;
  }

   /**
   * Choose whether the campaign should use [Timewarp](https://mailchimp.com/help/use-timewarp/) when sending. Campaigns scheduled with Timewarp are localized based on the recipients&#x27; time zones. For example, a Timewarp campaign with a &#x60;schedule_time&#x60; of 13:00 will be sent to each recipient at 1:00pm in their local time. Cannot be set to &#x60;true&#x60; for campaigns using [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/).
   * @return timewarp
  **/
  @Schema(description = "Choose whether the campaign should use [Timewarp](https://mailchimp.com/help/use-timewarp/) when sending. Campaigns scheduled with Timewarp are localized based on the recipients' time zones. For example, a Timewarp campaign with a `schedule_time` of 13:00 will be sent to each recipient at 1:00pm in their local time. Cannot be set to `true` for campaigns using [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/).")
  public Boolean isTimewarp() {
    return timewarp;
  }

  public void setTimewarp(Boolean timewarp) {
    this.timewarp = timewarp;
  }

  public ActionsScheduleBody batchDelivery(BatchDelivery batchDelivery) {
    this.batchDelivery = batchDelivery;
    return this;
  }

   /**
   * Get batchDelivery
   * @return batchDelivery
  **/
  @Schema(description = "")
  public BatchDelivery getBatchDelivery() {
    return batchDelivery;
  }

  public void setBatchDelivery(BatchDelivery batchDelivery) {
    this.batchDelivery = batchDelivery;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionsScheduleBody actionsScheduleBody = (ActionsScheduleBody) o;
    return Objects.equals(this.scheduleTime, actionsScheduleBody.scheduleTime) &&
        Objects.equals(this.timewarp, actionsScheduleBody.timewarp) &&
        Objects.equals(this.batchDelivery, actionsScheduleBody.batchDelivery);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scheduleTime, timewarp, batchDelivery);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionsScheduleBody {\n");
    
    sb.append("    scheduleTime: ").append(toIndentedString(scheduleTime)).append("\n");
    sb.append("    timewarp: ").append(toIndentedString(timewarp)).append("\n");
    sb.append("    batchDelivery: ").append(toIndentedString(batchDelivery)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
