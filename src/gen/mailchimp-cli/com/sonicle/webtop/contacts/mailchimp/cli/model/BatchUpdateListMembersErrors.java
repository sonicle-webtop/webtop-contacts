/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * BatchUpdateListMembersErrors
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class BatchUpdateListMembersErrors {
  @JsonProperty("email_address")
  private String emailAddress = null;

  @JsonProperty("error")
  private String error = null;

  /**
   * A unique code that identifies this specifc error.
   */
  public enum ErrorCodeEnum {
    CONTACT_EXISTS("ERROR_CONTACT_EXISTS"),
    GENERIC("ERROR_GENERIC");

    private String value;

    ErrorCodeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ErrorCodeEnum fromValue(String text) {
      for (ErrorCodeEnum b : ErrorCodeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("error_code")
  private ErrorCodeEnum errorCode = null;

  public BatchUpdateListMembersErrors emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * The email address that could not be added or updated.
   * @return emailAddress
  **/
  @Schema(description = "The email address that could not be added or updated.")
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  public BatchUpdateListMembersErrors error(String error) {
    this.error = error;
    return this;
  }

   /**
   * The error message indicating why the email address could not be added or updated.
   * @return error
  **/
  @Schema(description = "The error message indicating why the email address could not be added or updated.")
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }

  public BatchUpdateListMembersErrors errorCode(ErrorCodeEnum errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * A unique code that identifies this specifc error.
   * @return errorCode
  **/
  @Schema(description = "A unique code that identifies this specifc error.")
  public ErrorCodeEnum getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(ErrorCodeEnum errorCode) {
    this.errorCode = errorCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchUpdateListMembersErrors batchUpdateListMembersErrors = (BatchUpdateListMembersErrors) o;
    return Objects.equals(this.emailAddress, batchUpdateListMembersErrors.emailAddress) &&
        Objects.equals(this.error, batchUpdateListMembersErrors.error) &&
        Objects.equals(this.errorCode, batchUpdateListMembersErrors.errorCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailAddress, error, errorCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchUpdateListMembersErrors {\n");
    
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
