/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.Address;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * An individual store in an account.
 */
@Schema(description = "An individual store in an account.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class EcommerceStore {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("list_id")
  private String listId = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("platform")
  private String platform = null;

  @JsonProperty("domain")
  private String domain = null;

  @JsonProperty("is_syncing")
  private Boolean isSyncing = null;

  @JsonProperty("email_address")
  private String emailAddress = null;

  @JsonProperty("currency_code")
  private String currencyCode = null;

  @JsonProperty("money_format")
  private String moneyFormat = null;

  @JsonProperty("primary_locale")
  private String primaryLocale = null;

  @JsonProperty("timezone")
  private String timezone = null;

  @JsonProperty("phone")
  private String phone = null;

  @JsonProperty("address")
  private Address address = null;

  public EcommerceStore id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for the store.
   * @return id
  **/
  @Schema(example = "example_store", required = true, description = "The unique identifier for the store.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EcommerceStore listId(String listId) {
    this.listId = listId;
    return this;
  }

   /**
   * The unique identifier for the list associated with the store. The &#x60;list_id&#x60; for a specific store cannot change.
   * @return listId
  **/
  @Schema(example = "1a2df69511", required = true, description = "The unique identifier for the list associated with the store. The `list_id` for a specific store cannot change.")
  public String getListId() {
    return listId;
  }

  public void setListId(String listId) {
    this.listId = listId;
  }

  public EcommerceStore name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the store.
   * @return name
  **/
  @Schema(example = "Freddie's Cat Hat Emporium", required = true, description = "The name of the store.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EcommerceStore platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * The e-commerce platform of the store.
   * @return platform
  **/
  @Schema(description = "The e-commerce platform of the store.")
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public EcommerceStore domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * The store domain. This parameter is required for Connected Sites and Google Ads.
   * @return domain
  **/
  @Schema(example = "example.com", description = "The store domain. This parameter is required for Connected Sites and Google Ads.")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public EcommerceStore isSyncing(Boolean isSyncing) {
    this.isSyncing = isSyncing;
    return this;
  }

   /**
   * Whether to disable automations because the store is currently [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations).
   * @return isSyncing
  **/
  @Schema(description = "Whether to disable automations because the store is currently [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations).")
  public Boolean isIsSyncing() {
    return isSyncing;
  }

  public void setIsSyncing(Boolean isSyncing) {
    this.isSyncing = isSyncing;
  }

  public EcommerceStore emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * The email address for the store.
   * @return emailAddress
  **/
  @Schema(example = "freddie@mailchimp.com", description = "The email address for the store.")
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  public EcommerceStore currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * The three-letter ISO 4217 code for the currency that the store accepts.
   * @return currencyCode
  **/
  @Schema(example = "USD", required = true, description = "The three-letter ISO 4217 code for the currency that the store accepts.")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public EcommerceStore moneyFormat(String moneyFormat) {
    this.moneyFormat = moneyFormat;
    return this;
  }

   /**
   * The currency format for the store. For example: &#x60;$&#x60;, &#x60;£&#x60;, etc.
   * @return moneyFormat
  **/
  @Schema(example = "$", description = "The currency format for the store. For example: `$`, `£`, etc.")
  public String getMoneyFormat() {
    return moneyFormat;
  }

  public void setMoneyFormat(String moneyFormat) {
    this.moneyFormat = moneyFormat;
  }

  public EcommerceStore primaryLocale(String primaryLocale) {
    this.primaryLocale = primaryLocale;
    return this;
  }

   /**
   * The primary locale for the store. For example: &#x60;en&#x60;, &#x60;de&#x60;, etc.
   * @return primaryLocale
  **/
  @Schema(example = "fr", description = "The primary locale for the store. For example: `en`, `de`, etc.")
  public String getPrimaryLocale() {
    return primaryLocale;
  }

  public void setPrimaryLocale(String primaryLocale) {
    this.primaryLocale = primaryLocale;
  }

  public EcommerceStore timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * The timezone for the store.
   * @return timezone
  **/
  @Schema(example = "Eastern", description = "The timezone for the store.")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public EcommerceStore phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * The store phone number.
   * @return phone
  **/
  @Schema(example = "404-444-4444", description = "The store phone number.")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public EcommerceStore address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EcommerceStore ecommerceStore = (EcommerceStore) o;
    return Objects.equals(this.id, ecommerceStore.id) &&
        Objects.equals(this.listId, ecommerceStore.listId) &&
        Objects.equals(this.name, ecommerceStore.name) &&
        Objects.equals(this.platform, ecommerceStore.platform) &&
        Objects.equals(this.domain, ecommerceStore.domain) &&
        Objects.equals(this.isSyncing, ecommerceStore.isSyncing) &&
        Objects.equals(this.emailAddress, ecommerceStore.emailAddress) &&
        Objects.equals(this.currencyCode, ecommerceStore.currencyCode) &&
        Objects.equals(this.moneyFormat, ecommerceStore.moneyFormat) &&
        Objects.equals(this.primaryLocale, ecommerceStore.primaryLocale) &&
        Objects.equals(this.timezone, ecommerceStore.timezone) &&
        Objects.equals(this.phone, ecommerceStore.phone) &&
        Objects.equals(this.address, ecommerceStore.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, listId, name, platform, domain, isSyncing, emailAddress, currencyCode, moneyFormat, primaryLocale, timezone, phone, address);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EcommerceStore {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    isSyncing: ").append(toIndentedString(isSyncing)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    moneyFormat: ").append(toIndentedString(moneyFormat)).append("\n");
    sb.append("    primaryLocale: ").append(toIndentedString(primaryLocale)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
