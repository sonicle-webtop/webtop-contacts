/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.AutomationWorkflowRuntimeSettings;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Available triggers for Automation workflows.
 */
@Schema(description = "Available triggers for Automation workflows.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class AutomationTrigger1 {
  /**
   * The type of Automation workflow.
   */
  public enum WorkflowTypeEnum {
    ABANDONEDBROWSE("abandonedBrowse"),
    ABANDONEDCART("abandonedCart"),
    API("api"),
    BESTCUSTOMERS("bestCustomers"),
    CATEGORYFOLLOWUP("categoryFollowup"),
    DATEADDED("dateAdded"),
    EMAILFOLLOWUP("emailFollowup"),
    EMAILSERIES("emailSeries"),
    GROUPADD("groupAdd"),
    GROUPREMOVE("groupRemove"),
    MANDRILL("mandrill"),
    PRODUCTFOLLOWUP("productFollowup"),
    PURCHASEFOLLOWUP("purchaseFollowup"),
    RECURRINGEVENT("recurringEvent"),
    SPECIALEVENT("specialEvent"),
    VISITURL("visitUrl"),
    WELCOMESERIES("welcomeSeries");

    private String value;

    WorkflowTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static WorkflowTypeEnum fromValue(String text) {
      for (WorkflowTypeEnum b : WorkflowTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("workflow_type")
  private WorkflowTypeEnum workflowType = null;

  @JsonProperty("workflow_title")
  private String workflowTitle = null;

  @JsonProperty("runtime")
  private AutomationWorkflowRuntimeSettings runtime = null;

  @JsonProperty("workflow_emails_count")
  private Integer workflowEmailsCount = null;

  public AutomationTrigger1 workflowType(WorkflowTypeEnum workflowType) {
    this.workflowType = workflowType;
    return this;
  }

   /**
   * The type of Automation workflow.
   * @return workflowType
  **/
  @Schema(required = true, description = "The type of Automation workflow.")
  public WorkflowTypeEnum getWorkflowType() {
    return workflowType;
  }

  public void setWorkflowType(WorkflowTypeEnum workflowType) {
    this.workflowType = workflowType;
  }

   /**
   * The title of the workflow type.
   * @return workflowTitle
  **/
  @Schema(description = "The title of the workflow type.")
  public String getWorkflowTitle() {
    return workflowTitle;
  }

  public AutomationTrigger1 runtime(AutomationWorkflowRuntimeSettings runtime) {
    this.runtime = runtime;
    return this;
  }

   /**
   * Get runtime
   * @return runtime
  **/
  @Schema(description = "")
  public AutomationWorkflowRuntimeSettings getRuntime() {
    return runtime;
  }

  public void setRuntime(AutomationWorkflowRuntimeSettings runtime) {
    this.runtime = runtime;
  }

   /**
   * The number of emails in the Automation workflow.
   * @return workflowEmailsCount
  **/
  @Schema(description = "The number of emails in the Automation workflow.")
  public Integer getWorkflowEmailsCount() {
    return workflowEmailsCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationTrigger1 automationTrigger1 = (AutomationTrigger1) o;
    return Objects.equals(this.workflowType, automationTrigger1.workflowType) &&
        Objects.equals(this.workflowTitle, automationTrigger1.workflowTitle) &&
        Objects.equals(this.runtime, automationTrigger1.runtime) &&
        Objects.equals(this.workflowEmailsCount, automationTrigger1.workflowEmailsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workflowType, workflowTitle, runtime, workflowEmailsCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationTrigger1 {\n");
    
    sb.append("    workflowType: ").append(toIndentedString(workflowType)).append("\n");
    sb.append("    workflowTitle: ").append(toIndentedString(workflowTitle)).append("\n");
    sb.append("    runtime: ").append(toIndentedString(runtime)).append("\n");
    sb.append("    workflowEmailsCount: ").append(toIndentedString(workflowEmailsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
