/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * The status of a batch request
 */
@Schema(description = "The status of a batch request")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class Batch1 {
  @JsonProperty("id")
  private String id = null;

  /**
   * The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation) about the batch operation status.
   */
  public enum StatusEnum {
    PENDING("pending"),
    PREPROCESSING("preprocessing"),
    STARTED("started"),
    FINALIZING("finalizing"),
    FINISHED("finished");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("total_operations")
  private Integer totalOperations = null;

  @JsonProperty("finished_operations")
  private Integer finishedOperations = null;

  @JsonProperty("errored_operations")
  private Integer erroredOperations = null;

  @JsonProperty("submitted_at")
  private DateTime submittedAt = null;

  @JsonProperty("completed_at")
  private DateTime completedAt = null;

  @JsonProperty("response_body_url")
  private String responseBodyUrl = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

   /**
   * A string that uniquely identifies this batch request.
   * @return id
  **/
  @Schema(description = "A string that uniquely identifies this batch request.")
  public String getId() {
    return id;
  }

   /**
   * The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation) about the batch operation status.
   * @return status
  **/
  @Schema(description = "The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation) about the batch operation status.")
  public StatusEnum getStatus() {
    return status;
  }

   /**
   * The total number of operations to complete as part of this batch request. For GET requests requiring pagination, each page counts as a separate operation.
   * @return totalOperations
  **/
  @Schema(description = "The total number of operations to complete as part of this batch request. For GET requests requiring pagination, each page counts as a separate operation.")
  public Integer getTotalOperations() {
    return totalOperations;
  }

   /**
   * The number of completed operations. This includes operations that returned an error.
   * @return finishedOperations
  **/
  @Schema(description = "The number of completed operations. This includes operations that returned an error.")
  public Integer getFinishedOperations() {
    return finishedOperations;
  }

   /**
   * The number of completed operations that returned an error.
   * @return erroredOperations
  **/
  @Schema(description = "The number of completed operations that returned an error.")
  public Integer getErroredOperations() {
    return erroredOperations;
  }

   /**
   * The date and time when the server received the batch request in ISO 8601 format.
   * @return submittedAt
  **/
  @Schema(description = "The date and time when the server received the batch request in ISO 8601 format.")
  public DateTime getSubmittedAt() {
    return submittedAt;
  }

   /**
   * The date and time when all operations in the batch request completed in ISO 8601 format.
   * @return completedAt
  **/
  @Schema(description = "The date and time when all operations in the batch request completed in ISO 8601 format.")
  public DateTime getCompletedAt() {
    return completedAt;
  }

   /**
   * The URL of the gzipped archive of the results of all the operations.
   * @return responseBodyUrl
  **/
  @Schema(description = "The URL of the gzipped archive of the results of all the operations.")
  public String getResponseBodyUrl() {
    return responseBodyUrl;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Batch1 batch1 = (Batch1) o;
    return Objects.equals(this.id, batch1.id) &&
        Objects.equals(this.status, batch1.status) &&
        Objects.equals(this.totalOperations, batch1.totalOperations) &&
        Objects.equals(this.finishedOperations, batch1.finishedOperations) &&
        Objects.equals(this.erroredOperations, batch1.erroredOperations) &&
        Objects.equals(this.submittedAt, batch1.submittedAt) &&
        Objects.equals(this.completedAt, batch1.completedAt) &&
        Objects.equals(this.responseBodyUrl, batch1.responseBodyUrl) &&
        Objects.equals(this._links, batch1._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, totalOperations, finishedOperations, erroredOperations, submittedAt, completedAt, responseBodyUrl, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Batch1 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    totalOperations: ").append(toIndentedString(totalOperations)).append("\n");
    sb.append("    finishedOperations: ").append(toIndentedString(finishedOperations)).append("\n");
    sb.append("    erroredOperations: ").append(toIndentedString(erroredOperations)).append("\n");
    sb.append("    submittedAt: ").append(toIndentedString(submittedAt)).append("\n");
    sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
    sb.append("    responseBodyUrl: ").append(toIndentedString(responseBodyUrl)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
