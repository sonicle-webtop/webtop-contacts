/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.Location;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.joda.time.DateTime;
/**
 * Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.
 */
@Schema(description = "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class AddListMembers {
  @JsonProperty("email_address")
  private String emailAddress = null;

  @JsonProperty("email_type")
  private String emailType = null;

  /**
   * Subscriber&#x27;s current status.
   */
  public enum StatusEnum {
    SUBSCRIBED("subscribed"),
    UNSUBSCRIBED("unsubscribed"),
    CLEANED("cleaned"),
    PENDING("pending");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("merge_fields")
  private Map<String, Object> mergeFields = null;

  @JsonProperty("interests")
  private Map<String, Boolean> interests = null;

  @JsonProperty("language")
  private String language = null;

  @JsonProperty("vip")
  private Boolean vip = null;

  @JsonProperty("location")
  private Location location = null;

  @JsonProperty("ip_signup")
  private String ipSignup = null;

  @JsonProperty("timestamp_signup")
  private DateTime timestampSignup = null;

  @JsonProperty("ip_opt")
  private String ipOpt = null;

  @JsonProperty("timestamp_opt")
  private DateTime timestampOpt = null;

  public AddListMembers emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Email address for a subscriber.
   * @return emailAddress
  **/
  @Schema(description = "Email address for a subscriber.")
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  public AddListMembers emailType(String emailType) {
    this.emailType = emailType;
    return this;
  }

   /**
   * Type of email this member asked to get (&#x27;html&#x27; or &#x27;text&#x27;).
   * @return emailType
  **/
  @Schema(description = "Type of email this member asked to get ('html' or 'text').")
  public String getEmailType() {
    return emailType;
  }

  public void setEmailType(String emailType) {
    this.emailType = emailType;
  }

  public AddListMembers status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Subscriber&#x27;s current status.
   * @return status
  **/
  @Schema(description = "Subscriber's current status.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public AddListMembers mergeFields(Map<String, Object> mergeFields) {
    this.mergeFields = mergeFields;
    return this;
  }

  public AddListMembers putMergeFieldsItem(String key, Object mergeFieldsItem) {
    if (this.mergeFields == null) {
      this.mergeFields = new HashMap<>();
    }
    this.mergeFields.put(key, mergeFieldsItem);
    return this;
  }

   /**
   * A dictionary of merge fields ([audience fields](https://mailchimp.com/help/getting-started-with-merge-tags/)) where the keys are the merge tags. For example, {\&quot;FNAME\&quot;:\&quot;Freddie\&quot;}
   * @return mergeFields
  **/
  @Schema(description = "A dictionary of merge fields ([audience fields](https://mailchimp.com/help/getting-started-with-merge-tags/)) where the keys are the merge tags. For example, {\"FNAME\":\"Freddie\"}")
  public Map<String, Object> getMergeFields() {
    return mergeFields;
  }

  public void setMergeFields(Map<String, Object> mergeFields) {
    this.mergeFields = mergeFields;
  }

  public AddListMembers interests(Map<String, Boolean> interests) {
    this.interests = interests;
    return this;
  }

  public AddListMembers putInterestsItem(String key, Boolean interestsItem) {
    if (this.interests == null) {
      this.interests = new HashMap<>();
    }
    this.interests.put(key, interestsItem);
    return this;
  }

   /**
   * The key of this object&#x27;s properties is the ID of the interest in question.
   * @return interests
  **/
  @Schema(description = "The key of this object's properties is the ID of the interest in question.")
  public Map<String, Boolean> getInterests() {
    return interests;
  }

  public void setInterests(Map<String, Boolean> interests) {
    this.interests = interests;
  }

  public AddListMembers language(String language) {
    this.language = language;
    return this;
  }

   /**
   * If set/detected, the [subscriber&#x27;s language](https://mailchimp.com/help/view-and-edit-contact-languages/).
   * @return language
  **/
  @Schema(description = "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public AddListMembers vip(Boolean vip) {
    this.vip = vip;
    return this;
  }

   /**
   * [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
   * @return vip
  **/
  @Schema(description = "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.")
  public Boolean isVip() {
    return vip;
  }

  public void setVip(Boolean vip) {
    this.vip = vip;
  }

  public AddListMembers location(Location location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public Location getLocation() {
    return location;
  }

  public void setLocation(Location location) {
    this.location = location;
  }

  public AddListMembers ipSignup(String ipSignup) {
    this.ipSignup = ipSignup;
    return this;
  }

   /**
   * IP address the subscriber signed up from.
   * @return ipSignup
  **/
  @Schema(description = "IP address the subscriber signed up from.")
  public String getIpSignup() {
    return ipSignup;
  }

  public void setIpSignup(String ipSignup) {
    this.ipSignup = ipSignup;
  }

  public AddListMembers timestampSignup(DateTime timestampSignup) {
    this.timestampSignup = timestampSignup;
    return this;
  }

   /**
   * The date and time the subscriber signed up for the list in ISO 8601 format.
   * @return timestampSignup
  **/
  @Schema(description = "The date and time the subscriber signed up for the list in ISO 8601 format.")
  public DateTime getTimestampSignup() {
    return timestampSignup;
  }

  public void setTimestampSignup(DateTime timestampSignup) {
    this.timestampSignup = timestampSignup;
  }

  public AddListMembers ipOpt(String ipOpt) {
    this.ipOpt = ipOpt;
    return this;
  }

   /**
   * The IP address the subscriber used to confirm their opt-in status.
   * @return ipOpt
  **/
  @Schema(description = "The IP address the subscriber used to confirm their opt-in status.")
  public String getIpOpt() {
    return ipOpt;
  }

  public void setIpOpt(String ipOpt) {
    this.ipOpt = ipOpt;
  }

  public AddListMembers timestampOpt(DateTime timestampOpt) {
    this.timestampOpt = timestampOpt;
    return this;
  }

   /**
   * The date and time the subscribe confirmed their opt-in status in ISO 8601 format.
   * @return timestampOpt
  **/
  @Schema(description = "The date and time the subscribe confirmed their opt-in status in ISO 8601 format.")
  public DateTime getTimestampOpt() {
    return timestampOpt;
  }

  public void setTimestampOpt(DateTime timestampOpt) {
    this.timestampOpt = timestampOpt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddListMembers addListMembers = (AddListMembers) o;
    return Objects.equals(this.emailAddress, addListMembers.emailAddress) &&
        Objects.equals(this.emailType, addListMembers.emailType) &&
        Objects.equals(this.status, addListMembers.status) &&
        Objects.equals(this.mergeFields, addListMembers.mergeFields) &&
        Objects.equals(this.interests, addListMembers.interests) &&
        Objects.equals(this.language, addListMembers.language) &&
        Objects.equals(this.vip, addListMembers.vip) &&
        Objects.equals(this.location, addListMembers.location) &&
        Objects.equals(this.ipSignup, addListMembers.ipSignup) &&
        Objects.equals(this.timestampSignup, addListMembers.timestampSignup) &&
        Objects.equals(this.ipOpt, addListMembers.ipOpt) &&
        Objects.equals(this.timestampOpt, addListMembers.timestampOpt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailAddress, emailType, status, mergeFields, interests, language, vip, location, ipSignup, timestampSignup, ipOpt, timestampOpt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddListMembers {\n");
    
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    emailType: ").append(toIndentedString(emailType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    mergeFields: ").append(toIndentedString(mergeFields)).append("\n");
    sb.append("    interests: ").append(toIndentedString(interests)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    vip: ").append(toIndentedString(vip)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    ipSignup: ").append(toIndentedString(ipSignup)).append("\n");
    sb.append("    timestampSignup: ").append(toIndentedString(timestampSignup)).append("\n");
    sb.append("    ipOpt: ").append(toIndentedString(ipOpt)).append("\n");
    sb.append("    timestampOpt: ").append(toIndentedString(timestampOpt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
