/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * Subscriber location information.
 */
@Schema(description = "Subscriber location information.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class Location1 {
  @JsonProperty("latitude")
  private BigDecimal latitude = null;

  @JsonProperty("longitude")
  private BigDecimal longitude = null;

  @JsonProperty("gmtoff")
  private Integer gmtoff = null;

  @JsonProperty("dstoff")
  private Integer dstoff = null;

  @JsonProperty("country_code")
  private String countryCode = null;

  @JsonProperty("timezone")
  private String timezone = null;

  public Location1 latitude(BigDecimal latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * The location latitude.
   * @return latitude
  **/
  @Schema(description = "The location latitude.")
  public BigDecimal getLatitude() {
    return latitude;
  }

  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }

  public Location1 longitude(BigDecimal longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * The location longitude.
   * @return longitude
  **/
  @Schema(description = "The location longitude.")
  public BigDecimal getLongitude() {
    return longitude;
  }

  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }

   /**
   * The time difference in hours from GMT.
   * @return gmtoff
  **/
  @Schema(description = "The time difference in hours from GMT.")
  public Integer getGmtoff() {
    return gmtoff;
  }

   /**
   * The offset for timezones where daylight saving time is observed.
   * @return dstoff
  **/
  @Schema(description = "The offset for timezones where daylight saving time is observed.")
  public Integer getDstoff() {
    return dstoff;
  }

   /**
   * The unique code for the location country.
   * @return countryCode
  **/
  @Schema(description = "The unique code for the location country.")
  public String getCountryCode() {
    return countryCode;
  }

   /**
   * The timezone for the location.
   * @return timezone
  **/
  @Schema(description = "The timezone for the location.")
  public String getTimezone() {
    return timezone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Location1 location1 = (Location1) o;
    return Objects.equals(this.latitude, location1.latitude) &&
        Objects.equals(this.longitude, location1.longitude) &&
        Objects.equals(this.gmtoff, location1.gmtoff) &&
        Objects.equals(this.dstoff, location1.dstoff) &&
        Objects.equals(this.countryCode, location1.countryCode) &&
        Objects.equals(this.timezone, location1.timezone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(latitude, longitude, gmtoff, dstoff, countryCode, timezone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Location1 {\n");
    
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    gmtoff: ").append(toIndentedString(gmtoff)).append("\n");
    sb.append("    dstoff: ").append(toIndentedString(dstoff)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
