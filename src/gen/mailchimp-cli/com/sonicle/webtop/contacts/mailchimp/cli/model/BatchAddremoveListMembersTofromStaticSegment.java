/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.BatchAddremoveListMembersTofromStaticSegmentErrors;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ListMembers5;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Batch add/remove List members to/from static segment
 */
@Schema(description = "Batch add/remove List members to/from static segment")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class BatchAddremoveListMembersTofromStaticSegment {
  @JsonProperty("members_added")
  private List<ListMembers5> membersAdded = null;

  @JsonProperty("members_removed")
  private List<ListMembers5> membersRemoved = null;

  @JsonProperty("errors")
  private List<BatchAddremoveListMembersTofromStaticSegmentErrors> errors = null;

  @JsonProperty("total_added")
  private Integer totalAdded = null;

  @JsonProperty("total_removed")
  private Integer totalRemoved = null;

  @JsonProperty("error_count")
  private Integer errorCount = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

  public BatchAddremoveListMembersTofromStaticSegment membersAdded(List<ListMembers5> membersAdded) {
    this.membersAdded = membersAdded;
    return this;
  }

  public BatchAddremoveListMembersTofromStaticSegment addMembersAddedItem(ListMembers5 membersAddedItem) {
    if (this.membersAdded == null) {
      this.membersAdded = new ArrayList<>();
    }
    this.membersAdded.add(membersAddedItem);
    return this;
  }

   /**
   * An array of objects, each representing a new member that was added to the static segment.
   * @return membersAdded
  **/
  @Schema(description = "An array of objects, each representing a new member that was added to the static segment.")
  public List<ListMembers5> getMembersAdded() {
    return membersAdded;
  }

  public void setMembersAdded(List<ListMembers5> membersAdded) {
    this.membersAdded = membersAdded;
  }

  public BatchAddremoveListMembersTofromStaticSegment membersRemoved(List<ListMembers5> membersRemoved) {
    this.membersRemoved = membersRemoved;
    return this;
  }

  public BatchAddremoveListMembersTofromStaticSegment addMembersRemovedItem(ListMembers5 membersRemovedItem) {
    if (this.membersRemoved == null) {
      this.membersRemoved = new ArrayList<>();
    }
    this.membersRemoved.add(membersRemovedItem);
    return this;
  }

   /**
   * An array of objects, each representing an existing list member that got deleted from the static segment.
   * @return membersRemoved
  **/
  @Schema(description = "An array of objects, each representing an existing list member that got deleted from the static segment.")
  public List<ListMembers5> getMembersRemoved() {
    return membersRemoved;
  }

  public void setMembersRemoved(List<ListMembers5> membersRemoved) {
    this.membersRemoved = membersRemoved;
  }

  public BatchAddremoveListMembersTofromStaticSegment errors(List<BatchAddremoveListMembersTofromStaticSegmentErrors> errors) {
    this.errors = errors;
    return this;
  }

  public BatchAddremoveListMembersTofromStaticSegment addErrorsItem(BatchAddremoveListMembersTofromStaticSegmentErrors errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * An array of objects, each representing an array of email addresses that could not be added to the segment or removed and an error message providing more details.
   * @return errors
  **/
  @Schema(description = "An array of objects, each representing an array of email addresses that could not be added to the segment or removed and an error message providing more details.")
  public List<BatchAddremoveListMembersTofromStaticSegmentErrors> getErrors() {
    return errors;
  }

  public void setErrors(List<BatchAddremoveListMembersTofromStaticSegmentErrors> errors) {
    this.errors = errors;
  }

  public BatchAddremoveListMembersTofromStaticSegment totalAdded(Integer totalAdded) {
    this.totalAdded = totalAdded;
    return this;
  }

   /**
   * The total number of items matching the query, irrespective of pagination.
   * @return totalAdded
  **/
  @Schema(example = "42", description = "The total number of items matching the query, irrespective of pagination.")
  public Integer getTotalAdded() {
    return totalAdded;
  }

  public void setTotalAdded(Integer totalAdded) {
    this.totalAdded = totalAdded;
  }

  public BatchAddremoveListMembersTofromStaticSegment totalRemoved(Integer totalRemoved) {
    this.totalRemoved = totalRemoved;
    return this;
  }

   /**
   * The total number of items matching the query, irrespective of pagination.
   * @return totalRemoved
  **/
  @Schema(example = "42", description = "The total number of items matching the query, irrespective of pagination.")
  public Integer getTotalRemoved() {
    return totalRemoved;
  }

  public void setTotalRemoved(Integer totalRemoved) {
    this.totalRemoved = totalRemoved;
  }

  public BatchAddremoveListMembersTofromStaticSegment errorCount(Integer errorCount) {
    this.errorCount = errorCount;
    return this;
  }

   /**
   * The total number of items matching the query, irrespective of pagination.
   * @return errorCount
  **/
  @Schema(example = "42", description = "The total number of items matching the query, irrespective of pagination.")
  public Integer getErrorCount() {
    return errorCount;
  }

  public void setErrorCount(Integer errorCount) {
    this.errorCount = errorCount;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchAddremoveListMembersTofromStaticSegment batchAddremoveListMembersTofromStaticSegment = (BatchAddremoveListMembersTofromStaticSegment) o;
    return Objects.equals(this.membersAdded, batchAddremoveListMembersTofromStaticSegment.membersAdded) &&
        Objects.equals(this.membersRemoved, batchAddremoveListMembersTofromStaticSegment.membersRemoved) &&
        Objects.equals(this.errors, batchAddremoveListMembersTofromStaticSegment.errors) &&
        Objects.equals(this.totalAdded, batchAddremoveListMembersTofromStaticSegment.totalAdded) &&
        Objects.equals(this.totalRemoved, batchAddremoveListMembersTofromStaticSegment.totalRemoved) &&
        Objects.equals(this.errorCount, batchAddremoveListMembersTofromStaticSegment.errorCount) &&
        Objects.equals(this._links, batchAddremoveListMembersTofromStaticSegment._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(membersAdded, membersRemoved, errors, totalAdded, totalRemoved, errorCount, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchAddremoveListMembersTofromStaticSegment {\n");
    
    sb.append("    membersAdded: ").append(toIndentedString(membersAdded)).append("\n");
    sb.append("    membersRemoved: ").append(toIndentedString(membersRemoved)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    totalAdded: ").append(toIndentedString(totalAdded)).append("\n");
    sb.append("    totalRemoved: ").append(toIndentedString(totalRemoved)).append("\n");
    sb.append("    errorCount: ").append(toIndentedString(errorCount)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
