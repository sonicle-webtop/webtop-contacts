/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * A folder used to organize campaigns.
 */
@Schema(description = "A folder used to organize campaigns.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class CampaignFolder3 {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("count")
  private Integer count = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

  public CampaignFolder3 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the folder.
   * @return name
  **/
  @Schema(description = "The name of the folder.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * A string that uniquely identifies this campaign folder.
   * @return id
  **/
  @Schema(description = "A string that uniquely identifies this campaign folder.")
  public String getId() {
    return id;
  }

   /**
   * The number of campaigns in the folder.
   * @return count
  **/
  @Schema(description = "The number of campaigns in the folder.")
  public Integer getCount() {
    return count;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignFolder3 campaignFolder3 = (CampaignFolder3) o;
    return Objects.equals(this.name, campaignFolder3.name) &&
        Objects.equals(this.id, campaignFolder3.id) &&
        Objects.equals(this.count, campaignFolder3.count) &&
        Objects.equals(this._links, campaignFolder3._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, id, count, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignFolder3 {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
