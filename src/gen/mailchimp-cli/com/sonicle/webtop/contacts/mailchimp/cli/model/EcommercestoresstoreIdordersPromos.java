/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * EcommercestoresstoreIdordersPromos
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class EcommercestoresstoreIdordersPromos {
  @JsonProperty("code")
  private String code = null;

  @JsonProperty("amount_discounted")
  private BigDecimal amountDiscounted = null;

  /**
   * Type of discount. For free shipping set type to fixed
   */
  public enum TypeEnum {
    FIXED("fixed"),
    PERCENTAGE("percentage");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  public EcommercestoresstoreIdordersPromos code(String code) {
    this.code = code;
    return this;
  }

   /**
   * The Promo Code
   * @return code
  **/
  @Schema(required = true, description = "The Promo Code")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public EcommercestoresstoreIdordersPromos amountDiscounted(BigDecimal amountDiscounted) {
    this.amountDiscounted = amountDiscounted;
    return this;
  }

   /**
   * The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0
   * @return amountDiscounted
  **/
  @Schema(required = true, description = "The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0")
  public BigDecimal getAmountDiscounted() {
    return amountDiscounted;
  }

  public void setAmountDiscounted(BigDecimal amountDiscounted) {
    this.amountDiscounted = amountDiscounted;
  }

  public EcommercestoresstoreIdordersPromos type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of discount. For free shipping set type to fixed
   * @return type
  **/
  @Schema(required = true, description = "Type of discount. For free shipping set type to fixed")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EcommercestoresstoreIdordersPromos ecommercestoresstoreIdordersPromos = (EcommercestoresstoreIdordersPromos) o;
    return Objects.equals(this.code, ecommercestoresstoreIdordersPromos.code) &&
        Objects.equals(this.amountDiscounted, ecommercestoresstoreIdordersPromos.amountDiscounted) &&
        Objects.equals(this.type, ecommercestoresstoreIdordersPromos.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, amountDiscounted, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EcommercestoresstoreIdordersPromos {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    amountDiscounted: ").append(toIndentedString(amountDiscounted)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
