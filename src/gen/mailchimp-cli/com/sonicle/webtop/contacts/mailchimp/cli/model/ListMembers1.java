/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ListMembers4;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Manage members of a specific Mailchimp list, including currently subscribed, unsubscribed, and bounced members.
 */
@Schema(description = "Manage members of a specific Mailchimp list, including currently subscribed, unsubscribed, and bounced members.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class ListMembers1 {
  @JsonProperty("members")
  private List<ListMembers4> members = null;

  @JsonProperty("list_id")
  private String listId = null;

  @JsonProperty("total_items")
  private Integer totalItems = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

  public ListMembers1 members(List<ListMembers4> members) {
    this.members = members;
    return this;
  }

  public ListMembers1 addMembersItem(ListMembers4 membersItem) {
    if (this.members == null) {
      this.members = new ArrayList<>();
    }
    this.members.add(membersItem);
    return this;
  }

   /**
   * An array of objects, each representing a specific list member.
   * @return members
  **/
  @Schema(description = "An array of objects, each representing a specific list member.")
  public List<ListMembers4> getMembers() {
    return members;
  }

  public void setMembers(List<ListMembers4> members) {
    this.members = members;
  }

  public ListMembers1 listId(String listId) {
    this.listId = listId;
    return this;
  }

   /**
   * The list id.
   * @return listId
  **/
  @Schema(description = "The list id.")
  public String getListId() {
    return listId;
  }

  public void setListId(String listId) {
    this.listId = listId;
  }

   /**
   * The total number of items matching the query regardless of pagination.
   * @return totalItems
  **/
  @Schema(description = "The total number of items matching the query regardless of pagination.")
  public Integer getTotalItems() {
    return totalItems;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListMembers1 listMembers1 = (ListMembers1) o;
    return Objects.equals(this.members, listMembers1.members) &&
        Objects.equals(this.listId, listMembers1.listId) &&
        Objects.equals(this.totalItems, listMembers1.totalItems) &&
        Objects.equals(this._links, listMembers1._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(members, listId, totalItems, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListMembers1 {\n");
    
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    totalItems: ").append(toIndentedString(totalItems)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
