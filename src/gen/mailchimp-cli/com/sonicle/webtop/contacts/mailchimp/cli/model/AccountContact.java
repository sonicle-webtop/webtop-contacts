/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Information about the account contact.
 */
@Schema(description = "Information about the account contact.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class AccountContact {
  @JsonProperty("company")
  private String company = null;

  @JsonProperty("addr1")
  private String addr1 = null;

  @JsonProperty("addr2")
  private String addr2 = null;

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("zip")
  private String zip = null;

  @JsonProperty("country")
  private String country = null;

   /**
   * The company name for the account.
   * @return company
  **/
  @Schema(description = "The company name for the account.")
  public String getCompany() {
    return company;
  }

   /**
   * The street address for the account contact.
   * @return addr1
  **/
  @Schema(description = "The street address for the account contact.")
  public String getAddr1() {
    return addr1;
  }

   /**
   * The street address for the account contact.
   * @return addr2
  **/
  @Schema(description = "The street address for the account contact.")
  public String getAddr2() {
    return addr2;
  }

   /**
   * The city for the account contact.
   * @return city
  **/
  @Schema(description = "The city for the account contact.")
  public String getCity() {
    return city;
  }

   /**
   * The state for the account contact.
   * @return state
  **/
  @Schema(description = "The state for the account contact.")
  public String getState() {
    return state;
  }

   /**
   * The zip code for the account contact.
   * @return zip
  **/
  @Schema(description = "The zip code for the account contact.")
  public String getZip() {
    return zip;
  }

   /**
   * The country for the account contact.
   * @return country
  **/
  @Schema(description = "The country for the account contact.")
  public String getCountry() {
    return country;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountContact accountContact = (AccountContact) o;
    return Objects.equals(this.company, accountContact.company) &&
        Objects.equals(this.addr1, accountContact.addr1) &&
        Objects.equals(this.addr2, accountContact.addr2) &&
        Objects.equals(this.city, accountContact.city) &&
        Objects.equals(this.state, accountContact.state) &&
        Objects.equals(this.zip, accountContact.zip) &&
        Objects.equals(this.country, accountContact.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(company, addr1, addr2, city, state, zip, country);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountContact {\n");
    
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    addr1: ").append(toIndentedString(addr1)).append("\n");
    sb.append("    addr2: ").append(toIndentedString(addr2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
