/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * An individual folder listed in the File Manager.
 */
@Schema(description = "An individual folder listed in the File Manager.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class GalleryFolder1 {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("file_count")
  private Integer fileCount = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("created_by")
  private String createdBy = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

   /**
   * The unique id for the folder.
   * @return id
  **/
  @Schema(description = "The unique id for the folder.")
  public Integer getId() {
    return id;
  }

  public GalleryFolder1 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the folder.
   * @return name
  **/
  @Schema(description = "The name of the folder.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * The number of files in the folder.
   * @return fileCount
  **/
  @Schema(description = "The number of files in the folder.")
  public Integer getFileCount() {
    return fileCount;
  }

   /**
   * The date and time a file was added to the File Manager in ISO 8601 format.
   * @return createdAt
  **/
  @Schema(description = "The date and time a file was added to the File Manager in ISO 8601 format.")
  public DateTime getCreatedAt() {
    return createdAt;
  }

   /**
   * The username of the profile that created the folder.
   * @return createdBy
  **/
  @Schema(description = "The username of the profile that created the folder.")
  public String getCreatedBy() {
    return createdBy;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GalleryFolder1 galleryFolder1 = (GalleryFolder1) o;
    return Objects.equals(this.id, galleryFolder1.id) &&
        Objects.equals(this.name, galleryFolder1.name) &&
        Objects.equals(this.fileCount, galleryFolder1.fileCount) &&
        Objects.equals(this.createdAt, galleryFolder1.createdAt) &&
        Objects.equals(this.createdBy, galleryFolder1.createdBy) &&
        Objects.equals(this._links, galleryFolder1._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, fileCount, createdAt, createdBy, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GalleryFolder1 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    fileCount: ").append(toIndentedString(fileCount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
