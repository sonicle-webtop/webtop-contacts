/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * The [average campaign statistics](https://mailchimp.com/resources/research/email-marketing-benchmarks/?utm_source&#x3D;mc-api&amp;utm_medium&#x3D;docs&amp;utm_campaign&#x3D;apidocs) for all campaigns in the account&#x27;s specified industry.
 */
@Schema(description = "The [average campaign statistics](https://mailchimp.com/resources/research/email-marketing-benchmarks/?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for all campaigns in the account's specified industry.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class IndustryStats1 {
  @JsonProperty("open_rate")
  private BigDecimal openRate = null;

  @JsonProperty("bounce_rate")
  private BigDecimal bounceRate = null;

  @JsonProperty("click_rate")
  private BigDecimal clickRate = null;

   /**
   * The average unique open rate for all campaigns in the account&#x27;s specified industry.
   * @return openRate
  **/
  @Schema(description = "The average unique open rate for all campaigns in the account's specified industry.")
  public BigDecimal getOpenRate() {
    return openRate;
  }

   /**
   * The average bounce rate for all campaigns in the account&#x27;s specified industry.
   * @return bounceRate
  **/
  @Schema(description = "The average bounce rate for all campaigns in the account's specified industry.")
  public BigDecimal getBounceRate() {
    return bounceRate;
  }

   /**
   * The average unique click rate for all campaigns in the account&#x27;s specified industry.
   * @return clickRate
  **/
  @Schema(description = "The average unique click rate for all campaigns in the account's specified industry.")
  public BigDecimal getClickRate() {
    return clickRate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndustryStats1 industryStats1 = (IndustryStats1) o;
    return Objects.equals(this.openRate, industryStats1.openRate) &&
        Objects.equals(this.bounceRate, industryStats1.bounceRate) &&
        Objects.equals(this.clickRate, industryStats1.clickRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(openRate, bounceRate, clickRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndustryStats1 {\n");
    
    sb.append("    openRate: ").append(toIndentedString(openRate)).append("\n");
    sb.append("    bounceRate: ").append(toIndentedString(bounceRate)).append("\n");
    sb.append("    clickRate: ").append(toIndentedString(clickRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
