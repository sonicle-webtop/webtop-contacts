/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Information about a specific product image.
 */
@Schema(description = "Information about a specific product image.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class EcommerceProductImage1 {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("variant_ids")
  private List<String> variantIds = null;

  public EcommerceProductImage1 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A unique identifier for the product image.
   * @return id
  **/
  @Schema(description = "A unique identifier for the product image.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EcommerceProductImage1 url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The URL for a product image.
   * @return url
  **/
  @Schema(description = "The URL for a product image.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public EcommerceProductImage1 variantIds(List<String> variantIds) {
    this.variantIds = variantIds;
    return this;
  }

  public EcommerceProductImage1 addVariantIdsItem(String variantIdsItem) {
    if (this.variantIds == null) {
      this.variantIds = new ArrayList<>();
    }
    this.variantIds.add(variantIdsItem);
    return this;
  }

   /**
   * The list of product variants using the image.
   * @return variantIds
  **/
  @Schema(description = "The list of product variants using the image.")
  public List<String> getVariantIds() {
    return variantIds;
  }

  public void setVariantIds(List<String> variantIds) {
    this.variantIds = variantIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EcommerceProductImage1 ecommerceProductImage1 = (EcommerceProductImage1) o;
    return Objects.equals(this.id, ecommerceProductImage1.id) &&
        Objects.equals(this.url, ecommerceProductImage1.url) &&
        Objects.equals(this.variantIds, ecommerceProductImage1.variantIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, variantIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EcommerceProductImage1 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    variantIds: ").append(toIndentedString(variantIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
