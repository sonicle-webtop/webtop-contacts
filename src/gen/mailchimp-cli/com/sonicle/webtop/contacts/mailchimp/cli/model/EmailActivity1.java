/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sonicle.webtop.contacts.mailchimp.cli.model.MemberActivity;
import com.sonicle.webtop.contacts.mailchimp.cli.model.ResourceLink;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * A list of a member&#x27;s subscriber activity in a specific campaign, including opens, clicks, and bounces.
 */
@Schema(description = "A list of a member's subscriber activity in a specific campaign, including opens, clicks, and bounces.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class EmailActivity1 {
  @JsonProperty("campaign_id")
  private String campaignId = null;

  @JsonProperty("list_id")
  private String listId = null;

  @JsonProperty("list_is_active")
  private Boolean listIsActive = null;

  @JsonProperty("email_id")
  private String emailId = null;

  @JsonProperty("email_address")
  private String emailAddress = null;

  @JsonProperty("activity")
  private List<MemberActivity> activity = null;

  @JsonProperty("_links")
  private List<ResourceLink> _links = null;

   /**
   * The unique id for the campaign.
   * @return campaignId
  **/
  @Schema(description = "The unique id for the campaign.")
  public String getCampaignId() {
    return campaignId;
  }

   /**
   * The unique id for the list.
   * @return listId
  **/
  @Schema(description = "The unique id for the list.")
  public String getListId() {
    return listId;
  }

   /**
   * The status of the list used, namely if it&#x27;s deleted or disabled.
   * @return listIsActive
  **/
  @Schema(description = "The status of the list used, namely if it's deleted or disabled.")
  public Boolean isListIsActive() {
    return listIsActive;
  }

   /**
   * The MD5 hash of the lowercase version of the list member&#x27;s email address.
   * @return emailId
  **/
  @Schema(description = "The MD5 hash of the lowercase version of the list member's email address.")
  public String getEmailId() {
    return emailId;
  }

   /**
   * Email address for a subscriber.
   * @return emailAddress
  **/
  @Schema(description = "Email address for a subscriber.")
  public String getEmailAddress() {
    return emailAddress;
  }

  public EmailActivity1 activity(List<MemberActivity> activity) {
    this.activity = activity;
    return this;
  }

  public EmailActivity1 addActivityItem(MemberActivity activityItem) {
    if (this.activity == null) {
      this.activity = new ArrayList<>();
    }
    this.activity.add(activityItem);
    return this;
  }

   /**
   * An array of objects, each showing an interaction with the email.
   * @return activity
  **/
  @Schema(description = "An array of objects, each showing an interaction with the email.")
  public List<MemberActivity> getActivity() {
    return activity;
  }

  public void setActivity(List<MemberActivity> activity) {
    this.activity = activity;
  }

   /**
   * A list of link types and descriptions for the API schema documents.
   * @return _links
  **/
  @Schema(description = "A list of link types and descriptions for the API schema documents.")
  public List<ResourceLink> getLinks() {
    return _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailActivity1 emailActivity1 = (EmailActivity1) o;
    return Objects.equals(this.campaignId, emailActivity1.campaignId) &&
        Objects.equals(this.listId, emailActivity1.listId) &&
        Objects.equals(this.listIsActive, emailActivity1.listIsActive) &&
        Objects.equals(this.emailId, emailActivity1.emailId) &&
        Objects.equals(this.emailAddress, emailActivity1.emailAddress) &&
        Objects.equals(this.activity, emailActivity1.activity) &&
        Objects.equals(this._links, emailActivity1._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignId, listId, listIsActive, emailId, emailAddress, activity, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailActivity1 {\n");
    
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    listIsActive: ").append(toIndentedString(listIsActive)).append("\n");
    sb.append("    emailId: ").append(toIndentedString(emailId)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    activity: ").append(toIndentedString(activity)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
