/*
 * Mailchimp Marketing API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sonicle.webtop.contacts.mailchimp.cli.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * The outreach associated with this order. For example, an email campaign or Facebook ad.
 */
@Schema(description = "The outreach associated with this order. For example, an email campaign or Facebook ad.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-22T12:55:27.492+02:00[Europe/Berlin]")
public class Outreach1 {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("published_time")
  private DateTime publishedTime = null;

  public Outreach1 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A unique identifier for the outreach. Can be an email campaign ID.
   * @return id
  **/
  @Schema(example = "839488a60b", description = "A unique identifier for the outreach. Can be an email campaign ID.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

   /**
   * The name for the outreach.
   * @return name
  **/
  @Schema(example = "Freddie's Jokes", description = "The name for the outreach.")
  public String getName() {
    return name;
  }

   /**
   * The type of the outreach.
   * @return type
  **/
  @Schema(example = "regular", description = "The type of the outreach.")
  public String getType() {
    return type;
  }

   /**
   * The date and time the Outreach was published in ISO 8601 format.
   * @return publishedTime
  **/
  @Schema(example = "2017-06-06T13:56:12Z", description = "The date and time the Outreach was published in ISO 8601 format.")
  public DateTime getPublishedTime() {
    return publishedTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Outreach1 outreach1 = (Outreach1) o;
    return Objects.equals(this.id, outreach1.id) &&
        Objects.equals(this.name, outreach1.name) &&
        Objects.equals(this.type, outreach1.type) &&
        Objects.equals(this.publishedTime, outreach1.publishedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, type, publishedTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Outreach1 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    publishedTime: ").append(toIndentedString(publishedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
